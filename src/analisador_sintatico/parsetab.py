
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftCOMPARATORNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDEMODleftLSHIFTRSHIFTrightINCREMENTDECREMENTrightDOTAND AND_ASSIGN ARROW AUTO BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CASE CHAR COLON COMMA COMPARATOR CONST CONTINUE DECREMENT DEFAULT DEFINE DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE DOUBLEHASH ELLIPSIS ELSE ENUM EQUALS EXTERN FLOAT FLOAT_N FOR GE GOTO GT HASH ID IF INCLUDE INCREMENT INT INTEGER LBRACE LBRACKET LE LIBRARY LONG LPAREN LSHIFT LSHIFT_ASSIGN LT MAIN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NE NEWLINE NOT OR OR_ASSIGN PLUS PLUS_ASSIGN POWER RBRACE RBRACKET REGISTER RETURN RPAREN RSHIFT RSHIFT_ASSIGN SEMICOLON SHORT SIGNED SIZEOF STATIC STRING STRUCT SWITCH TERNARY TIMES TIMES_ASSIGN TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOR_ASSIGNprogram : optional_preprocessor_directives optional_declaration_list function_listoptional_preprocessor_directives : preprocessor_directive_list\n                                            | emptypreprocessor_directive_list : preprocessor_directive\n                                        | preprocessor_directive_list preprocessor_directivepreprocessor_directive : include_directive\n                                    | define_directiveinclude_directive : HASH INCLUDE LIBRARYdefine_directive : HASH DEFINE ID expression\n                            | HASH DEFINE IDoptional_declaration_list : declaration_listdeclaration_list : declaration_list declaration\n                            | emptyfunction_list : function\n                            | function_list functionfunction : main_function\n                    | type_specifier ID LPAREN parameter_list RPAREN compound_statement\n                    | type_specifier ID LPAREN RPAREN compound_statementmain_function : type_specifier MAIN LPAREN RPAREN compound_statementparameter_list : parameter\n                            | parameter_list COMMA parameter\n                            | emptyparameter : type_specifier IDcompound_statement : LBRACE statement_list RBRACEstatement_list : statement\n                            | statement_list statementstatement : declaration\n                        | assignment\n                        | if_statement\n                        | while_statement\n                        | return_statement\n                        | compound_statement\n                        | function_call SEMICOLON\n                        | break_statement\n                        | continue_statement\n                        | switch_statement\n                        | do_while_statement\n                        | for_statement\n                        | expression SEMICOLONdeclaration : type_specifier init_declarator_list SEMICOLON\n                        | typedef_declaration\n                        | struct_declarationtypedef_declaration : TYPEDEF struct_declarationstruct_declaration : STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLONstruct_members : struct_member\n                            | struct_members struct_memberstruct_member : type_specifier ID SEMICOLONoptional_id : ID\n                        | emptyinit_declarator_list : init_declarator\n                                | init_declarator_list COMMA init_declaratorinit_declarator : ID\n                            | ID EQUALS expression\n                            | ID EQUALS LBRACE initializer_list RBRACEinitializer_list : expression\n                            | initializer_list COMMA expressiontype_specifier : non_empty_pre_type_specifier base_type\n                        | non_empty_pre_type_specifier ID\n                        | IDnon_empty_pre_type_specifier : pre_type_specifierbase_type : INT\n                        | CHAR\n                        | FLOAT\n                        | DOUBLE\n                        | VOIDpre_type_specifier : CONST\n                            | VOLATILE\n                            | AUTO\n                            | REGISTER\n                            | STATIC\n                            | EXTERN\n                            | SIGNED\n                            | UNSIGNED\n                            | SHORT\n                            | LONG\n                            | emptyassignment : ID EQUALS expression SEMICOLONexpression : term\n                        | expression PLUS term\n                        | expression MINUS term\n                        | expression LT term\n                        | expression LE term\n                        | expression GT term\n                        | expression GE term\n                        | expression NE term\n                        | expression COMPARATOR term\n                        | expression BITWISE_AND term\n                        | expression BITWISE_OR term\n                        | expression BITWISE_XOR term\n                        | expression AND term\n                        | expression OR term\n                        | expression DOT ID\n                        | expression INCREMENT\n                        | expression DECREMENT\n                        | function_callterm : factor\n                | term TIMES factor\n                | term DIVIDE factor\n                | term MOD factor\n                | term LSHIFT factor\n                | term RSHIFT factorfactor : INTEGER\n                    | FLOAT_N\n                    | STRING\n                    | ID\n                    | ID INCREMENT\n                    | ID DECREMENT\n                    | LPAREN expression RPARENif_statement : IF factor statement\n                        | IF factor statement ELSE statementwhile_statement : WHILE factor statementdo_while_statement : DO statement WHILE factor SEMICOLONfor_statement : FOR LPAREN declaration expression SEMICOLON expression RPAREN statement\n                            | FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statementswitch_statement : SWITCH factor LBRACE case_list default_case RBRACEcase_list : case\n                        | case_list case\n                        | emptycase : CASE expression COLON statement_listdefault_case : DEFAULT COLON statement_list\n                        | emptybreak_statement : BREAK SEMICOLONcontinue_statement : CONTINUE SEMICOLONreturn_statement : RETURN expression SEMICOLONfunction_call : ID LPAREN RPAREN\n                            | ID LPAREN argument_list RPARENargument_list : expression\n                            | argument_list COMMA expressionempty :'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,44,45,46,47,48,49,50,54,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,102,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,142,143,145,146,147,149,150,151,152,153,154,155,156,158,159,160,161,162,164,165,166,167,170,171,174,176,178,179,180,181,182,183,184,186,187,190,192,194,195,196,198,199,201,202,203,207,210,211,217,218,220,221,222,224,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,19,19,-13,-5,40,19,-14,-16,42,-59,45,-60,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-12,53,-41,-42,56,-8,58,-15,-57,-58,-61,-62,-63,-64,-65,-43,-105,-9,-78,-95,-96,58,-102,-103,-104,19,-40,53,58,19,58,-106,-107,114,114,114,114,114,114,114,114,114,114,114,114,114,127,-93,-94,114,114,114,114,114,134,-76,58,19,-45,144,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,19,-18,164,-19,175,-46,-126,58,-17,164,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-59,114,114,58,114,164,58,-47,-24,-26,-33,-39,58,164,164,-122,-123,201,-44,-109,-111,-124,114,58,-59,-77,164,58,58,-110,-112,58,-115,164,164,58,164,164,164,-113,164,-114,]),'CONST':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,22,22,-13,-5,22,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,22,-40,22,-106,-107,-93,-94,22,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,22,-18,22,-19,-46,-126,-17,22,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,22,-47,-24,-26,-33,-39,22,22,-122,-123,22,-44,-109,-111,-124,-77,22,-110,-112,-115,22,22,22,22,22,-113,22,-114,]),'VOLATILE':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,23,23,-13,-5,23,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,23,-40,23,-106,-107,-93,-94,23,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,23,-18,23,-19,-46,-126,-17,23,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,23,-47,-24,-26,-33,-39,23,23,-122,-123,23,-44,-109,-111,-124,-77,23,-110,-112,-115,23,23,23,23,23,-113,23,-114,]),'AUTO':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,24,24,-13,-5,24,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,24,-40,24,-106,-107,-93,-94,24,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,24,-18,24,-19,-46,-126,-17,24,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,24,-47,-24,-26,-33,-39,24,24,-122,-123,24,-44,-109,-111,-124,-77,24,-110,-112,-115,24,24,24,24,24,-113,24,-114,]),'REGISTER':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,25,25,-13,-5,25,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,25,-40,25,-106,-107,-93,-94,25,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,25,-18,25,-19,-46,-126,-17,25,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,25,-47,-24,-26,-33,-39,25,25,-122,-123,25,-44,-109,-111,-124,-77,25,-110,-112,-115,25,25,25,25,25,-113,25,-114,]),'STATIC':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,26,26,-13,-5,26,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,26,-40,26,-106,-107,-93,-94,26,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,26,-18,26,-19,-46,-126,-17,26,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,26,-47,-24,-26,-33,-39,26,26,-122,-123,26,-44,-109,-111,-124,-77,26,-110,-112,-115,26,26,26,26,26,-113,26,-114,]),'EXTERN':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,27,27,-13,-5,27,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,27,-40,27,-106,-107,-93,-94,27,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,27,-18,27,-19,-46,-126,-17,27,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,27,-47,-24,-26,-33,-39,27,27,-122,-123,27,-44,-109,-111,-124,-77,27,-110,-112,-115,27,27,27,27,27,-113,27,-114,]),'SIGNED':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,28,28,-13,-5,28,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,28,-40,28,-106,-107,-93,-94,28,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,28,-18,28,-19,-46,-126,-17,28,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,28,-47,-24,-26,-33,-39,28,28,-122,-123,28,-44,-109,-111,-124,-77,28,-110,-112,-115,28,28,28,28,28,-113,28,-114,]),'UNSIGNED':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,29,29,-13,-5,29,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,29,-40,29,-106,-107,-93,-94,29,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,29,-18,29,-19,-46,-126,-17,29,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,29,-47,-24,-26,-33,-39,29,29,-122,-123,29,-44,-109,-111,-124,-77,29,-110,-112,-115,29,29,29,29,29,-113,29,-114,]),'SHORT':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,30,30,-13,-5,30,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,30,-40,30,-106,-107,-93,-94,30,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,30,-18,30,-19,-46,-126,-17,30,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,30,-47,-24,-26,-33,-39,30,30,-122,-123,30,-44,-109,-111,-124,-77,30,-110,-112,-115,30,30,30,30,30,-113,30,-114,]),'LONG':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,31,31,-13,-5,31,-14,-16,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,31,-40,31,-106,-107,-93,-94,31,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,31,-18,31,-19,-46,-126,-17,31,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,31,-47,-24,-26,-33,-39,31,31,-122,-123,31,-44,-109,-111,-124,-77,31,-110,-112,-115,31,31,31,31,31,-113,31,-114,]),'INT':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,102,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,-129,-11,-13,-5,-129,-14,-16,46,-60,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,-129,-40,-129,-106,-107,-93,-94,-76,-129,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-129,-18,-129,-19,-46,-126,-17,-129,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-129,-47,-24,-26,-33,-39,-129,-129,-122,-123,-129,-44,-109,-111,-124,-77,-129,-110,-112,-115,-129,-129,-129,-129,-129,-113,-129,-114,]),'CHAR':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,102,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,-129,-11,-13,-5,-129,-14,-16,47,-60,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,-129,-40,-129,-106,-107,-93,-94,-76,-129,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-129,-18,-129,-19,-46,-126,-17,-129,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-129,-47,-24,-26,-33,-39,-129,-129,-122,-123,-129,-44,-109,-111,-124,-77,-129,-110,-112,-115,-129,-129,-129,-129,-129,-113,-129,-114,]),'FLOAT':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,102,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,-129,-11,-13,-5,-129,-14,-16,48,-60,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,-129,-40,-129,-106,-107,-93,-94,-76,-129,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-129,-18,-129,-19,-46,-126,-17,-129,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-129,-47,-24,-26,-33,-39,-129,-129,-122,-123,-129,-44,-109,-111,-124,-77,-129,-110,-112,-115,-129,-129,-129,-129,-129,-113,-129,-114,]),'DOUBLE':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,102,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,-129,-11,-13,-5,-129,-14,-16,49,-60,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,-129,-40,-129,-106,-107,-93,-94,-76,-129,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-129,-18,-129,-19,-46,-126,-17,-129,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-129,-47,-24,-26,-33,-39,-129,-129,-122,-123,-129,-44,-109,-111,-124,-77,-129,-110,-112,-115,-129,-129,-129,-129,-129,-113,-129,-114,]),'VOID':([0,2,3,4,5,6,7,9,10,11,12,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,54,58,59,60,61,62,64,65,66,67,69,72,74,75,90,91,102,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,143,145,147,149,150,151,152,153,154,155,156,158,159,160,161,162,171,176,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,-129,-11,-13,-5,-129,-14,-16,50,-60,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-12,-41,-42,-8,-10,-15,-43,-105,-9,-78,-95,-96,-102,-103,-104,-129,-40,-129,-106,-107,-93,-94,-76,-129,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-129,-18,-129,-19,-46,-126,-17,-129,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-129,-47,-24,-26,-33,-39,-129,-129,-122,-123,-129,-44,-109,-111,-124,-77,-129,-110,-112,-115,-129,-129,-129,-129,-129,-113,-129,-114,]),'TYPEDEF':([0,2,3,4,5,6,7,10,11,12,33,35,36,39,40,54,58,59,60,61,62,64,65,66,69,74,75,90,91,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,145,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,37,-13,-5,-12,-41,-42,-8,-10,-43,-105,-9,-78,-95,-96,-102,-103,-104,-40,-106,-107,-93,-94,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,37,-126,37,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,37,-24,-26,-33,-39,37,37,-122,-123,37,-44,-109,-111,-124,-77,37,-110,-112,-115,37,37,37,37,37,-113,37,-114,]),'STRUCT':([0,2,3,4,5,6,7,10,11,12,33,35,36,37,39,40,54,58,59,60,61,62,64,65,66,69,74,75,90,91,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,145,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,190,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-129,-129,-2,-3,-4,-6,-7,38,-13,-5,-12,-41,-42,38,-8,-10,-43,-105,-9,-78,-95,-96,-102,-103,-104,-40,-106,-107,-93,-94,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,38,-126,38,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,38,-24,-26,-33,-39,38,38,-122,-123,38,-44,-109,-111,-124,-77,38,-110,-112,-115,38,38,38,38,38,-113,38,-114,]),'HASH':([0,3,5,6,7,12,39,40,58,59,60,61,62,64,65,66,74,75,90,91,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,145,],[8,8,-4,-6,-7,-5,-8,-10,-105,-9,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-126,]),'$end':([1,15,16,17,41,137,139,147,178,],[0,-1,-14,-16,-15,-18,-19,-17,-24,]),'INCLUDE':([8,],[13,]),'DEFINE':([8,],[14,]),'LIBRARY':([13,],[39,]),'MAIN':([18,19,44,45,46,47,48,49,50,],[43,-59,-57,-58,-61,-62,-63,-64,-65,]),'RBRACE':([35,36,54,58,60,61,62,64,65,66,69,74,75,90,91,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,140,141,143,145,149,150,151,152,153,154,155,156,158,159,160,161,162,176,178,179,180,181,186,187,191,192,194,195,196,197,202,204,205,206,211,212,213,215,217,220,225,226,229,231,],[-41,-42,-43,-105,-78,-95,-96,-102,-103,-104,-40,-106,-107,-93,-94,142,-45,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,173,-55,-46,-126,178,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-47,-24,-26,-33,-39,-122,-123,-56,-44,-109,-111,-124,-129,-77,-129,-116,-118,-110,220,-117,-121,-112,-115,-120,-119,-113,-114,]),'IF':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,165,165,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,165,-24,-26,-33,-39,165,165,-122,-123,-44,-109,-111,-124,-77,165,-110,-112,-115,165,165,165,165,165,-113,165,-114,]),'WHILE':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,189,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,166,166,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,166,-24,-26,-33,-39,166,166,-122,-123,198,-44,-109,-111,-124,-77,166,-110,-112,-115,166,166,166,166,166,-113,166,-114,]),'RETURN':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,167,167,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,167,-24,-26,-33,-39,167,167,-122,-123,-44,-109,-111,-124,-77,167,-110,-112,-115,167,167,167,167,167,-113,167,-114,]),'LBRACE':([35,36,38,54,55,56,57,64,65,66,69,71,74,75,100,103,114,133,135,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,188,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-129,-43,72,-48,-49,-102,-103,-104,-40,106,-106,-107,138,138,-105,-108,138,138,138,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,138,-24,-26,-33,-39,138,138,-122,-123,197,-44,-109,-111,-124,-77,138,-110,-112,-115,138,138,138,138,138,-113,138,-114,]),'BREAK':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,168,168,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,168,-24,-26,-33,-39,168,168,-122,-123,-44,-109,-111,-124,-77,168,-110,-112,-115,168,168,168,168,168,-113,168,-114,]),'CONTINUE':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,169,169,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,169,-24,-26,-33,-39,169,169,-122,-123,-44,-109,-111,-124,-77,169,-110,-112,-115,169,169,169,169,169,-113,169,-114,]),'SWITCH':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,170,170,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,170,-24,-26,-33,-39,170,170,-122,-123,-44,-109,-111,-124,-77,170,-110,-112,-115,170,170,170,170,170,-113,170,-114,]),'DO':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,171,171,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,171,-24,-26,-33,-39,171,171,-122,-123,-44,-109,-111,-124,-77,171,-110,-112,-115,171,171,171,171,171,-113,171,-114,]),'FOR':([35,36,54,64,65,66,69,74,75,114,133,138,149,150,151,152,153,154,155,156,158,159,160,161,162,171,178,179,180,181,183,184,186,187,192,194,195,196,202,203,211,217,220,221,222,225,226,227,229,230,231,],[-41,-42,-43,-102,-103,-104,-40,-106,-107,-105,-108,172,172,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,172,-24,-26,-33,-39,172,172,-122,-123,-44,-109,-111,-124,-77,172,-110,-112,-115,172,172,172,172,172,-113,172,-114,]),'INTEGER':([35,36,40,54,63,64,65,66,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,106,114,133,138,146,149,150,151,152,153,154,155,156,158,159,160,161,162,165,166,167,170,171,174,178,179,180,181,182,183,184,186,187,190,192,194,195,196,198,199,202,203,207,210,211,217,218,220,221,222,224,225,226,227,229,230,231,],[-41,-42,64,-43,64,-102,-103,-104,-40,64,64,-106,-107,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-105,-108,64,64,64,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,64,64,64,64,64,64,-24,-26,-33,-39,64,64,64,-122,-123,64,-44,-109,-111,-124,64,64,-77,64,64,64,-110,-112,64,-115,64,64,64,64,64,64,-113,64,-114,]),'FLOAT_N':([35,36,40,54,63,64,65,66,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,106,114,133,138,146,149,150,151,152,153,154,155,156,158,159,160,161,162,165,166,167,170,171,174,178,179,180,181,182,183,184,186,187,190,192,194,195,196,198,199,202,203,207,210,211,217,218,220,221,222,224,225,226,227,229,230,231,],[-41,-42,65,-43,65,-102,-103,-104,-40,65,65,-106,-107,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-105,-108,65,65,65,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,65,65,65,65,65,65,-24,-26,-33,-39,65,65,65,-122,-123,65,-44,-109,-111,-124,65,65,-77,65,65,65,-110,-112,65,-115,65,65,65,65,65,65,-113,65,-114,]),'STRING':([35,36,40,54,63,64,65,66,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,106,114,133,138,146,149,150,151,152,153,154,155,156,158,159,160,161,162,165,166,167,170,171,174,178,179,180,181,182,183,184,186,187,190,192,194,195,196,198,199,202,203,207,210,211,217,218,220,221,222,224,225,226,227,229,230,231,],[-41,-42,66,-43,66,-102,-103,-104,-40,66,66,-106,-107,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-105,-108,66,66,66,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,66,66,66,66,66,66,-24,-26,-33,-39,66,66,66,-122,-123,66,-44,-109,-111,-124,66,66,-77,66,66,66,-110,-112,66,-115,66,66,66,66,66,66,-113,66,-114,]),'LPAREN':([35,36,40,42,43,54,58,63,64,65,66,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,106,114,133,138,146,149,150,151,152,153,154,155,156,158,159,160,161,162,164,165,166,167,170,171,172,174,178,179,180,181,182,183,184,186,187,190,192,194,195,196,198,199,201,202,203,207,210,211,217,218,220,221,222,224,225,226,227,229,230,231,],[-41,-42,63,67,68,-43,73,63,-102,-103,-104,-40,63,63,-106,-107,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-105,-108,63,63,63,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,73,63,63,63,63,63,190,63,-24,-26,-33,-39,63,63,63,-122,-123,63,-44,-109,-111,-124,63,63,73,-77,63,63,63,-110,-112,63,-115,63,63,63,63,63,63,-113,63,-114,]),'ELSE':([35,36,54,69,151,152,153,154,155,156,158,159,160,161,162,178,180,181,186,187,192,194,195,196,202,211,217,220,229,231,],[-41,-42,-43,-40,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-24,-33,-39,-122,-123,-44,203,-111,-124,-77,-110,-112,-115,-113,-114,]),'DEFAULT':([35,36,54,69,150,151,152,153,154,155,156,158,159,160,161,162,178,179,180,181,186,187,192,194,195,196,197,202,204,205,206,211,213,217,220,226,229,231,],[-41,-42,-43,-40,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-24,-26,-33,-39,-122,-123,-44,-109,-111,-124,-129,-77,214,-116,-118,-110,-117,-112,-115,-119,-113,-114,]),'CASE':([35,36,54,69,150,151,152,153,154,155,156,158,159,160,161,162,178,179,180,181,186,187,192,194,195,196,197,202,204,205,206,211,213,217,220,226,229,231,],[-41,-42,-43,-40,-25,-27,-28,-29,-30,-31,-32,-34,-35,-36,-37,-38,-24,-26,-33,-39,-122,-123,-44,-109,-111,-124,207,-77,207,-116,-118,-110,-117,-112,-115,-119,-113,-114,]),'SEMICOLON':([51,52,53,58,60,61,62,64,65,66,74,75,90,91,104,105,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,144,145,157,163,164,168,169,173,175,185,193,200,201,208,209,219,],[69,-50,-52,-105,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,-51,-53,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,176,-126,180,181,-105,186,187,-54,192,196,202,210,-105,217,218,224,]),'COMMA':([51,52,53,58,60,61,62,64,65,66,67,74,75,90,91,99,101,102,104,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,140,141,145,148,173,177,191,],[70,-50,-52,-105,-78,-95,-96,-102,-103,-104,-129,-106,-107,-93,-94,136,-20,-22,-51,-53,-125,146,-127,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-23,174,-55,-126,-21,-54,-128,-56,]),'EQUALS':([53,164,],[71,182,]),'TIMES':([58,60,62,64,65,66,74,75,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,164,201,],[-105,92,-96,-102,-103,-104,-106,-107,92,-105,92,92,92,92,92,92,92,92,92,92,92,92,-97,-98,-99,-100,-101,-108,-105,-105,]),'DIVIDE':([58,60,62,64,65,66,74,75,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,164,201,],[-105,93,-96,-102,-103,-104,-106,-107,93,-105,93,93,93,93,93,93,93,93,93,93,93,93,-97,-98,-99,-100,-101,-108,-105,-105,]),'MOD':([58,60,62,64,65,66,74,75,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,164,201,],[-105,94,-96,-102,-103,-104,-106,-107,94,-105,94,94,94,94,94,94,94,94,94,94,94,94,-97,-98,-99,-100,-101,-108,-105,-105,]),'LSHIFT':([58,60,62,64,65,66,74,75,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,164,201,],[-105,95,-96,-102,-103,-104,-106,-107,95,-105,95,95,95,95,95,95,95,95,95,95,95,95,-97,-98,-99,-100,-101,-108,-105,-105,]),'RSHIFT':([58,60,62,64,65,66,74,75,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,164,201,],[-105,96,-96,-102,-103,-104,-106,-107,96,-105,96,96,96,96,96,96,96,96,96,96,96,96,-97,-98,-99,-100,-101,-108,-105,-105,]),'PLUS':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,76,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,76,76,-125,76,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,76,-126,-95,76,-105,76,76,76,76,76,-105,76,76,76,76,76,]),'MINUS':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,77,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,77,77,-125,77,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,77,-126,-95,77,-105,77,77,77,77,77,-105,77,77,77,77,77,]),'LT':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,78,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,78,78,-125,78,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,78,-126,-95,78,-105,78,78,78,78,78,-105,78,78,78,78,78,]),'LE':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,79,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,79,79,-125,79,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,79,-126,-95,79,-105,79,79,79,79,79,-105,79,79,79,79,79,]),'GT':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,80,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,80,80,-125,80,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,80,-126,-95,80,-105,80,80,80,80,80,-105,80,80,80,80,80,]),'GE':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,81,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,81,81,-125,81,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,81,-126,-95,81,-105,81,81,81,81,81,-105,81,81,81,81,81,]),'NE':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,82,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,82,82,-125,82,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,82,-126,-95,82,-105,82,82,82,82,82,-105,82,82,82,82,82,]),'COMPARATOR':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,83,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,83,83,-125,83,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,83,-126,-95,83,-105,83,83,83,83,83,-105,83,83,83,83,83,]),'BITWISE_AND':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,84,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,84,84,-125,84,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,84,-126,-95,84,-105,84,84,84,84,84,-105,84,84,84,84,84,]),'BITWISE_OR':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,85,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,85,85,-125,85,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,85,-126,-95,85,-105,85,85,85,85,85,-105,85,85,85,85,85,]),'BITWISE_XOR':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,86,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,86,86,-125,86,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,86,-126,-95,86,-105,86,86,86,86,86,-105,86,86,86,86,86,]),'AND':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,87,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,87,87,-125,87,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,87,-126,-95,87,-105,87,87,87,87,87,-105,87,87,87,87,87,]),'OR':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,88,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,88,88,-125,88,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,88,-126,-95,88,-105,88,88,88,88,88,-105,88,88,88,88,88,]),'DOT':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[-105,89,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,89,89,-125,89,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,89,-126,-95,89,-105,89,89,89,89,89,-105,89,89,89,89,89,]),'INCREMENT':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[74,90,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,90,90,-125,90,-79,74,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,90,-126,-95,90,74,90,90,90,90,90,74,90,90,90,90,90,]),'DECREMENT':([58,59,60,61,62,64,65,66,74,75,90,91,97,105,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,141,145,157,163,164,177,185,191,193,200,201,209,216,219,223,228,],[75,91,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,91,91,-125,91,-79,75,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,91,-126,-95,91,75,91,91,91,91,91,75,91,91,91,91,91,]),'RPAREN':([58,60,61,62,64,65,66,67,68,73,74,75,90,91,97,99,101,102,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,145,148,177,223,228,],[-105,-78,-95,-96,-102,-103,-104,100,103,110,-106,-107,-93,-94,133,135,-20,-22,-125,145,-127,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-23,-126,-21,-128,227,230,]),'COLON':([58,60,61,62,64,65,66,74,75,90,91,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,145,214,216,],[-105,-78,-95,-96,-102,-103,-104,-106,-107,-93,-94,-125,-79,-105,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-97,-98,-99,-100,-101,-108,-126,221,222,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'optional_preprocessor_directives':([0,],[2,]),'preprocessor_directive_list':([0,],[3,]),'empty':([0,2,9,10,15,38,67,72,107,136,138,149,171,183,184,190,197,203,204,221,222,225,226,227,230,],[4,11,32,32,32,57,102,32,32,32,32,32,32,32,32,32,206,32,215,32,32,32,32,32,32,]),'preprocessor_directive':([0,3,],[5,12,]),'include_directive':([0,3,],[6,6,]),'define_directive':([0,3,],[7,7,]),'optional_declaration_list':([2,],[9,]),'declaration_list':([2,],[10,]),'function_list':([9,],[15,]),'function':([9,15,],[16,41,]),'main_function':([9,15,],[17,17,]),'type_specifier':([9,10,15,67,72,107,136,138,149,171,183,184,190,203,221,222,225,226,227,230,],[18,34,18,98,109,109,98,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'non_empty_pre_type_specifier':([9,10,15,67,72,107,136,138,149,171,183,184,190,203,221,222,225,226,227,230,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'pre_type_specifier':([9,10,15,67,72,107,136,138,149,171,183,184,190,203,221,222,225,226,227,230,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'declaration':([10,138,149,171,183,184,190,203,221,222,225,226,227,230,],[33,151,151,151,151,151,199,151,151,151,151,151,151,151,]),'typedef_declaration':([10,138,149,171,183,184,190,203,221,222,225,226,227,230,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'struct_declaration':([10,37,138,149,171,183,184,190,203,221,222,225,226,227,230,],[36,54,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'base_type':([20,],[44,]),'init_declarator_list':([34,],[51,]),'init_declarator':([34,70,],[52,104,]),'optional_id':([38,],[55,]),'expression':([40,63,71,73,106,138,146,149,167,171,174,182,183,184,190,199,203,207,210,218,221,222,224,225,226,227,230,],[59,97,105,112,141,163,177,163,185,163,191,193,163,163,200,209,163,216,219,223,163,163,228,163,163,163,163,]),'term':([40,63,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,106,138,146,149,167,171,174,182,183,184,190,199,203,207,210,218,221,222,224,225,226,227,230,],[60,60,60,60,113,115,116,117,118,119,120,121,122,123,124,125,126,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'function_call':([40,63,71,73,106,138,146,149,167,171,174,182,183,184,190,199,203,207,210,218,221,222,224,225,226,227,230,],[61,61,61,61,61,157,61,157,61,157,61,61,157,157,61,61,157,61,61,61,157,157,61,157,157,157,157,]),'factor':([40,63,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,106,138,146,149,165,166,167,170,171,174,182,183,184,190,198,199,203,207,210,218,221,222,224,225,226,227,230,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,128,129,130,131,132,62,62,62,62,183,184,62,188,62,62,62,62,62,62,208,62,62,62,62,62,62,62,62,62,62,62,62,]),'parameter_list':([67,],[99,]),'parameter':([67,136,],[101,148,]),'struct_members':([72,],[107,]),'struct_member':([72,107,],[108,143,]),'argument_list':([73,],[111,]),'compound_statement':([100,103,135,138,149,171,183,184,203,221,222,225,226,227,230,],[137,139,147,156,156,156,156,156,156,156,156,156,156,156,156,]),'initializer_list':([106,],[140,]),'statement_list':([138,221,222,],[149,225,226,]),'statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[150,179,189,194,195,211,150,150,179,179,229,231,]),'assignment':([138,149,171,183,184,203,221,222,225,226,227,230,],[152,152,152,152,152,152,152,152,152,152,152,152,]),'if_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[153,153,153,153,153,153,153,153,153,153,153,153,]),'while_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[154,154,154,154,154,154,154,154,154,154,154,154,]),'return_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[155,155,155,155,155,155,155,155,155,155,155,155,]),'break_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[158,158,158,158,158,158,158,158,158,158,158,158,]),'continue_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[159,159,159,159,159,159,159,159,159,159,159,159,]),'switch_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[160,160,160,160,160,160,160,160,160,160,160,160,]),'do_while_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[161,161,161,161,161,161,161,161,161,161,161,161,]),'for_statement':([138,149,171,183,184,203,221,222,225,226,227,230,],[162,162,162,162,162,162,162,162,162,162,162,162,]),'case_list':([197,],[204,]),'case':([197,204,],[205,213,]),'default_case':([204,],[212,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> optional_preprocessor_directives optional_declaration_list function_list','program',3,'p_program','grammar_rules.py',46),
  ('optional_preprocessor_directives -> preprocessor_directive_list','optional_preprocessor_directives',1,'p_optional_preprocessor_directives','grammar_rules.py',50),
  ('optional_preprocessor_directives -> empty','optional_preprocessor_directives',1,'p_optional_preprocessor_directives','grammar_rules.py',51),
  ('preprocessor_directive_list -> preprocessor_directive','preprocessor_directive_list',1,'p_preprocessor_directive_list','grammar_rules.py',55),
  ('preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive','preprocessor_directive_list',2,'p_preprocessor_directive_list','grammar_rules.py',56),
  ('preprocessor_directive -> include_directive','preprocessor_directive',1,'p_preprocessor_directive','grammar_rules.py',60),
  ('preprocessor_directive -> define_directive','preprocessor_directive',1,'p_preprocessor_directive','grammar_rules.py',61),
  ('include_directive -> HASH INCLUDE LIBRARY','include_directive',3,'p_include_directive','grammar_rules.py',65),
  ('define_directive -> HASH DEFINE ID expression','define_directive',4,'p_define_directive','grammar_rules.py',69),
  ('define_directive -> HASH DEFINE ID','define_directive',3,'p_define_directive','grammar_rules.py',70),
  ('optional_declaration_list -> declaration_list','optional_declaration_list',1,'p_optional_declaration_list','grammar_rules.py',74),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','grammar_rules.py',78),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','grammar_rules.py',79),
  ('function_list -> function','function_list',1,'p_function_list','grammar_rules.py',86),
  ('function_list -> function_list function','function_list',2,'p_function_list','grammar_rules.py',87),
  ('function -> main_function','function',1,'p_function','grammar_rules.py',91),
  ('function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement','function',6,'p_function','grammar_rules.py',92),
  ('function -> type_specifier ID LPAREN RPAREN compound_statement','function',5,'p_function','grammar_rules.py',93),
  ('main_function -> type_specifier MAIN LPAREN RPAREN compound_statement','main_function',5,'p_main_function','grammar_rules.py',97),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','grammar_rules.py',101),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','grammar_rules.py',102),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','grammar_rules.py',103),
  ('parameter -> type_specifier ID','parameter',2,'p_parameter','grammar_rules.py',107),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','grammar_rules.py',112),
  ('statement_list -> statement','statement_list',1,'p_statement_list','grammar_rules.py',116),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','grammar_rules.py',117),
  ('statement -> declaration','statement',1,'p_statement','grammar_rules.py',121),
  ('statement -> assignment','statement',1,'p_statement','grammar_rules.py',122),
  ('statement -> if_statement','statement',1,'p_statement','grammar_rules.py',123),
  ('statement -> while_statement','statement',1,'p_statement','grammar_rules.py',124),
  ('statement -> return_statement','statement',1,'p_statement','grammar_rules.py',125),
  ('statement -> compound_statement','statement',1,'p_statement','grammar_rules.py',126),
  ('statement -> function_call SEMICOLON','statement',2,'p_statement','grammar_rules.py',127),
  ('statement -> break_statement','statement',1,'p_statement','grammar_rules.py',128),
  ('statement -> continue_statement','statement',1,'p_statement','grammar_rules.py',129),
  ('statement -> switch_statement','statement',1,'p_statement','grammar_rules.py',130),
  ('statement -> do_while_statement','statement',1,'p_statement','grammar_rules.py',131),
  ('statement -> for_statement','statement',1,'p_statement','grammar_rules.py',132),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','grammar_rules.py',133),
  ('declaration -> type_specifier init_declarator_list SEMICOLON','declaration',3,'p_declaration','grammar_rules.py',137),
  ('declaration -> typedef_declaration','declaration',1,'p_declaration','grammar_rules.py',138),
  ('declaration -> struct_declaration','declaration',1,'p_declaration','grammar_rules.py',139),
  ('typedef_declaration -> TYPEDEF struct_declaration','typedef_declaration',2,'p_typedef_declaration','grammar_rules.py',143),
  ('struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON','struct_declaration',7,'p_struct_declaration','grammar_rules.py',147),
  ('struct_members -> struct_member','struct_members',1,'p_struct_members','grammar_rules.py',151),
  ('struct_members -> struct_members struct_member','struct_members',2,'p_struct_members','grammar_rules.py',152),
  ('struct_member -> type_specifier ID SEMICOLON','struct_member',3,'p_struct_member','grammar_rules.py',156),
  ('optional_id -> ID','optional_id',1,'p_optional_id','grammar_rules.py',161),
  ('optional_id -> empty','optional_id',1,'p_optional_id','grammar_rules.py',162),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','grammar_rules.py',166),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','grammar_rules.py',167),
  ('init_declarator -> ID','init_declarator',1,'p_init_declarator','grammar_rules.py',171),
  ('init_declarator -> ID EQUALS expression','init_declarator',3,'p_init_declarator','grammar_rules.py',172),
  ('init_declarator -> ID EQUALS LBRACE initializer_list RBRACE','init_declarator',5,'p_init_declarator','grammar_rules.py',173),
  ('initializer_list -> expression','initializer_list',1,'p_initializer_list','grammar_rules.py',178),
  ('initializer_list -> initializer_list COMMA expression','initializer_list',3,'p_initializer_list','grammar_rules.py',179),
  ('type_specifier -> non_empty_pre_type_specifier base_type','type_specifier',2,'p_type_specifier','grammar_rules.py',183),
  ('type_specifier -> non_empty_pre_type_specifier ID','type_specifier',2,'p_type_specifier','grammar_rules.py',184),
  ('type_specifier -> ID','type_specifier',1,'p_type_specifier','grammar_rules.py',185),
  ('non_empty_pre_type_specifier -> pre_type_specifier','non_empty_pre_type_specifier',1,'p_non_empty_pre_type_specifier','grammar_rules.py',193),
  ('base_type -> INT','base_type',1,'p_base_type','grammar_rules.py',197),
  ('base_type -> CHAR','base_type',1,'p_base_type','grammar_rules.py',198),
  ('base_type -> FLOAT','base_type',1,'p_base_type','grammar_rules.py',199),
  ('base_type -> DOUBLE','base_type',1,'p_base_type','grammar_rules.py',200),
  ('base_type -> VOID','base_type',1,'p_base_type','grammar_rules.py',201),
  ('pre_type_specifier -> CONST','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',206),
  ('pre_type_specifier -> VOLATILE','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',207),
  ('pre_type_specifier -> AUTO','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',208),
  ('pre_type_specifier -> REGISTER','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',209),
  ('pre_type_specifier -> STATIC','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',210),
  ('pre_type_specifier -> EXTERN','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',211),
  ('pre_type_specifier -> SIGNED','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',212),
  ('pre_type_specifier -> UNSIGNED','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',213),
  ('pre_type_specifier -> SHORT','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',214),
  ('pre_type_specifier -> LONG','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',215),
  ('pre_type_specifier -> empty','pre_type_specifier',1,'p_pre_type_specifier','grammar_rules.py',216),
  ('assignment -> ID EQUALS expression SEMICOLON','assignment',4,'p_assignment','grammar_rules.py',220),
  ('expression -> term','expression',1,'p_expression','grammar_rules.py',225),
  ('expression -> expression PLUS term','expression',3,'p_expression','grammar_rules.py',226),
  ('expression -> expression MINUS term','expression',3,'p_expression','grammar_rules.py',227),
  ('expression -> expression LT term','expression',3,'p_expression','grammar_rules.py',228),
  ('expression -> expression LE term','expression',3,'p_expression','grammar_rules.py',229),
  ('expression -> expression GT term','expression',3,'p_expression','grammar_rules.py',230),
  ('expression -> expression GE term','expression',3,'p_expression','grammar_rules.py',231),
  ('expression -> expression NE term','expression',3,'p_expression','grammar_rules.py',232),
  ('expression -> expression COMPARATOR term','expression',3,'p_expression','grammar_rules.py',233),
  ('expression -> expression BITWISE_AND term','expression',3,'p_expression','grammar_rules.py',234),
  ('expression -> expression BITWISE_OR term','expression',3,'p_expression','grammar_rules.py',235),
  ('expression -> expression BITWISE_XOR term','expression',3,'p_expression','grammar_rules.py',236),
  ('expression -> expression AND term','expression',3,'p_expression','grammar_rules.py',237),
  ('expression -> expression OR term','expression',3,'p_expression','grammar_rules.py',238),
  ('expression -> expression DOT ID','expression',3,'p_expression','grammar_rules.py',239),
  ('expression -> expression INCREMENT','expression',2,'p_expression','grammar_rules.py',240),
  ('expression -> expression DECREMENT','expression',2,'p_expression','grammar_rules.py',241),
  ('expression -> function_call','expression',1,'p_expression','grammar_rules.py',242),
  ('term -> factor','term',1,'p_term','grammar_rules.py',246),
  ('term -> term TIMES factor','term',3,'p_term','grammar_rules.py',247),
  ('term -> term DIVIDE factor','term',3,'p_term','grammar_rules.py',248),
  ('term -> term MOD factor','term',3,'p_term','grammar_rules.py',249),
  ('term -> term LSHIFT factor','term',3,'p_term','grammar_rules.py',250),
  ('term -> term RSHIFT factor','term',3,'p_term','grammar_rules.py',251),
  ('factor -> INTEGER','factor',1,'p_factor','grammar_rules.py',255),
  ('factor -> FLOAT_N','factor',1,'p_factor','grammar_rules.py',256),
  ('factor -> STRING','factor',1,'p_factor','grammar_rules.py',257),
  ('factor -> ID','factor',1,'p_factor','grammar_rules.py',258),
  ('factor -> ID INCREMENT','factor',2,'p_factor','grammar_rules.py',259),
  ('factor -> ID DECREMENT','factor',2,'p_factor','grammar_rules.py',260),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','grammar_rules.py',261),
  ('if_statement -> IF factor statement','if_statement',3,'p_if_statement','grammar_rules.py',267),
  ('if_statement -> IF factor statement ELSE statement','if_statement',5,'p_if_statement','grammar_rules.py',268),
  ('while_statement -> WHILE factor statement','while_statement',3,'p_while_statement','grammar_rules.py',272),
  ('do_while_statement -> DO statement WHILE factor SEMICOLON','do_while_statement',5,'p_do_while_statement','grammar_rules.py',276),
  ('for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement','for_statement',8,'p_for_statement','grammar_rules.py',280),
  ('for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement','for_statement',9,'p_for_statement','grammar_rules.py',281),
  ('switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE','switch_statement',6,'p_switch_statement','grammar_rules.py',285),
  ('case_list -> case','case_list',1,'p_case_list','grammar_rules.py',289),
  ('case_list -> case_list case','case_list',2,'p_case_list','grammar_rules.py',290),
  ('case_list -> empty','case_list',1,'p_case_list','grammar_rules.py',291),
  ('case -> CASE expression COLON statement_list','case',4,'p_case','grammar_rules.py',295),
  ('default_case -> DEFAULT COLON statement_list','default_case',3,'p_default_case','grammar_rules.py',299),
  ('default_case -> empty','default_case',1,'p_default_case','grammar_rules.py',300),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','grammar_rules.py',304),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','grammar_rules.py',308),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','grammar_rules.py',312),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','grammar_rules.py',316),
  ('function_call -> ID LPAREN argument_list RPAREN','function_call',4,'p_function_call','grammar_rules.py',317),
  ('argument_list -> expression','argument_list',1,'p_argument_list','grammar_rules.py',322),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','grammar_rules.py',323),
  ('empty -> <empty>','empty',0,'p_empty','grammar_rules.py',327),
]

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND_ASSIGN
    ARROW
    BITWISE_NOT
    DIVIDE_ASSIGN
    DOUBLEHASH
    ELLIPSIS
    ENUM
    GOTO
    LBRACKET
    LSHIFT_ASSIGN
    MINUS_ASSIGN
    MOD_ASSIGN
    NEWLINE
    NOT
    OR_ASSIGN
    PLUS_ASSIGN
    POWER
    RBRACKET
    RSHIFT_ASSIGN
    SIZEOF
    TERNARY
    TIMES_ASSIGN
    UNION
    XOR_ASSIGN

Grammar

Rule 0     S' -> program
Rule 1     program -> optional_preprocessor_directives optional_declaration_list function_list
Rule 2     optional_preprocessor_directives -> preprocessor_directive_list
Rule 3     optional_preprocessor_directives -> empty
Rule 4     preprocessor_directive_list -> preprocessor_directive
Rule 5     preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive
Rule 6     preprocessor_directive -> include_directive
Rule 7     preprocessor_directive -> define_directive
Rule 8     include_directive -> HASH INCLUDE LIBRARY
Rule 9     define_directive -> HASH DEFINE ID expression
Rule 10    define_directive -> HASH DEFINE ID
Rule 11    optional_declaration_list -> declaration_list
Rule 12    declaration_list -> declaration_list declaration
Rule 13    declaration_list -> empty
Rule 14    function_list -> function
Rule 15    function_list -> function_list function
Rule 16    function -> main_function
Rule 17    function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement
Rule 18    function -> type_specifier ID LPAREN RPAREN compound_statement
Rule 19    main_function -> type_specifier MAIN LPAREN RPAREN compound_statement
Rule 20    parameter_list -> parameter
Rule 21    parameter_list -> parameter_list COMMA parameter
Rule 22    parameter_list -> empty
Rule 23    parameter -> type_specifier ID
Rule 24    compound_statement -> LBRACE statement_list RBRACE
Rule 25    statement_list -> statement
Rule 26    statement_list -> statement_list statement
Rule 27    statement -> declaration
Rule 28    statement -> assignment
Rule 29    statement -> if_statement
Rule 30    statement -> while_statement
Rule 31    statement -> return_statement
Rule 32    statement -> compound_statement
Rule 33    statement -> function_call SEMICOLON
Rule 34    statement -> break_statement
Rule 35    statement -> continue_statement
Rule 36    statement -> switch_statement
Rule 37    statement -> do_while_statement
Rule 38    statement -> for_statement
Rule 39    statement -> expression SEMICOLON
Rule 40    declaration -> type_specifier init_declarator_list SEMICOLON
Rule 41    declaration -> typedef_declaration
Rule 42    declaration -> struct_declaration
Rule 43    typedef_declaration -> TYPEDEF struct_declaration
Rule 44    struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
Rule 45    struct_members -> struct_member
Rule 46    struct_members -> struct_members struct_member
Rule 47    struct_member -> type_specifier ID SEMICOLON
Rule 48    optional_id -> ID
Rule 49    optional_id -> empty
Rule 50    init_declarator_list -> init_declarator
Rule 51    init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 52    init_declarator -> ID
Rule 53    init_declarator -> ID EQUALS expression
Rule 54    init_declarator -> ID EQUALS LBRACE initializer_list RBRACE
Rule 55    initializer_list -> expression
Rule 56    initializer_list -> initializer_list COMMA expression
Rule 57    type_specifier -> non_empty_pre_type_specifier base_type
Rule 58    type_specifier -> non_empty_pre_type_specifier ID
Rule 59    type_specifier -> ID
Rule 60    non_empty_pre_type_specifier -> pre_type_specifier
Rule 61    base_type -> INT
Rule 62    base_type -> CHAR
Rule 63    base_type -> FLOAT
Rule 64    base_type -> DOUBLE
Rule 65    base_type -> VOID
Rule 66    pre_type_specifier -> CONST
Rule 67    pre_type_specifier -> VOLATILE
Rule 68    pre_type_specifier -> AUTO
Rule 69    pre_type_specifier -> REGISTER
Rule 70    pre_type_specifier -> STATIC
Rule 71    pre_type_specifier -> EXTERN
Rule 72    pre_type_specifier -> SIGNED
Rule 73    pre_type_specifier -> UNSIGNED
Rule 74    pre_type_specifier -> SHORT
Rule 75    pre_type_specifier -> LONG
Rule 76    pre_type_specifier -> empty
Rule 77    assignment -> ID EQUALS expression SEMICOLON
Rule 78    expression -> term
Rule 79    expression -> expression PLUS term
Rule 80    expression -> expression MINUS term
Rule 81    expression -> expression LT term
Rule 82    expression -> expression LE term
Rule 83    expression -> expression GT term
Rule 84    expression -> expression GE term
Rule 85    expression -> expression NE term
Rule 86    expression -> expression COMPARATOR term
Rule 87    expression -> expression BITWISE_AND term
Rule 88    expression -> expression BITWISE_OR term
Rule 89    expression -> expression BITWISE_XOR term
Rule 90    expression -> expression AND term
Rule 91    expression -> expression OR term
Rule 92    expression -> expression DOT ID
Rule 93    expression -> expression INCREMENT
Rule 94    expression -> expression DECREMENT
Rule 95    expression -> function_call
Rule 96    term -> factor
Rule 97    term -> term TIMES factor
Rule 98    term -> term DIVIDE factor
Rule 99    term -> term MOD factor
Rule 100   term -> term LSHIFT factor
Rule 101   term -> term RSHIFT factor
Rule 102   factor -> INTEGER
Rule 103   factor -> FLOAT_N
Rule 104   factor -> STRING
Rule 105   factor -> ID
Rule 106   factor -> ID INCREMENT
Rule 107   factor -> ID DECREMENT
Rule 108   factor -> LPAREN expression RPAREN
Rule 109   if_statement -> IF factor statement
Rule 110   if_statement -> IF factor statement ELSE statement
Rule 111   while_statement -> WHILE factor statement
Rule 112   do_while_statement -> DO statement WHILE factor SEMICOLON
Rule 113   for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
Rule 114   for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 115   switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE
Rule 116   case_list -> case
Rule 117   case_list -> case_list case
Rule 118   case_list -> empty
Rule 119   case -> CASE expression COLON statement_list
Rule 120   default_case -> DEFAULT COLON statement_list
Rule 121   default_case -> empty
Rule 122   break_statement -> BREAK SEMICOLON
Rule 123   continue_statement -> CONTINUE SEMICOLON
Rule 124   return_statement -> RETURN expression SEMICOLON
Rule 125   function_call -> ID LPAREN RPAREN
Rule 126   function_call -> ID LPAREN argument_list RPAREN
Rule 127   argument_list -> expression
Rule 128   argument_list -> argument_list COMMA expression
Rule 129   empty -> <empty>

Terminals, with rules where they appear

AND                  : 90
AND_ASSIGN           : 
ARROW                : 
AUTO                 : 68
BITWISE_AND          : 87
BITWISE_NOT          : 
BITWISE_OR           : 88
BITWISE_XOR          : 89
BREAK                : 122
CASE                 : 119
CHAR                 : 62
COLON                : 119 120
COMMA                : 21 51 56 128
COMPARATOR           : 86
CONST                : 66
CONTINUE             : 123
DECREMENT            : 94 107
DEFAULT              : 120
DEFINE               : 9 10
DIVIDE               : 98
DIVIDE_ASSIGN        : 
DO                   : 112
DOT                  : 92
DOUBLE               : 64
DOUBLEHASH           : 
ELLIPSIS             : 
ELSE                 : 110
ENUM                 : 
EQUALS               : 53 54 77
EXTERN               : 71
FLOAT                : 63
FLOAT_N              : 103
FOR                  : 113 114
GE                   : 84
GOTO                 : 
GT                   : 83
HASH                 : 8 9 10
ID                   : 9 10 17 18 23 44 47 48 52 53 54 58 59 77 92 105 106 107 125 126
IF                   : 109 110
INCLUDE              : 8
INCREMENT            : 93 106
INT                  : 61
INTEGER              : 102
LBRACE               : 24 44 54 115
LBRACKET             : 
LE                   : 82
LIBRARY              : 8
LONG                 : 75
LPAREN               : 17 18 19 108 113 114 125 126
LSHIFT               : 100
LSHIFT_ASSIGN        : 
LT                   : 81
MAIN                 : 19
MINUS                : 80
MINUS_ASSIGN         : 
MOD                  : 99
MOD_ASSIGN           : 
NE                   : 85
NEWLINE              : 
NOT                  : 
OR                   : 91
OR_ASSIGN            : 
PLUS                 : 79
PLUS_ASSIGN          : 
POWER                : 
RBRACE               : 24 44 54 115
RBRACKET             : 
REGISTER             : 69
RETURN               : 124
RPAREN               : 17 18 19 108 113 114 125 126
RSHIFT               : 101
RSHIFT_ASSIGN        : 
SEMICOLON            : 33 39 40 44 47 77 112 113 114 114 122 123 124
SHORT                : 74
SIGNED               : 72
SIZEOF               : 
STATIC               : 70
STRING               : 104
STRUCT               : 44
SWITCH               : 115
TERNARY              : 
TIMES                : 97
TIMES_ASSIGN         : 
TYPEDEF              : 43
UNION                : 
UNSIGNED             : 73
VOID                 : 65
VOLATILE             : 67
WHILE                : 111 112
XOR_ASSIGN           : 
error                : 

Nonterminals, with rules where they appear

argument_list        : 126 128
assignment           : 28
base_type            : 57
break_statement      : 34
case                 : 116 117
case_list            : 115 117
compound_statement   : 17 18 19 32
continue_statement   : 35
declaration          : 12 27 113
declaration_list     : 11 12
default_case         : 115
define_directive     : 7
do_while_statement   : 37
empty                : 3 13 22 49 76 118 121
expression           : 9 39 53 55 56 77 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 108 113 113 114 114 114 119 124 127 128
factor               : 96 97 98 99 100 101 109 110 111 112 115
for_statement        : 38
function             : 14 15
function_call        : 33 95
function_list        : 1 15
if_statement         : 29
include_directive    : 6
init_declarator      : 50 51
init_declarator_list : 40 51
initializer_list     : 54 56
main_function        : 16
non_empty_pre_type_specifier : 57 58
optional_declaration_list : 1
optional_id          : 44
optional_preprocessor_directives : 1
parameter            : 20 21
parameter_list       : 17 21
pre_type_specifier   : 60
preprocessor_directive : 4 5
preprocessor_directive_list : 2 5
program              : 0
return_statement     : 31
statement            : 25 26 109 110 110 111 112 113 114
statement_list       : 24 26 119 120
struct_declaration   : 42 43
struct_member        : 45 46
struct_members       : 44 46
switch_statement     : 36
term                 : 78 79 80 81 82 83 84 85 86 87 88 89 90 91 97 98 99 100 101
type_specifier       : 17 18 19 23 40 47
typedef_declaration  : 41
while_statement      : 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . optional_preprocessor_directives optional_declaration_list function_list
    (2) optional_preprocessor_directives -> . preprocessor_directive_list
    (3) optional_preprocessor_directives -> . empty
    (4) preprocessor_directive_list -> . preprocessor_directive
    (5) preprocessor_directive_list -> . preprocessor_directive_list preprocessor_directive
    (129) empty -> .
    (6) preprocessor_directive -> . include_directive
    (7) preprocessor_directive -> . define_directive
    (8) include_directive -> . HASH INCLUDE LIBRARY
    (9) define_directive -> . HASH DEFINE ID expression
    (10) define_directive -> . HASH DEFINE ID

    ID              reduce using rule 129 (empty -> .)
    CONST           reduce using rule 129 (empty -> .)
    VOLATILE        reduce using rule 129 (empty -> .)
    AUTO            reduce using rule 129 (empty -> .)
    REGISTER        reduce using rule 129 (empty -> .)
    STATIC          reduce using rule 129 (empty -> .)
    EXTERN          reduce using rule 129 (empty -> .)
    SIGNED          reduce using rule 129 (empty -> .)
    UNSIGNED        reduce using rule 129 (empty -> .)
    SHORT           reduce using rule 129 (empty -> .)
    LONG            reduce using rule 129 (empty -> .)
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)
    TYPEDEF         reduce using rule 129 (empty -> .)
    STRUCT          reduce using rule 129 (empty -> .)
    HASH            shift and go to state 8

    program                        shift and go to state 1
    optional_preprocessor_directives shift and go to state 2
    preprocessor_directive_list    shift and go to state 3
    empty                          shift and go to state 4
    preprocessor_directive         shift and go to state 5
    include_directive              shift and go to state 6
    define_directive               shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> optional_preprocessor_directives . optional_declaration_list function_list
    (11) optional_declaration_list -> . declaration_list
    (12) declaration_list -> . declaration_list declaration
    (13) declaration_list -> . empty
    (129) empty -> .

    ID              reduce using rule 129 (empty -> .)
    TYPEDEF         reduce using rule 129 (empty -> .)
    STRUCT          reduce using rule 129 (empty -> .)
    CONST           reduce using rule 129 (empty -> .)
    VOLATILE        reduce using rule 129 (empty -> .)
    AUTO            reduce using rule 129 (empty -> .)
    REGISTER        reduce using rule 129 (empty -> .)
    STATIC          reduce using rule 129 (empty -> .)
    EXTERN          reduce using rule 129 (empty -> .)
    SIGNED          reduce using rule 129 (empty -> .)
    UNSIGNED        reduce using rule 129 (empty -> .)
    SHORT           reduce using rule 129 (empty -> .)
    LONG            reduce using rule 129 (empty -> .)
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

    optional_declaration_list      shift and go to state 9
    declaration_list               shift and go to state 10
    empty                          shift and go to state 11

state 3

    (2) optional_preprocessor_directives -> preprocessor_directive_list .
    (5) preprocessor_directive_list -> preprocessor_directive_list . preprocessor_directive
    (6) preprocessor_directive -> . include_directive
    (7) preprocessor_directive -> . define_directive
    (8) include_directive -> . HASH INCLUDE LIBRARY
    (9) define_directive -> . HASH DEFINE ID expression
    (10) define_directive -> . HASH DEFINE ID

    ID              reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    CONST           reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    VOLATILE        reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    AUTO            reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    REGISTER        reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    STATIC          reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    EXTERN          reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    SIGNED          reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    UNSIGNED        reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    SHORT           reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    LONG            reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    INT             reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    CHAR            reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    FLOAT           reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    DOUBLE          reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    VOID            reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    TYPEDEF         reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    STRUCT          reduce using rule 2 (optional_preprocessor_directives -> preprocessor_directive_list .)
    HASH            shift and go to state 8

    preprocessor_directive         shift and go to state 12
    include_directive              shift and go to state 6
    define_directive               shift and go to state 7

state 4

    (3) optional_preprocessor_directives -> empty .

    ID              reduce using rule 3 (optional_preprocessor_directives -> empty .)
    CONST           reduce using rule 3 (optional_preprocessor_directives -> empty .)
    VOLATILE        reduce using rule 3 (optional_preprocessor_directives -> empty .)
    AUTO            reduce using rule 3 (optional_preprocessor_directives -> empty .)
    REGISTER        reduce using rule 3 (optional_preprocessor_directives -> empty .)
    STATIC          reduce using rule 3 (optional_preprocessor_directives -> empty .)
    EXTERN          reduce using rule 3 (optional_preprocessor_directives -> empty .)
    SIGNED          reduce using rule 3 (optional_preprocessor_directives -> empty .)
    UNSIGNED        reduce using rule 3 (optional_preprocessor_directives -> empty .)
    SHORT           reduce using rule 3 (optional_preprocessor_directives -> empty .)
    LONG            reduce using rule 3 (optional_preprocessor_directives -> empty .)
    INT             reduce using rule 3 (optional_preprocessor_directives -> empty .)
    CHAR            reduce using rule 3 (optional_preprocessor_directives -> empty .)
    FLOAT           reduce using rule 3 (optional_preprocessor_directives -> empty .)
    DOUBLE          reduce using rule 3 (optional_preprocessor_directives -> empty .)
    VOID            reduce using rule 3 (optional_preprocessor_directives -> empty .)
    TYPEDEF         reduce using rule 3 (optional_preprocessor_directives -> empty .)
    STRUCT          reduce using rule 3 (optional_preprocessor_directives -> empty .)


state 5

    (4) preprocessor_directive_list -> preprocessor_directive .

    HASH            reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    ID              reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    CONST           reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    VOLATILE        reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    AUTO            reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    REGISTER        reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    STATIC          reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    EXTERN          reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    SIGNED          reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    UNSIGNED        reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    SHORT           reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    LONG            reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    INT             reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    CHAR            reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    FLOAT           reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    DOUBLE          reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    VOID            reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    TYPEDEF         reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)
    STRUCT          reduce using rule 4 (preprocessor_directive_list -> preprocessor_directive .)


state 6

    (6) preprocessor_directive -> include_directive .

    HASH            reduce using rule 6 (preprocessor_directive -> include_directive .)
    ID              reduce using rule 6 (preprocessor_directive -> include_directive .)
    CONST           reduce using rule 6 (preprocessor_directive -> include_directive .)
    VOLATILE        reduce using rule 6 (preprocessor_directive -> include_directive .)
    AUTO            reduce using rule 6 (preprocessor_directive -> include_directive .)
    REGISTER        reduce using rule 6 (preprocessor_directive -> include_directive .)
    STATIC          reduce using rule 6 (preprocessor_directive -> include_directive .)
    EXTERN          reduce using rule 6 (preprocessor_directive -> include_directive .)
    SIGNED          reduce using rule 6 (preprocessor_directive -> include_directive .)
    UNSIGNED        reduce using rule 6 (preprocessor_directive -> include_directive .)
    SHORT           reduce using rule 6 (preprocessor_directive -> include_directive .)
    LONG            reduce using rule 6 (preprocessor_directive -> include_directive .)
    INT             reduce using rule 6 (preprocessor_directive -> include_directive .)
    CHAR            reduce using rule 6 (preprocessor_directive -> include_directive .)
    FLOAT           reduce using rule 6 (preprocessor_directive -> include_directive .)
    DOUBLE          reduce using rule 6 (preprocessor_directive -> include_directive .)
    VOID            reduce using rule 6 (preprocessor_directive -> include_directive .)
    TYPEDEF         reduce using rule 6 (preprocessor_directive -> include_directive .)
    STRUCT          reduce using rule 6 (preprocessor_directive -> include_directive .)


state 7

    (7) preprocessor_directive -> define_directive .

    HASH            reduce using rule 7 (preprocessor_directive -> define_directive .)
    ID              reduce using rule 7 (preprocessor_directive -> define_directive .)
    CONST           reduce using rule 7 (preprocessor_directive -> define_directive .)
    VOLATILE        reduce using rule 7 (preprocessor_directive -> define_directive .)
    AUTO            reduce using rule 7 (preprocessor_directive -> define_directive .)
    REGISTER        reduce using rule 7 (preprocessor_directive -> define_directive .)
    STATIC          reduce using rule 7 (preprocessor_directive -> define_directive .)
    EXTERN          reduce using rule 7 (preprocessor_directive -> define_directive .)
    SIGNED          reduce using rule 7 (preprocessor_directive -> define_directive .)
    UNSIGNED        reduce using rule 7 (preprocessor_directive -> define_directive .)
    SHORT           reduce using rule 7 (preprocessor_directive -> define_directive .)
    LONG            reduce using rule 7 (preprocessor_directive -> define_directive .)
    INT             reduce using rule 7 (preprocessor_directive -> define_directive .)
    CHAR            reduce using rule 7 (preprocessor_directive -> define_directive .)
    FLOAT           reduce using rule 7 (preprocessor_directive -> define_directive .)
    DOUBLE          reduce using rule 7 (preprocessor_directive -> define_directive .)
    VOID            reduce using rule 7 (preprocessor_directive -> define_directive .)
    TYPEDEF         reduce using rule 7 (preprocessor_directive -> define_directive .)
    STRUCT          reduce using rule 7 (preprocessor_directive -> define_directive .)


state 8

    (8) include_directive -> HASH . INCLUDE LIBRARY
    (9) define_directive -> HASH . DEFINE ID expression
    (10) define_directive -> HASH . DEFINE ID

    INCLUDE         shift and go to state 13
    DEFINE          shift and go to state 14


state 9

    (1) program -> optional_preprocessor_directives optional_declaration_list . function_list
    (14) function_list -> . function
    (15) function_list -> . function_list function
    (16) function -> . main_function
    (17) function -> . type_specifier ID LPAREN parameter_list RPAREN compound_statement
    (18) function -> . type_specifier ID LPAREN RPAREN compound_statement
    (19) main_function -> . type_specifier MAIN LPAREN RPAREN compound_statement
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 19
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    function_list                  shift and go to state 15
    function                       shift and go to state 16
    main_function                  shift and go to state 17
    type_specifier                 shift and go to state 18
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 10

    (11) optional_declaration_list -> declaration_list .
    (12) declaration_list -> declaration_list . declaration
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for VOLATILE resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for REGISTER resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for EXTERN resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
  ! shift/reduce conflict for UNSIGNED resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 11 (optional_declaration_list -> declaration_list .)
  ! reduce/reduce conflict for CHAR resolved using rule 11 (optional_declaration_list -> declaration_list .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (optional_declaration_list -> declaration_list .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 11 (optional_declaration_list -> declaration_list .)
  ! reduce/reduce conflict for VOID resolved using rule 11 (optional_declaration_list -> declaration_list .)
    INT             reduce using rule 11 (optional_declaration_list -> declaration_list .)
    CHAR            reduce using rule 11 (optional_declaration_list -> declaration_list .)
    FLOAT           reduce using rule 11 (optional_declaration_list -> declaration_list .)
    DOUBLE          reduce using rule 11 (optional_declaration_list -> declaration_list .)
    VOID            reduce using rule 11 (optional_declaration_list -> declaration_list .)
    ID              shift and go to state 19
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31

  ! ID              [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! CONST           [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! VOLATILE        [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! AUTO            [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! REGISTER        [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! STATIC          [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! EXTERN          [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! SIGNED          [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! UNSIGNED        [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! SHORT           [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! LONG            [ reduce using rule 11 (optional_declaration_list -> declaration_list .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 129 (empty -> .) ]
  ! VOID            [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 33
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 11

    (13) declaration_list -> empty .

    ID              reduce using rule 13 (declaration_list -> empty .)
    TYPEDEF         reduce using rule 13 (declaration_list -> empty .)
    STRUCT          reduce using rule 13 (declaration_list -> empty .)
    CONST           reduce using rule 13 (declaration_list -> empty .)
    VOLATILE        reduce using rule 13 (declaration_list -> empty .)
    AUTO            reduce using rule 13 (declaration_list -> empty .)
    REGISTER        reduce using rule 13 (declaration_list -> empty .)
    STATIC          reduce using rule 13 (declaration_list -> empty .)
    EXTERN          reduce using rule 13 (declaration_list -> empty .)
    SIGNED          reduce using rule 13 (declaration_list -> empty .)
    UNSIGNED        reduce using rule 13 (declaration_list -> empty .)
    SHORT           reduce using rule 13 (declaration_list -> empty .)
    LONG            reduce using rule 13 (declaration_list -> empty .)
    INT             reduce using rule 13 (declaration_list -> empty .)
    CHAR            reduce using rule 13 (declaration_list -> empty .)
    FLOAT           reduce using rule 13 (declaration_list -> empty .)
    DOUBLE          reduce using rule 13 (declaration_list -> empty .)
    VOID            reduce using rule 13 (declaration_list -> empty .)


state 12

    (5) preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .

    HASH            reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    ID              reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    CONST           reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    VOLATILE        reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    AUTO            reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    REGISTER        reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    STATIC          reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    EXTERN          reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    SIGNED          reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    UNSIGNED        reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    SHORT           reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    LONG            reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    INT             reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    CHAR            reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    FLOAT           reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    DOUBLE          reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    VOID            reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    TYPEDEF         reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)
    STRUCT          reduce using rule 5 (preprocessor_directive_list -> preprocessor_directive_list preprocessor_directive .)


state 13

    (8) include_directive -> HASH INCLUDE . LIBRARY

    LIBRARY         shift and go to state 39


state 14

    (9) define_directive -> HASH DEFINE . ID expression
    (10) define_directive -> HASH DEFINE . ID

    ID              shift and go to state 40


state 15

    (1) program -> optional_preprocessor_directives optional_declaration_list function_list .
    (15) function_list -> function_list . function
    (16) function -> . main_function
    (17) function -> . type_specifier ID LPAREN parameter_list RPAREN compound_statement
    (18) function -> . type_specifier ID LPAREN RPAREN compound_statement
    (19) main_function -> . type_specifier MAIN LPAREN RPAREN compound_statement
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 1 (program -> optional_preprocessor_directives optional_declaration_list function_list .)
    ID              shift and go to state 19
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    function                       shift and go to state 41
    main_function                  shift and go to state 17
    type_specifier                 shift and go to state 18
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 16

    (14) function_list -> function .

    ID              reduce using rule 14 (function_list -> function .)
    CONST           reduce using rule 14 (function_list -> function .)
    VOLATILE        reduce using rule 14 (function_list -> function .)
    AUTO            reduce using rule 14 (function_list -> function .)
    REGISTER        reduce using rule 14 (function_list -> function .)
    STATIC          reduce using rule 14 (function_list -> function .)
    EXTERN          reduce using rule 14 (function_list -> function .)
    SIGNED          reduce using rule 14 (function_list -> function .)
    UNSIGNED        reduce using rule 14 (function_list -> function .)
    SHORT           reduce using rule 14 (function_list -> function .)
    LONG            reduce using rule 14 (function_list -> function .)
    INT             reduce using rule 14 (function_list -> function .)
    CHAR            reduce using rule 14 (function_list -> function .)
    FLOAT           reduce using rule 14 (function_list -> function .)
    DOUBLE          reduce using rule 14 (function_list -> function .)
    VOID            reduce using rule 14 (function_list -> function .)
    $end            reduce using rule 14 (function_list -> function .)


state 17

    (16) function -> main_function .

    ID              reduce using rule 16 (function -> main_function .)
    CONST           reduce using rule 16 (function -> main_function .)
    VOLATILE        reduce using rule 16 (function -> main_function .)
    AUTO            reduce using rule 16 (function -> main_function .)
    REGISTER        reduce using rule 16 (function -> main_function .)
    STATIC          reduce using rule 16 (function -> main_function .)
    EXTERN          reduce using rule 16 (function -> main_function .)
    SIGNED          reduce using rule 16 (function -> main_function .)
    UNSIGNED        reduce using rule 16 (function -> main_function .)
    SHORT           reduce using rule 16 (function -> main_function .)
    LONG            reduce using rule 16 (function -> main_function .)
    INT             reduce using rule 16 (function -> main_function .)
    CHAR            reduce using rule 16 (function -> main_function .)
    FLOAT           reduce using rule 16 (function -> main_function .)
    DOUBLE          reduce using rule 16 (function -> main_function .)
    VOID            reduce using rule 16 (function -> main_function .)
    $end            reduce using rule 16 (function -> main_function .)


state 18

    (17) function -> type_specifier . ID LPAREN parameter_list RPAREN compound_statement
    (18) function -> type_specifier . ID LPAREN RPAREN compound_statement
    (19) main_function -> type_specifier . MAIN LPAREN RPAREN compound_statement

    ID              shift and go to state 42
    MAIN            shift and go to state 43


state 19

    (59) type_specifier -> ID .

    ID              reduce using rule 59 (type_specifier -> ID .)
    MAIN            reduce using rule 59 (type_specifier -> ID .)


state 20

    (57) type_specifier -> non_empty_pre_type_specifier . base_type
    (58) type_specifier -> non_empty_pre_type_specifier . ID
    (61) base_type -> . INT
    (62) base_type -> . CHAR
    (63) base_type -> . FLOAT
    (64) base_type -> . DOUBLE
    (65) base_type -> . VOID

    ID              shift and go to state 45
    INT             shift and go to state 46
    CHAR            shift and go to state 47
    FLOAT           shift and go to state 48
    DOUBLE          shift and go to state 49
    VOID            shift and go to state 50

    base_type                      shift and go to state 44

state 21

    (60) non_empty_pre_type_specifier -> pre_type_specifier .

    ID              reduce using rule 60 (non_empty_pre_type_specifier -> pre_type_specifier .)
    INT             reduce using rule 60 (non_empty_pre_type_specifier -> pre_type_specifier .)
    CHAR            reduce using rule 60 (non_empty_pre_type_specifier -> pre_type_specifier .)
    FLOAT           reduce using rule 60 (non_empty_pre_type_specifier -> pre_type_specifier .)
    DOUBLE          reduce using rule 60 (non_empty_pre_type_specifier -> pre_type_specifier .)
    VOID            reduce using rule 60 (non_empty_pre_type_specifier -> pre_type_specifier .)


state 22

    (66) pre_type_specifier -> CONST .

    ID              reduce using rule 66 (pre_type_specifier -> CONST .)
    INT             reduce using rule 66 (pre_type_specifier -> CONST .)
    CHAR            reduce using rule 66 (pre_type_specifier -> CONST .)
    FLOAT           reduce using rule 66 (pre_type_specifier -> CONST .)
    DOUBLE          reduce using rule 66 (pre_type_specifier -> CONST .)
    VOID            reduce using rule 66 (pre_type_specifier -> CONST .)


state 23

    (67) pre_type_specifier -> VOLATILE .

    ID              reduce using rule 67 (pre_type_specifier -> VOLATILE .)
    INT             reduce using rule 67 (pre_type_specifier -> VOLATILE .)
    CHAR            reduce using rule 67 (pre_type_specifier -> VOLATILE .)
    FLOAT           reduce using rule 67 (pre_type_specifier -> VOLATILE .)
    DOUBLE          reduce using rule 67 (pre_type_specifier -> VOLATILE .)
    VOID            reduce using rule 67 (pre_type_specifier -> VOLATILE .)


state 24

    (68) pre_type_specifier -> AUTO .

    ID              reduce using rule 68 (pre_type_specifier -> AUTO .)
    INT             reduce using rule 68 (pre_type_specifier -> AUTO .)
    CHAR            reduce using rule 68 (pre_type_specifier -> AUTO .)
    FLOAT           reduce using rule 68 (pre_type_specifier -> AUTO .)
    DOUBLE          reduce using rule 68 (pre_type_specifier -> AUTO .)
    VOID            reduce using rule 68 (pre_type_specifier -> AUTO .)


state 25

    (69) pre_type_specifier -> REGISTER .

    ID              reduce using rule 69 (pre_type_specifier -> REGISTER .)
    INT             reduce using rule 69 (pre_type_specifier -> REGISTER .)
    CHAR            reduce using rule 69 (pre_type_specifier -> REGISTER .)
    FLOAT           reduce using rule 69 (pre_type_specifier -> REGISTER .)
    DOUBLE          reduce using rule 69 (pre_type_specifier -> REGISTER .)
    VOID            reduce using rule 69 (pre_type_specifier -> REGISTER .)


state 26

    (70) pre_type_specifier -> STATIC .

    ID              reduce using rule 70 (pre_type_specifier -> STATIC .)
    INT             reduce using rule 70 (pre_type_specifier -> STATIC .)
    CHAR            reduce using rule 70 (pre_type_specifier -> STATIC .)
    FLOAT           reduce using rule 70 (pre_type_specifier -> STATIC .)
    DOUBLE          reduce using rule 70 (pre_type_specifier -> STATIC .)
    VOID            reduce using rule 70 (pre_type_specifier -> STATIC .)


state 27

    (71) pre_type_specifier -> EXTERN .

    ID              reduce using rule 71 (pre_type_specifier -> EXTERN .)
    INT             reduce using rule 71 (pre_type_specifier -> EXTERN .)
    CHAR            reduce using rule 71 (pre_type_specifier -> EXTERN .)
    FLOAT           reduce using rule 71 (pre_type_specifier -> EXTERN .)
    DOUBLE          reduce using rule 71 (pre_type_specifier -> EXTERN .)
    VOID            reduce using rule 71 (pre_type_specifier -> EXTERN .)


state 28

    (72) pre_type_specifier -> SIGNED .

    ID              reduce using rule 72 (pre_type_specifier -> SIGNED .)
    INT             reduce using rule 72 (pre_type_specifier -> SIGNED .)
    CHAR            reduce using rule 72 (pre_type_specifier -> SIGNED .)
    FLOAT           reduce using rule 72 (pre_type_specifier -> SIGNED .)
    DOUBLE          reduce using rule 72 (pre_type_specifier -> SIGNED .)
    VOID            reduce using rule 72 (pre_type_specifier -> SIGNED .)


state 29

    (73) pre_type_specifier -> UNSIGNED .

    ID              reduce using rule 73 (pre_type_specifier -> UNSIGNED .)
    INT             reduce using rule 73 (pre_type_specifier -> UNSIGNED .)
    CHAR            reduce using rule 73 (pre_type_specifier -> UNSIGNED .)
    FLOAT           reduce using rule 73 (pre_type_specifier -> UNSIGNED .)
    DOUBLE          reduce using rule 73 (pre_type_specifier -> UNSIGNED .)
    VOID            reduce using rule 73 (pre_type_specifier -> UNSIGNED .)


state 30

    (74) pre_type_specifier -> SHORT .

    ID              reduce using rule 74 (pre_type_specifier -> SHORT .)
    INT             reduce using rule 74 (pre_type_specifier -> SHORT .)
    CHAR            reduce using rule 74 (pre_type_specifier -> SHORT .)
    FLOAT           reduce using rule 74 (pre_type_specifier -> SHORT .)
    DOUBLE          reduce using rule 74 (pre_type_specifier -> SHORT .)
    VOID            reduce using rule 74 (pre_type_specifier -> SHORT .)


state 31

    (75) pre_type_specifier -> LONG .

    ID              reduce using rule 75 (pre_type_specifier -> LONG .)
    INT             reduce using rule 75 (pre_type_specifier -> LONG .)
    CHAR            reduce using rule 75 (pre_type_specifier -> LONG .)
    FLOAT           reduce using rule 75 (pre_type_specifier -> LONG .)
    DOUBLE          reduce using rule 75 (pre_type_specifier -> LONG .)
    VOID            reduce using rule 75 (pre_type_specifier -> LONG .)


state 32

    (76) pre_type_specifier -> empty .

    ID              reduce using rule 76 (pre_type_specifier -> empty .)
    INT             reduce using rule 76 (pre_type_specifier -> empty .)
    CHAR            reduce using rule 76 (pre_type_specifier -> empty .)
    FLOAT           reduce using rule 76 (pre_type_specifier -> empty .)
    DOUBLE          reduce using rule 76 (pre_type_specifier -> empty .)
    VOID            reduce using rule 76 (pre_type_specifier -> empty .)


state 33

    (12) declaration_list -> declaration_list declaration .

    ID              reduce using rule 12 (declaration_list -> declaration_list declaration .)
    TYPEDEF         reduce using rule 12 (declaration_list -> declaration_list declaration .)
    STRUCT          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    VOLATILE        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    AUTO            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    REGISTER        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    STATIC          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    EXTERN          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SIGNED          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    UNSIGNED        reduce using rule 12 (declaration_list -> declaration_list declaration .)
    SHORT           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    LONG            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 12 (declaration_list -> declaration_list declaration .)
    CHAR            reduce using rule 12 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 12 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 12 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 12 (declaration_list -> declaration_list declaration .)


state 34

    (40) declaration -> type_specifier . init_declarator_list SEMICOLON
    (50) init_declarator_list -> . init_declarator
    (51) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (52) init_declarator -> . ID
    (53) init_declarator -> . ID EQUALS expression
    (54) init_declarator -> . ID EQUALS LBRACE initializer_list RBRACE

    ID              shift and go to state 53

    init_declarator_list           shift and go to state 51
    init_declarator                shift and go to state 52

state 35

    (41) declaration -> typedef_declaration .

    ID              reduce using rule 41 (declaration -> typedef_declaration .)
    TYPEDEF         reduce using rule 41 (declaration -> typedef_declaration .)
    STRUCT          reduce using rule 41 (declaration -> typedef_declaration .)
    CONST           reduce using rule 41 (declaration -> typedef_declaration .)
    VOLATILE        reduce using rule 41 (declaration -> typedef_declaration .)
    AUTO            reduce using rule 41 (declaration -> typedef_declaration .)
    REGISTER        reduce using rule 41 (declaration -> typedef_declaration .)
    STATIC          reduce using rule 41 (declaration -> typedef_declaration .)
    EXTERN          reduce using rule 41 (declaration -> typedef_declaration .)
    SIGNED          reduce using rule 41 (declaration -> typedef_declaration .)
    UNSIGNED        reduce using rule 41 (declaration -> typedef_declaration .)
    SHORT           reduce using rule 41 (declaration -> typedef_declaration .)
    LONG            reduce using rule 41 (declaration -> typedef_declaration .)
    INT             reduce using rule 41 (declaration -> typedef_declaration .)
    CHAR            reduce using rule 41 (declaration -> typedef_declaration .)
    FLOAT           reduce using rule 41 (declaration -> typedef_declaration .)
    DOUBLE          reduce using rule 41 (declaration -> typedef_declaration .)
    VOID            reduce using rule 41 (declaration -> typedef_declaration .)
    RBRACE          reduce using rule 41 (declaration -> typedef_declaration .)
    IF              reduce using rule 41 (declaration -> typedef_declaration .)
    WHILE           reduce using rule 41 (declaration -> typedef_declaration .)
    RETURN          reduce using rule 41 (declaration -> typedef_declaration .)
    LBRACE          reduce using rule 41 (declaration -> typedef_declaration .)
    BREAK           reduce using rule 41 (declaration -> typedef_declaration .)
    CONTINUE        reduce using rule 41 (declaration -> typedef_declaration .)
    SWITCH          reduce using rule 41 (declaration -> typedef_declaration .)
    DO              reduce using rule 41 (declaration -> typedef_declaration .)
    FOR             reduce using rule 41 (declaration -> typedef_declaration .)
    INTEGER         reduce using rule 41 (declaration -> typedef_declaration .)
    FLOAT_N         reduce using rule 41 (declaration -> typedef_declaration .)
    STRING          reduce using rule 41 (declaration -> typedef_declaration .)
    LPAREN          reduce using rule 41 (declaration -> typedef_declaration .)
    ELSE            reduce using rule 41 (declaration -> typedef_declaration .)
    DEFAULT         reduce using rule 41 (declaration -> typedef_declaration .)
    CASE            reduce using rule 41 (declaration -> typedef_declaration .)


state 36

    (42) declaration -> struct_declaration .

    ID              reduce using rule 42 (declaration -> struct_declaration .)
    TYPEDEF         reduce using rule 42 (declaration -> struct_declaration .)
    STRUCT          reduce using rule 42 (declaration -> struct_declaration .)
    CONST           reduce using rule 42 (declaration -> struct_declaration .)
    VOLATILE        reduce using rule 42 (declaration -> struct_declaration .)
    AUTO            reduce using rule 42 (declaration -> struct_declaration .)
    REGISTER        reduce using rule 42 (declaration -> struct_declaration .)
    STATIC          reduce using rule 42 (declaration -> struct_declaration .)
    EXTERN          reduce using rule 42 (declaration -> struct_declaration .)
    SIGNED          reduce using rule 42 (declaration -> struct_declaration .)
    UNSIGNED        reduce using rule 42 (declaration -> struct_declaration .)
    SHORT           reduce using rule 42 (declaration -> struct_declaration .)
    LONG            reduce using rule 42 (declaration -> struct_declaration .)
    INT             reduce using rule 42 (declaration -> struct_declaration .)
    CHAR            reduce using rule 42 (declaration -> struct_declaration .)
    FLOAT           reduce using rule 42 (declaration -> struct_declaration .)
    DOUBLE          reduce using rule 42 (declaration -> struct_declaration .)
    VOID            reduce using rule 42 (declaration -> struct_declaration .)
    RBRACE          reduce using rule 42 (declaration -> struct_declaration .)
    IF              reduce using rule 42 (declaration -> struct_declaration .)
    WHILE           reduce using rule 42 (declaration -> struct_declaration .)
    RETURN          reduce using rule 42 (declaration -> struct_declaration .)
    LBRACE          reduce using rule 42 (declaration -> struct_declaration .)
    BREAK           reduce using rule 42 (declaration -> struct_declaration .)
    CONTINUE        reduce using rule 42 (declaration -> struct_declaration .)
    SWITCH          reduce using rule 42 (declaration -> struct_declaration .)
    DO              reduce using rule 42 (declaration -> struct_declaration .)
    FOR             reduce using rule 42 (declaration -> struct_declaration .)
    INTEGER         reduce using rule 42 (declaration -> struct_declaration .)
    FLOAT_N         reduce using rule 42 (declaration -> struct_declaration .)
    STRING          reduce using rule 42 (declaration -> struct_declaration .)
    LPAREN          reduce using rule 42 (declaration -> struct_declaration .)
    ELSE            reduce using rule 42 (declaration -> struct_declaration .)
    DEFAULT         reduce using rule 42 (declaration -> struct_declaration .)
    CASE            reduce using rule 42 (declaration -> struct_declaration .)


state 37

    (43) typedef_declaration -> TYPEDEF . struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON

    STRUCT          shift and go to state 38

    struct_declaration             shift and go to state 54

state 38

    (44) struct_declaration -> STRUCT . optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (48) optional_id -> . ID
    (49) optional_id -> . empty
    (129) empty -> .

    ID              shift and go to state 56
    LBRACE          reduce using rule 129 (empty -> .)

    optional_id                    shift and go to state 55
    empty                          shift and go to state 57

state 39

    (8) include_directive -> HASH INCLUDE LIBRARY .

    HASH            reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    ID              reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    CONST           reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    VOLATILE        reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    AUTO            reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    REGISTER        reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    STATIC          reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    EXTERN          reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    SIGNED          reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    UNSIGNED        reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    SHORT           reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    LONG            reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    INT             reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    CHAR            reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    FLOAT           reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    DOUBLE          reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    VOID            reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    TYPEDEF         reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)
    STRUCT          reduce using rule 8 (include_directive -> HASH INCLUDE LIBRARY .)


state 40

    (9) define_directive -> HASH DEFINE ID . expression
    (10) define_directive -> HASH DEFINE ID .
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for ID resolved as shift
    HASH            reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    CONST           reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    VOLATILE        reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    AUTO            reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    REGISTER        reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    STATIC          reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    EXTERN          reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    SIGNED          reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    UNSIGNED        reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    SHORT           reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    LONG            reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    INT             reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    CHAR            reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    FLOAT           reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    DOUBLE          reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    VOID            reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    TYPEDEF         reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    STRUCT          reduce using rule 10 (define_directive -> HASH DEFINE ID .)
    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

  ! ID              [ reduce using rule 10 (define_directive -> HASH DEFINE ID .) ]

    expression                     shift and go to state 59
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 41

    (15) function_list -> function_list function .

    ID              reduce using rule 15 (function_list -> function_list function .)
    CONST           reduce using rule 15 (function_list -> function_list function .)
    VOLATILE        reduce using rule 15 (function_list -> function_list function .)
    AUTO            reduce using rule 15 (function_list -> function_list function .)
    REGISTER        reduce using rule 15 (function_list -> function_list function .)
    STATIC          reduce using rule 15 (function_list -> function_list function .)
    EXTERN          reduce using rule 15 (function_list -> function_list function .)
    SIGNED          reduce using rule 15 (function_list -> function_list function .)
    UNSIGNED        reduce using rule 15 (function_list -> function_list function .)
    SHORT           reduce using rule 15 (function_list -> function_list function .)
    LONG            reduce using rule 15 (function_list -> function_list function .)
    INT             reduce using rule 15 (function_list -> function_list function .)
    CHAR            reduce using rule 15 (function_list -> function_list function .)
    FLOAT           reduce using rule 15 (function_list -> function_list function .)
    DOUBLE          reduce using rule 15 (function_list -> function_list function .)
    VOID            reduce using rule 15 (function_list -> function_list function .)
    $end            reduce using rule 15 (function_list -> function_list function .)


state 42

    (17) function -> type_specifier ID . LPAREN parameter_list RPAREN compound_statement
    (18) function -> type_specifier ID . LPAREN RPAREN compound_statement

    LPAREN          shift and go to state 67


state 43

    (19) main_function -> type_specifier MAIN . LPAREN RPAREN compound_statement

    LPAREN          shift and go to state 68


state 44

    (57) type_specifier -> non_empty_pre_type_specifier base_type .

    ID              reduce using rule 57 (type_specifier -> non_empty_pre_type_specifier base_type .)
    MAIN            reduce using rule 57 (type_specifier -> non_empty_pre_type_specifier base_type .)


state 45

    (58) type_specifier -> non_empty_pre_type_specifier ID .

    ID              reduce using rule 58 (type_specifier -> non_empty_pre_type_specifier ID .)
    MAIN            reduce using rule 58 (type_specifier -> non_empty_pre_type_specifier ID .)


state 46

    (61) base_type -> INT .

    ID              reduce using rule 61 (base_type -> INT .)
    MAIN            reduce using rule 61 (base_type -> INT .)


state 47

    (62) base_type -> CHAR .

    ID              reduce using rule 62 (base_type -> CHAR .)
    MAIN            reduce using rule 62 (base_type -> CHAR .)


state 48

    (63) base_type -> FLOAT .

    ID              reduce using rule 63 (base_type -> FLOAT .)
    MAIN            reduce using rule 63 (base_type -> FLOAT .)


state 49

    (64) base_type -> DOUBLE .

    ID              reduce using rule 64 (base_type -> DOUBLE .)
    MAIN            reduce using rule 64 (base_type -> DOUBLE .)


state 50

    (65) base_type -> VOID .

    ID              reduce using rule 65 (base_type -> VOID .)
    MAIN            reduce using rule 65 (base_type -> VOID .)


state 51

    (40) declaration -> type_specifier init_declarator_list . SEMICOLON
    (51) init_declarator_list -> init_declarator_list . COMMA init_declarator

    SEMICOLON       shift and go to state 69
    COMMA           shift and go to state 70


state 52

    (50) init_declarator_list -> init_declarator .

    SEMICOLON       reduce using rule 50 (init_declarator_list -> init_declarator .)
    COMMA           reduce using rule 50 (init_declarator_list -> init_declarator .)


state 53

    (52) init_declarator -> ID .
    (53) init_declarator -> ID . EQUALS expression
    (54) init_declarator -> ID . EQUALS LBRACE initializer_list RBRACE

    SEMICOLON       reduce using rule 52 (init_declarator -> ID .)
    COMMA           reduce using rule 52 (init_declarator -> ID .)
    EQUALS          shift and go to state 71


state 54

    (43) typedef_declaration -> TYPEDEF struct_declaration .

    ID              reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    TYPEDEF         reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    STRUCT          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    CONST           reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    VOLATILE        reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    AUTO            reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    REGISTER        reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    STATIC          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    EXTERN          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    SIGNED          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    UNSIGNED        reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    SHORT           reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    LONG            reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    INT             reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    CHAR            reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    FLOAT           reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    DOUBLE          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    VOID            reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    RBRACE          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    IF              reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    WHILE           reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    RETURN          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    LBRACE          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    BREAK           reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    CONTINUE        reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    SWITCH          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    DO              reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    FOR             reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    INTEGER         reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    FLOAT_N         reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    STRING          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    LPAREN          reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    ELSE            reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    DEFAULT         reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)
    CASE            reduce using rule 43 (typedef_declaration -> TYPEDEF struct_declaration .)


state 55

    (44) struct_declaration -> STRUCT optional_id . LBRACE struct_members RBRACE ID SEMICOLON

    LBRACE          shift and go to state 72


state 56

    (48) optional_id -> ID .

    LBRACE          reduce using rule 48 (optional_id -> ID .)


state 57

    (49) optional_id -> empty .

    LBRACE          reduce using rule 49 (optional_id -> empty .)


state 58

    (125) function_call -> ID . LPAREN RPAREN
    (126) function_call -> ID . LPAREN argument_list RPAREN
    (105) factor -> ID .
    (106) factor -> ID . INCREMENT
    (107) factor -> ID . DECREMENT

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    LPAREN          shift and go to state 73
    TIMES           reduce using rule 105 (factor -> ID .)
    DIVIDE          reduce using rule 105 (factor -> ID .)
    MOD             reduce using rule 105 (factor -> ID .)
    LSHIFT          reduce using rule 105 (factor -> ID .)
    RSHIFT          reduce using rule 105 (factor -> ID .)
    PLUS            reduce using rule 105 (factor -> ID .)
    MINUS           reduce using rule 105 (factor -> ID .)
    LT              reduce using rule 105 (factor -> ID .)
    LE              reduce using rule 105 (factor -> ID .)
    GT              reduce using rule 105 (factor -> ID .)
    GE              reduce using rule 105 (factor -> ID .)
    NE              reduce using rule 105 (factor -> ID .)
    COMPARATOR      reduce using rule 105 (factor -> ID .)
    BITWISE_AND     reduce using rule 105 (factor -> ID .)
    BITWISE_OR      reduce using rule 105 (factor -> ID .)
    BITWISE_XOR     reduce using rule 105 (factor -> ID .)
    AND             reduce using rule 105 (factor -> ID .)
    OR              reduce using rule 105 (factor -> ID .)
    DOT             reduce using rule 105 (factor -> ID .)
    HASH            reduce using rule 105 (factor -> ID .)
    ID              reduce using rule 105 (factor -> ID .)
    CONST           reduce using rule 105 (factor -> ID .)
    VOLATILE        reduce using rule 105 (factor -> ID .)
    AUTO            reduce using rule 105 (factor -> ID .)
    REGISTER        reduce using rule 105 (factor -> ID .)
    STATIC          reduce using rule 105 (factor -> ID .)
    EXTERN          reduce using rule 105 (factor -> ID .)
    SIGNED          reduce using rule 105 (factor -> ID .)
    UNSIGNED        reduce using rule 105 (factor -> ID .)
    SHORT           reduce using rule 105 (factor -> ID .)
    LONG            reduce using rule 105 (factor -> ID .)
    INT             reduce using rule 105 (factor -> ID .)
    CHAR            reduce using rule 105 (factor -> ID .)
    FLOAT           reduce using rule 105 (factor -> ID .)
    DOUBLE          reduce using rule 105 (factor -> ID .)
    VOID            reduce using rule 105 (factor -> ID .)
    TYPEDEF         reduce using rule 105 (factor -> ID .)
    STRUCT          reduce using rule 105 (factor -> ID .)
    RPAREN          reduce using rule 105 (factor -> ID .)
    SEMICOLON       reduce using rule 105 (factor -> ID .)
    COMMA           reduce using rule 105 (factor -> ID .)
    RBRACE          reduce using rule 105 (factor -> ID .)
    COLON           reduce using rule 105 (factor -> ID .)
    INCREMENT       shift and go to state 74
    DECREMENT       shift and go to state 75

  ! INCREMENT       [ reduce using rule 105 (factor -> ID .) ]
  ! DECREMENT       [ reduce using rule 105 (factor -> ID .) ]


state 59

    (9) define_directive -> HASH DEFINE ID expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    HASH            reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    ID              reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    CONST           reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    VOLATILE        reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    AUTO            reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    REGISTER        reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    STATIC          reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    EXTERN          reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    SIGNED          reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    UNSIGNED        reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    SHORT           reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    LONG            reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    INT             reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    CHAR            reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    FLOAT           reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    DOUBLE          reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    VOID            reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    TYPEDEF         reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    STRUCT          reduce using rule 9 (define_directive -> HASH DEFINE ID expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 60

    (78) expression -> term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 78 (expression -> term .)
    MINUS           reduce using rule 78 (expression -> term .)
    LT              reduce using rule 78 (expression -> term .)
    LE              reduce using rule 78 (expression -> term .)
    GT              reduce using rule 78 (expression -> term .)
    GE              reduce using rule 78 (expression -> term .)
    NE              reduce using rule 78 (expression -> term .)
    COMPARATOR      reduce using rule 78 (expression -> term .)
    BITWISE_AND     reduce using rule 78 (expression -> term .)
    BITWISE_OR      reduce using rule 78 (expression -> term .)
    BITWISE_XOR     reduce using rule 78 (expression -> term .)
    AND             reduce using rule 78 (expression -> term .)
    OR              reduce using rule 78 (expression -> term .)
    DOT             reduce using rule 78 (expression -> term .)
    INCREMENT       reduce using rule 78 (expression -> term .)
    DECREMENT       reduce using rule 78 (expression -> term .)
    HASH            reduce using rule 78 (expression -> term .)
    ID              reduce using rule 78 (expression -> term .)
    CONST           reduce using rule 78 (expression -> term .)
    VOLATILE        reduce using rule 78 (expression -> term .)
    AUTO            reduce using rule 78 (expression -> term .)
    REGISTER        reduce using rule 78 (expression -> term .)
    STATIC          reduce using rule 78 (expression -> term .)
    EXTERN          reduce using rule 78 (expression -> term .)
    SIGNED          reduce using rule 78 (expression -> term .)
    UNSIGNED        reduce using rule 78 (expression -> term .)
    SHORT           reduce using rule 78 (expression -> term .)
    LONG            reduce using rule 78 (expression -> term .)
    INT             reduce using rule 78 (expression -> term .)
    CHAR            reduce using rule 78 (expression -> term .)
    FLOAT           reduce using rule 78 (expression -> term .)
    DOUBLE          reduce using rule 78 (expression -> term .)
    VOID            reduce using rule 78 (expression -> term .)
    TYPEDEF         reduce using rule 78 (expression -> term .)
    STRUCT          reduce using rule 78 (expression -> term .)
    RPAREN          reduce using rule 78 (expression -> term .)
    SEMICOLON       reduce using rule 78 (expression -> term .)
    COMMA           reduce using rule 78 (expression -> term .)
    RBRACE          reduce using rule 78 (expression -> term .)
    COLON           reduce using rule 78 (expression -> term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 61

    (95) expression -> function_call .

    PLUS            reduce using rule 95 (expression -> function_call .)
    MINUS           reduce using rule 95 (expression -> function_call .)
    LT              reduce using rule 95 (expression -> function_call .)
    LE              reduce using rule 95 (expression -> function_call .)
    GT              reduce using rule 95 (expression -> function_call .)
    GE              reduce using rule 95 (expression -> function_call .)
    NE              reduce using rule 95 (expression -> function_call .)
    COMPARATOR      reduce using rule 95 (expression -> function_call .)
    BITWISE_AND     reduce using rule 95 (expression -> function_call .)
    BITWISE_OR      reduce using rule 95 (expression -> function_call .)
    BITWISE_XOR     reduce using rule 95 (expression -> function_call .)
    AND             reduce using rule 95 (expression -> function_call .)
    OR              reduce using rule 95 (expression -> function_call .)
    DOT             reduce using rule 95 (expression -> function_call .)
    INCREMENT       reduce using rule 95 (expression -> function_call .)
    DECREMENT       reduce using rule 95 (expression -> function_call .)
    HASH            reduce using rule 95 (expression -> function_call .)
    ID              reduce using rule 95 (expression -> function_call .)
    CONST           reduce using rule 95 (expression -> function_call .)
    VOLATILE        reduce using rule 95 (expression -> function_call .)
    AUTO            reduce using rule 95 (expression -> function_call .)
    REGISTER        reduce using rule 95 (expression -> function_call .)
    STATIC          reduce using rule 95 (expression -> function_call .)
    EXTERN          reduce using rule 95 (expression -> function_call .)
    SIGNED          reduce using rule 95 (expression -> function_call .)
    UNSIGNED        reduce using rule 95 (expression -> function_call .)
    SHORT           reduce using rule 95 (expression -> function_call .)
    LONG            reduce using rule 95 (expression -> function_call .)
    INT             reduce using rule 95 (expression -> function_call .)
    CHAR            reduce using rule 95 (expression -> function_call .)
    FLOAT           reduce using rule 95 (expression -> function_call .)
    DOUBLE          reduce using rule 95 (expression -> function_call .)
    VOID            reduce using rule 95 (expression -> function_call .)
    TYPEDEF         reduce using rule 95 (expression -> function_call .)
    STRUCT          reduce using rule 95 (expression -> function_call .)
    RPAREN          reduce using rule 95 (expression -> function_call .)
    SEMICOLON       reduce using rule 95 (expression -> function_call .)
    COMMA           reduce using rule 95 (expression -> function_call .)
    RBRACE          reduce using rule 95 (expression -> function_call .)
    COLON           reduce using rule 95 (expression -> function_call .)


state 62

    (96) term -> factor .

    TIMES           reduce using rule 96 (term -> factor .)
    DIVIDE          reduce using rule 96 (term -> factor .)
    MOD             reduce using rule 96 (term -> factor .)
    LSHIFT          reduce using rule 96 (term -> factor .)
    RSHIFT          reduce using rule 96 (term -> factor .)
    PLUS            reduce using rule 96 (term -> factor .)
    MINUS           reduce using rule 96 (term -> factor .)
    LT              reduce using rule 96 (term -> factor .)
    LE              reduce using rule 96 (term -> factor .)
    GT              reduce using rule 96 (term -> factor .)
    GE              reduce using rule 96 (term -> factor .)
    NE              reduce using rule 96 (term -> factor .)
    COMPARATOR      reduce using rule 96 (term -> factor .)
    BITWISE_AND     reduce using rule 96 (term -> factor .)
    BITWISE_OR      reduce using rule 96 (term -> factor .)
    BITWISE_XOR     reduce using rule 96 (term -> factor .)
    AND             reduce using rule 96 (term -> factor .)
    OR              reduce using rule 96 (term -> factor .)
    DOT             reduce using rule 96 (term -> factor .)
    INCREMENT       reduce using rule 96 (term -> factor .)
    DECREMENT       reduce using rule 96 (term -> factor .)
    HASH            reduce using rule 96 (term -> factor .)
    ID              reduce using rule 96 (term -> factor .)
    CONST           reduce using rule 96 (term -> factor .)
    VOLATILE        reduce using rule 96 (term -> factor .)
    AUTO            reduce using rule 96 (term -> factor .)
    REGISTER        reduce using rule 96 (term -> factor .)
    STATIC          reduce using rule 96 (term -> factor .)
    EXTERN          reduce using rule 96 (term -> factor .)
    SIGNED          reduce using rule 96 (term -> factor .)
    UNSIGNED        reduce using rule 96 (term -> factor .)
    SHORT           reduce using rule 96 (term -> factor .)
    LONG            reduce using rule 96 (term -> factor .)
    INT             reduce using rule 96 (term -> factor .)
    CHAR            reduce using rule 96 (term -> factor .)
    FLOAT           reduce using rule 96 (term -> factor .)
    DOUBLE          reduce using rule 96 (term -> factor .)
    VOID            reduce using rule 96 (term -> factor .)
    TYPEDEF         reduce using rule 96 (term -> factor .)
    STRUCT          reduce using rule 96 (term -> factor .)
    RPAREN          reduce using rule 96 (term -> factor .)
    SEMICOLON       reduce using rule 96 (term -> factor .)
    COMMA           reduce using rule 96 (term -> factor .)
    RBRACE          reduce using rule 96 (term -> factor .)
    COLON           reduce using rule 96 (term -> factor .)


state 63

    (108) factor -> LPAREN . expression RPAREN
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 97
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 64

    (102) factor -> INTEGER .

    TIMES           reduce using rule 102 (factor -> INTEGER .)
    DIVIDE          reduce using rule 102 (factor -> INTEGER .)
    MOD             reduce using rule 102 (factor -> INTEGER .)
    LSHIFT          reduce using rule 102 (factor -> INTEGER .)
    RSHIFT          reduce using rule 102 (factor -> INTEGER .)
    PLUS            reduce using rule 102 (factor -> INTEGER .)
    MINUS           reduce using rule 102 (factor -> INTEGER .)
    LT              reduce using rule 102 (factor -> INTEGER .)
    LE              reduce using rule 102 (factor -> INTEGER .)
    GT              reduce using rule 102 (factor -> INTEGER .)
    GE              reduce using rule 102 (factor -> INTEGER .)
    NE              reduce using rule 102 (factor -> INTEGER .)
    COMPARATOR      reduce using rule 102 (factor -> INTEGER .)
    BITWISE_AND     reduce using rule 102 (factor -> INTEGER .)
    BITWISE_OR      reduce using rule 102 (factor -> INTEGER .)
    BITWISE_XOR     reduce using rule 102 (factor -> INTEGER .)
    AND             reduce using rule 102 (factor -> INTEGER .)
    OR              reduce using rule 102 (factor -> INTEGER .)
    DOT             reduce using rule 102 (factor -> INTEGER .)
    INCREMENT       reduce using rule 102 (factor -> INTEGER .)
    DECREMENT       reduce using rule 102 (factor -> INTEGER .)
    HASH            reduce using rule 102 (factor -> INTEGER .)
    ID              reduce using rule 102 (factor -> INTEGER .)
    CONST           reduce using rule 102 (factor -> INTEGER .)
    VOLATILE        reduce using rule 102 (factor -> INTEGER .)
    AUTO            reduce using rule 102 (factor -> INTEGER .)
    REGISTER        reduce using rule 102 (factor -> INTEGER .)
    STATIC          reduce using rule 102 (factor -> INTEGER .)
    EXTERN          reduce using rule 102 (factor -> INTEGER .)
    SIGNED          reduce using rule 102 (factor -> INTEGER .)
    UNSIGNED        reduce using rule 102 (factor -> INTEGER .)
    SHORT           reduce using rule 102 (factor -> INTEGER .)
    LONG            reduce using rule 102 (factor -> INTEGER .)
    INT             reduce using rule 102 (factor -> INTEGER .)
    CHAR            reduce using rule 102 (factor -> INTEGER .)
    FLOAT           reduce using rule 102 (factor -> INTEGER .)
    DOUBLE          reduce using rule 102 (factor -> INTEGER .)
    VOID            reduce using rule 102 (factor -> INTEGER .)
    TYPEDEF         reduce using rule 102 (factor -> INTEGER .)
    STRUCT          reduce using rule 102 (factor -> INTEGER .)
    RPAREN          reduce using rule 102 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 102 (factor -> INTEGER .)
    COMMA           reduce using rule 102 (factor -> INTEGER .)
    RBRACE          reduce using rule 102 (factor -> INTEGER .)
    COLON           reduce using rule 102 (factor -> INTEGER .)
    IF              reduce using rule 102 (factor -> INTEGER .)
    WHILE           reduce using rule 102 (factor -> INTEGER .)
    RETURN          reduce using rule 102 (factor -> INTEGER .)
    LBRACE          reduce using rule 102 (factor -> INTEGER .)
    BREAK           reduce using rule 102 (factor -> INTEGER .)
    CONTINUE        reduce using rule 102 (factor -> INTEGER .)
    SWITCH          reduce using rule 102 (factor -> INTEGER .)
    DO              reduce using rule 102 (factor -> INTEGER .)
    FOR             reduce using rule 102 (factor -> INTEGER .)
    INTEGER         reduce using rule 102 (factor -> INTEGER .)
    FLOAT_N         reduce using rule 102 (factor -> INTEGER .)
    STRING          reduce using rule 102 (factor -> INTEGER .)
    LPAREN          reduce using rule 102 (factor -> INTEGER .)


state 65

    (103) factor -> FLOAT_N .

    TIMES           reduce using rule 103 (factor -> FLOAT_N .)
    DIVIDE          reduce using rule 103 (factor -> FLOAT_N .)
    MOD             reduce using rule 103 (factor -> FLOAT_N .)
    LSHIFT          reduce using rule 103 (factor -> FLOAT_N .)
    RSHIFT          reduce using rule 103 (factor -> FLOAT_N .)
    PLUS            reduce using rule 103 (factor -> FLOAT_N .)
    MINUS           reduce using rule 103 (factor -> FLOAT_N .)
    LT              reduce using rule 103 (factor -> FLOAT_N .)
    LE              reduce using rule 103 (factor -> FLOAT_N .)
    GT              reduce using rule 103 (factor -> FLOAT_N .)
    GE              reduce using rule 103 (factor -> FLOAT_N .)
    NE              reduce using rule 103 (factor -> FLOAT_N .)
    COMPARATOR      reduce using rule 103 (factor -> FLOAT_N .)
    BITWISE_AND     reduce using rule 103 (factor -> FLOAT_N .)
    BITWISE_OR      reduce using rule 103 (factor -> FLOAT_N .)
    BITWISE_XOR     reduce using rule 103 (factor -> FLOAT_N .)
    AND             reduce using rule 103 (factor -> FLOAT_N .)
    OR              reduce using rule 103 (factor -> FLOAT_N .)
    DOT             reduce using rule 103 (factor -> FLOAT_N .)
    INCREMENT       reduce using rule 103 (factor -> FLOAT_N .)
    DECREMENT       reduce using rule 103 (factor -> FLOAT_N .)
    HASH            reduce using rule 103 (factor -> FLOAT_N .)
    ID              reduce using rule 103 (factor -> FLOAT_N .)
    CONST           reduce using rule 103 (factor -> FLOAT_N .)
    VOLATILE        reduce using rule 103 (factor -> FLOAT_N .)
    AUTO            reduce using rule 103 (factor -> FLOAT_N .)
    REGISTER        reduce using rule 103 (factor -> FLOAT_N .)
    STATIC          reduce using rule 103 (factor -> FLOAT_N .)
    EXTERN          reduce using rule 103 (factor -> FLOAT_N .)
    SIGNED          reduce using rule 103 (factor -> FLOAT_N .)
    UNSIGNED        reduce using rule 103 (factor -> FLOAT_N .)
    SHORT           reduce using rule 103 (factor -> FLOAT_N .)
    LONG            reduce using rule 103 (factor -> FLOAT_N .)
    INT             reduce using rule 103 (factor -> FLOAT_N .)
    CHAR            reduce using rule 103 (factor -> FLOAT_N .)
    FLOAT           reduce using rule 103 (factor -> FLOAT_N .)
    DOUBLE          reduce using rule 103 (factor -> FLOAT_N .)
    VOID            reduce using rule 103 (factor -> FLOAT_N .)
    TYPEDEF         reduce using rule 103 (factor -> FLOAT_N .)
    STRUCT          reduce using rule 103 (factor -> FLOAT_N .)
    RPAREN          reduce using rule 103 (factor -> FLOAT_N .)
    SEMICOLON       reduce using rule 103 (factor -> FLOAT_N .)
    COMMA           reduce using rule 103 (factor -> FLOAT_N .)
    RBRACE          reduce using rule 103 (factor -> FLOAT_N .)
    COLON           reduce using rule 103 (factor -> FLOAT_N .)
    IF              reduce using rule 103 (factor -> FLOAT_N .)
    WHILE           reduce using rule 103 (factor -> FLOAT_N .)
    RETURN          reduce using rule 103 (factor -> FLOAT_N .)
    LBRACE          reduce using rule 103 (factor -> FLOAT_N .)
    BREAK           reduce using rule 103 (factor -> FLOAT_N .)
    CONTINUE        reduce using rule 103 (factor -> FLOAT_N .)
    SWITCH          reduce using rule 103 (factor -> FLOAT_N .)
    DO              reduce using rule 103 (factor -> FLOAT_N .)
    FOR             reduce using rule 103 (factor -> FLOAT_N .)
    INTEGER         reduce using rule 103 (factor -> FLOAT_N .)
    FLOAT_N         reduce using rule 103 (factor -> FLOAT_N .)
    STRING          reduce using rule 103 (factor -> FLOAT_N .)
    LPAREN          reduce using rule 103 (factor -> FLOAT_N .)


state 66

    (104) factor -> STRING .

    TIMES           reduce using rule 104 (factor -> STRING .)
    DIVIDE          reduce using rule 104 (factor -> STRING .)
    MOD             reduce using rule 104 (factor -> STRING .)
    LSHIFT          reduce using rule 104 (factor -> STRING .)
    RSHIFT          reduce using rule 104 (factor -> STRING .)
    PLUS            reduce using rule 104 (factor -> STRING .)
    MINUS           reduce using rule 104 (factor -> STRING .)
    LT              reduce using rule 104 (factor -> STRING .)
    LE              reduce using rule 104 (factor -> STRING .)
    GT              reduce using rule 104 (factor -> STRING .)
    GE              reduce using rule 104 (factor -> STRING .)
    NE              reduce using rule 104 (factor -> STRING .)
    COMPARATOR      reduce using rule 104 (factor -> STRING .)
    BITWISE_AND     reduce using rule 104 (factor -> STRING .)
    BITWISE_OR      reduce using rule 104 (factor -> STRING .)
    BITWISE_XOR     reduce using rule 104 (factor -> STRING .)
    AND             reduce using rule 104 (factor -> STRING .)
    OR              reduce using rule 104 (factor -> STRING .)
    DOT             reduce using rule 104 (factor -> STRING .)
    INCREMENT       reduce using rule 104 (factor -> STRING .)
    DECREMENT       reduce using rule 104 (factor -> STRING .)
    HASH            reduce using rule 104 (factor -> STRING .)
    ID              reduce using rule 104 (factor -> STRING .)
    CONST           reduce using rule 104 (factor -> STRING .)
    VOLATILE        reduce using rule 104 (factor -> STRING .)
    AUTO            reduce using rule 104 (factor -> STRING .)
    REGISTER        reduce using rule 104 (factor -> STRING .)
    STATIC          reduce using rule 104 (factor -> STRING .)
    EXTERN          reduce using rule 104 (factor -> STRING .)
    SIGNED          reduce using rule 104 (factor -> STRING .)
    UNSIGNED        reduce using rule 104 (factor -> STRING .)
    SHORT           reduce using rule 104 (factor -> STRING .)
    LONG            reduce using rule 104 (factor -> STRING .)
    INT             reduce using rule 104 (factor -> STRING .)
    CHAR            reduce using rule 104 (factor -> STRING .)
    FLOAT           reduce using rule 104 (factor -> STRING .)
    DOUBLE          reduce using rule 104 (factor -> STRING .)
    VOID            reduce using rule 104 (factor -> STRING .)
    TYPEDEF         reduce using rule 104 (factor -> STRING .)
    STRUCT          reduce using rule 104 (factor -> STRING .)
    RPAREN          reduce using rule 104 (factor -> STRING .)
    SEMICOLON       reduce using rule 104 (factor -> STRING .)
    COMMA           reduce using rule 104 (factor -> STRING .)
    RBRACE          reduce using rule 104 (factor -> STRING .)
    COLON           reduce using rule 104 (factor -> STRING .)
    IF              reduce using rule 104 (factor -> STRING .)
    WHILE           reduce using rule 104 (factor -> STRING .)
    RETURN          reduce using rule 104 (factor -> STRING .)
    LBRACE          reduce using rule 104 (factor -> STRING .)
    BREAK           reduce using rule 104 (factor -> STRING .)
    CONTINUE        reduce using rule 104 (factor -> STRING .)
    SWITCH          reduce using rule 104 (factor -> STRING .)
    DO              reduce using rule 104 (factor -> STRING .)
    FOR             reduce using rule 104 (factor -> STRING .)
    INTEGER         reduce using rule 104 (factor -> STRING .)
    FLOAT_N         reduce using rule 104 (factor -> STRING .)
    STRING          reduce using rule 104 (factor -> STRING .)
    LPAREN          reduce using rule 104 (factor -> STRING .)


state 67

    (17) function -> type_specifier ID LPAREN . parameter_list RPAREN compound_statement
    (18) function -> type_specifier ID LPAREN . RPAREN compound_statement
    (20) parameter_list -> . parameter
    (21) parameter_list -> . parameter_list COMMA parameter
    (22) parameter_list -> . empty
    (23) parameter -> . type_specifier ID
    (129) empty -> .
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RPAREN          shift and go to state 100
    COMMA           reduce using rule 129 (empty -> .)
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)
    ID              shift and go to state 19
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31

  ! RPAREN          [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]

    type_specifier                 shift and go to state 98
    parameter_list                 shift and go to state 99
    parameter                      shift and go to state 101
    empty                          shift and go to state 102
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21

state 68

    (19) main_function -> type_specifier MAIN LPAREN . RPAREN compound_statement

    RPAREN          shift and go to state 103


state 69

    (40) declaration -> type_specifier init_declarator_list SEMICOLON .

    ID              reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    TYPEDEF         reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    STRUCT          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    CONST           reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    VOLATILE        reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    AUTO            reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    REGISTER        reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    STATIC          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    EXTERN          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    SIGNED          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    UNSIGNED        reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    SHORT           reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    LONG            reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    INT             reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    CHAR            reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    FLOAT           reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    DOUBLE          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    VOID            reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    RBRACE          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    IF              reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    WHILE           reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    RETURN          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    LBRACE          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    BREAK           reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    CONTINUE        reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    SWITCH          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    DO              reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    FOR             reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    INTEGER         reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    FLOAT_N         reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    STRING          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    LPAREN          reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    ELSE            reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    DEFAULT         reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)
    CASE            reduce using rule 40 (declaration -> type_specifier init_declarator_list SEMICOLON .)


state 70

    (51) init_declarator_list -> init_declarator_list COMMA . init_declarator
    (52) init_declarator -> . ID
    (53) init_declarator -> . ID EQUALS expression
    (54) init_declarator -> . ID EQUALS LBRACE initializer_list RBRACE

    ID              shift and go to state 53

    init_declarator                shift and go to state 104

state 71

    (53) init_declarator -> ID EQUALS . expression
    (54) init_declarator -> ID EQUALS . LBRACE initializer_list RBRACE
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    LBRACE          shift and go to state 106
    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 105
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 72

    (44) struct_declaration -> STRUCT optional_id LBRACE . struct_members RBRACE ID SEMICOLON
    (45) struct_members -> . struct_member
    (46) struct_members -> . struct_members struct_member
    (47) struct_member -> . type_specifier ID SEMICOLON
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 19
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    struct_members                 shift and go to state 107
    struct_member                  shift and go to state 108
    type_specifier                 shift and go to state 109
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 73

    (125) function_call -> ID LPAREN . RPAREN
    (126) function_call -> ID LPAREN . argument_list RPAREN
    (127) argument_list -> . expression
    (128) argument_list -> . argument_list COMMA expression
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 110
    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    argument_list                  shift and go to state 111
    expression                     shift and go to state 112
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 74

    (106) factor -> ID INCREMENT .

    TIMES           reduce using rule 106 (factor -> ID INCREMENT .)
    DIVIDE          reduce using rule 106 (factor -> ID INCREMENT .)
    MOD             reduce using rule 106 (factor -> ID INCREMENT .)
    LSHIFT          reduce using rule 106 (factor -> ID INCREMENT .)
    RSHIFT          reduce using rule 106 (factor -> ID INCREMENT .)
    PLUS            reduce using rule 106 (factor -> ID INCREMENT .)
    MINUS           reduce using rule 106 (factor -> ID INCREMENT .)
    LT              reduce using rule 106 (factor -> ID INCREMENT .)
    LE              reduce using rule 106 (factor -> ID INCREMENT .)
    GT              reduce using rule 106 (factor -> ID INCREMENT .)
    GE              reduce using rule 106 (factor -> ID INCREMENT .)
    NE              reduce using rule 106 (factor -> ID INCREMENT .)
    COMPARATOR      reduce using rule 106 (factor -> ID INCREMENT .)
    BITWISE_AND     reduce using rule 106 (factor -> ID INCREMENT .)
    BITWISE_OR      reduce using rule 106 (factor -> ID INCREMENT .)
    BITWISE_XOR     reduce using rule 106 (factor -> ID INCREMENT .)
    AND             reduce using rule 106 (factor -> ID INCREMENT .)
    OR              reduce using rule 106 (factor -> ID INCREMENT .)
    DOT             reduce using rule 106 (factor -> ID INCREMENT .)
    INCREMENT       reduce using rule 106 (factor -> ID INCREMENT .)
    DECREMENT       reduce using rule 106 (factor -> ID INCREMENT .)
    HASH            reduce using rule 106 (factor -> ID INCREMENT .)
    ID              reduce using rule 106 (factor -> ID INCREMENT .)
    CONST           reduce using rule 106 (factor -> ID INCREMENT .)
    VOLATILE        reduce using rule 106 (factor -> ID INCREMENT .)
    AUTO            reduce using rule 106 (factor -> ID INCREMENT .)
    REGISTER        reduce using rule 106 (factor -> ID INCREMENT .)
    STATIC          reduce using rule 106 (factor -> ID INCREMENT .)
    EXTERN          reduce using rule 106 (factor -> ID INCREMENT .)
    SIGNED          reduce using rule 106 (factor -> ID INCREMENT .)
    UNSIGNED        reduce using rule 106 (factor -> ID INCREMENT .)
    SHORT           reduce using rule 106 (factor -> ID INCREMENT .)
    LONG            reduce using rule 106 (factor -> ID INCREMENT .)
    INT             reduce using rule 106 (factor -> ID INCREMENT .)
    CHAR            reduce using rule 106 (factor -> ID INCREMENT .)
    FLOAT           reduce using rule 106 (factor -> ID INCREMENT .)
    DOUBLE          reduce using rule 106 (factor -> ID INCREMENT .)
    VOID            reduce using rule 106 (factor -> ID INCREMENT .)
    TYPEDEF         reduce using rule 106 (factor -> ID INCREMENT .)
    STRUCT          reduce using rule 106 (factor -> ID INCREMENT .)
    RPAREN          reduce using rule 106 (factor -> ID INCREMENT .)
    SEMICOLON       reduce using rule 106 (factor -> ID INCREMENT .)
    COMMA           reduce using rule 106 (factor -> ID INCREMENT .)
    RBRACE          reduce using rule 106 (factor -> ID INCREMENT .)
    COLON           reduce using rule 106 (factor -> ID INCREMENT .)
    IF              reduce using rule 106 (factor -> ID INCREMENT .)
    WHILE           reduce using rule 106 (factor -> ID INCREMENT .)
    RETURN          reduce using rule 106 (factor -> ID INCREMENT .)
    LBRACE          reduce using rule 106 (factor -> ID INCREMENT .)
    BREAK           reduce using rule 106 (factor -> ID INCREMENT .)
    CONTINUE        reduce using rule 106 (factor -> ID INCREMENT .)
    SWITCH          reduce using rule 106 (factor -> ID INCREMENT .)
    DO              reduce using rule 106 (factor -> ID INCREMENT .)
    FOR             reduce using rule 106 (factor -> ID INCREMENT .)
    INTEGER         reduce using rule 106 (factor -> ID INCREMENT .)
    FLOAT_N         reduce using rule 106 (factor -> ID INCREMENT .)
    STRING          reduce using rule 106 (factor -> ID INCREMENT .)
    LPAREN          reduce using rule 106 (factor -> ID INCREMENT .)


state 75

    (107) factor -> ID DECREMENT .

    TIMES           reduce using rule 107 (factor -> ID DECREMENT .)
    DIVIDE          reduce using rule 107 (factor -> ID DECREMENT .)
    MOD             reduce using rule 107 (factor -> ID DECREMENT .)
    LSHIFT          reduce using rule 107 (factor -> ID DECREMENT .)
    RSHIFT          reduce using rule 107 (factor -> ID DECREMENT .)
    PLUS            reduce using rule 107 (factor -> ID DECREMENT .)
    MINUS           reduce using rule 107 (factor -> ID DECREMENT .)
    LT              reduce using rule 107 (factor -> ID DECREMENT .)
    LE              reduce using rule 107 (factor -> ID DECREMENT .)
    GT              reduce using rule 107 (factor -> ID DECREMENT .)
    GE              reduce using rule 107 (factor -> ID DECREMENT .)
    NE              reduce using rule 107 (factor -> ID DECREMENT .)
    COMPARATOR      reduce using rule 107 (factor -> ID DECREMENT .)
    BITWISE_AND     reduce using rule 107 (factor -> ID DECREMENT .)
    BITWISE_OR      reduce using rule 107 (factor -> ID DECREMENT .)
    BITWISE_XOR     reduce using rule 107 (factor -> ID DECREMENT .)
    AND             reduce using rule 107 (factor -> ID DECREMENT .)
    OR              reduce using rule 107 (factor -> ID DECREMENT .)
    DOT             reduce using rule 107 (factor -> ID DECREMENT .)
    INCREMENT       reduce using rule 107 (factor -> ID DECREMENT .)
    DECREMENT       reduce using rule 107 (factor -> ID DECREMENT .)
    HASH            reduce using rule 107 (factor -> ID DECREMENT .)
    ID              reduce using rule 107 (factor -> ID DECREMENT .)
    CONST           reduce using rule 107 (factor -> ID DECREMENT .)
    VOLATILE        reduce using rule 107 (factor -> ID DECREMENT .)
    AUTO            reduce using rule 107 (factor -> ID DECREMENT .)
    REGISTER        reduce using rule 107 (factor -> ID DECREMENT .)
    STATIC          reduce using rule 107 (factor -> ID DECREMENT .)
    EXTERN          reduce using rule 107 (factor -> ID DECREMENT .)
    SIGNED          reduce using rule 107 (factor -> ID DECREMENT .)
    UNSIGNED        reduce using rule 107 (factor -> ID DECREMENT .)
    SHORT           reduce using rule 107 (factor -> ID DECREMENT .)
    LONG            reduce using rule 107 (factor -> ID DECREMENT .)
    INT             reduce using rule 107 (factor -> ID DECREMENT .)
    CHAR            reduce using rule 107 (factor -> ID DECREMENT .)
    FLOAT           reduce using rule 107 (factor -> ID DECREMENT .)
    DOUBLE          reduce using rule 107 (factor -> ID DECREMENT .)
    VOID            reduce using rule 107 (factor -> ID DECREMENT .)
    TYPEDEF         reduce using rule 107 (factor -> ID DECREMENT .)
    STRUCT          reduce using rule 107 (factor -> ID DECREMENT .)
    RPAREN          reduce using rule 107 (factor -> ID DECREMENT .)
    SEMICOLON       reduce using rule 107 (factor -> ID DECREMENT .)
    COMMA           reduce using rule 107 (factor -> ID DECREMENT .)
    RBRACE          reduce using rule 107 (factor -> ID DECREMENT .)
    COLON           reduce using rule 107 (factor -> ID DECREMENT .)
    IF              reduce using rule 107 (factor -> ID DECREMENT .)
    WHILE           reduce using rule 107 (factor -> ID DECREMENT .)
    RETURN          reduce using rule 107 (factor -> ID DECREMENT .)
    LBRACE          reduce using rule 107 (factor -> ID DECREMENT .)
    BREAK           reduce using rule 107 (factor -> ID DECREMENT .)
    CONTINUE        reduce using rule 107 (factor -> ID DECREMENT .)
    SWITCH          reduce using rule 107 (factor -> ID DECREMENT .)
    DO              reduce using rule 107 (factor -> ID DECREMENT .)
    FOR             reduce using rule 107 (factor -> ID DECREMENT .)
    INTEGER         reduce using rule 107 (factor -> ID DECREMENT .)
    FLOAT_N         reduce using rule 107 (factor -> ID DECREMENT .)
    STRING          reduce using rule 107 (factor -> ID DECREMENT .)
    LPAREN          reduce using rule 107 (factor -> ID DECREMENT .)


state 76

    (79) expression -> expression PLUS . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 113
    factor                         shift and go to state 62

state 77

    (80) expression -> expression MINUS . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 115
    factor                         shift and go to state 62

state 78

    (81) expression -> expression LT . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 116
    factor                         shift and go to state 62

state 79

    (82) expression -> expression LE . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 117
    factor                         shift and go to state 62

state 80

    (83) expression -> expression GT . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 118
    factor                         shift and go to state 62

state 81

    (84) expression -> expression GE . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 119
    factor                         shift and go to state 62

state 82

    (85) expression -> expression NE . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 120
    factor                         shift and go to state 62

state 83

    (86) expression -> expression COMPARATOR . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 121
    factor                         shift and go to state 62

state 84

    (87) expression -> expression BITWISE_AND . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 122
    factor                         shift and go to state 62

state 85

    (88) expression -> expression BITWISE_OR . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 123
    factor                         shift and go to state 62

state 86

    (89) expression -> expression BITWISE_XOR . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 124
    factor                         shift and go to state 62

state 87

    (90) expression -> expression AND . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 125
    factor                         shift and go to state 62

state 88

    (91) expression -> expression OR . term
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    term                           shift and go to state 126
    factor                         shift and go to state 62

state 89

    (92) expression -> expression DOT . ID

    ID              shift and go to state 127


state 90

    (93) expression -> expression INCREMENT .

    PLUS            reduce using rule 93 (expression -> expression INCREMENT .)
    MINUS           reduce using rule 93 (expression -> expression INCREMENT .)
    LT              reduce using rule 93 (expression -> expression INCREMENT .)
    LE              reduce using rule 93 (expression -> expression INCREMENT .)
    GT              reduce using rule 93 (expression -> expression INCREMENT .)
    GE              reduce using rule 93 (expression -> expression INCREMENT .)
    NE              reduce using rule 93 (expression -> expression INCREMENT .)
    COMPARATOR      reduce using rule 93 (expression -> expression INCREMENT .)
    BITWISE_AND     reduce using rule 93 (expression -> expression INCREMENT .)
    BITWISE_OR      reduce using rule 93 (expression -> expression INCREMENT .)
    BITWISE_XOR     reduce using rule 93 (expression -> expression INCREMENT .)
    AND             reduce using rule 93 (expression -> expression INCREMENT .)
    OR              reduce using rule 93 (expression -> expression INCREMENT .)
    DOT             reduce using rule 93 (expression -> expression INCREMENT .)
    INCREMENT       reduce using rule 93 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 93 (expression -> expression INCREMENT .)
    HASH            reduce using rule 93 (expression -> expression INCREMENT .)
    ID              reduce using rule 93 (expression -> expression INCREMENT .)
    CONST           reduce using rule 93 (expression -> expression INCREMENT .)
    VOLATILE        reduce using rule 93 (expression -> expression INCREMENT .)
    AUTO            reduce using rule 93 (expression -> expression INCREMENT .)
    REGISTER        reduce using rule 93 (expression -> expression INCREMENT .)
    STATIC          reduce using rule 93 (expression -> expression INCREMENT .)
    EXTERN          reduce using rule 93 (expression -> expression INCREMENT .)
    SIGNED          reduce using rule 93 (expression -> expression INCREMENT .)
    UNSIGNED        reduce using rule 93 (expression -> expression INCREMENT .)
    SHORT           reduce using rule 93 (expression -> expression INCREMENT .)
    LONG            reduce using rule 93 (expression -> expression INCREMENT .)
    INT             reduce using rule 93 (expression -> expression INCREMENT .)
    CHAR            reduce using rule 93 (expression -> expression INCREMENT .)
    FLOAT           reduce using rule 93 (expression -> expression INCREMENT .)
    DOUBLE          reduce using rule 93 (expression -> expression INCREMENT .)
    VOID            reduce using rule 93 (expression -> expression INCREMENT .)
    TYPEDEF         reduce using rule 93 (expression -> expression INCREMENT .)
    STRUCT          reduce using rule 93 (expression -> expression INCREMENT .)
    RPAREN          reduce using rule 93 (expression -> expression INCREMENT .)
    SEMICOLON       reduce using rule 93 (expression -> expression INCREMENT .)
    COMMA           reduce using rule 93 (expression -> expression INCREMENT .)
    RBRACE          reduce using rule 93 (expression -> expression INCREMENT .)
    COLON           reduce using rule 93 (expression -> expression INCREMENT .)


state 91

    (94) expression -> expression DECREMENT .

    PLUS            reduce using rule 94 (expression -> expression DECREMENT .)
    MINUS           reduce using rule 94 (expression -> expression DECREMENT .)
    LT              reduce using rule 94 (expression -> expression DECREMENT .)
    LE              reduce using rule 94 (expression -> expression DECREMENT .)
    GT              reduce using rule 94 (expression -> expression DECREMENT .)
    GE              reduce using rule 94 (expression -> expression DECREMENT .)
    NE              reduce using rule 94 (expression -> expression DECREMENT .)
    COMPARATOR      reduce using rule 94 (expression -> expression DECREMENT .)
    BITWISE_AND     reduce using rule 94 (expression -> expression DECREMENT .)
    BITWISE_OR      reduce using rule 94 (expression -> expression DECREMENT .)
    BITWISE_XOR     reduce using rule 94 (expression -> expression DECREMENT .)
    AND             reduce using rule 94 (expression -> expression DECREMENT .)
    OR              reduce using rule 94 (expression -> expression DECREMENT .)
    DOT             reduce using rule 94 (expression -> expression DECREMENT .)
    INCREMENT       reduce using rule 94 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 94 (expression -> expression DECREMENT .)
    HASH            reduce using rule 94 (expression -> expression DECREMENT .)
    ID              reduce using rule 94 (expression -> expression DECREMENT .)
    CONST           reduce using rule 94 (expression -> expression DECREMENT .)
    VOLATILE        reduce using rule 94 (expression -> expression DECREMENT .)
    AUTO            reduce using rule 94 (expression -> expression DECREMENT .)
    REGISTER        reduce using rule 94 (expression -> expression DECREMENT .)
    STATIC          reduce using rule 94 (expression -> expression DECREMENT .)
    EXTERN          reduce using rule 94 (expression -> expression DECREMENT .)
    SIGNED          reduce using rule 94 (expression -> expression DECREMENT .)
    UNSIGNED        reduce using rule 94 (expression -> expression DECREMENT .)
    SHORT           reduce using rule 94 (expression -> expression DECREMENT .)
    LONG            reduce using rule 94 (expression -> expression DECREMENT .)
    INT             reduce using rule 94 (expression -> expression DECREMENT .)
    CHAR            reduce using rule 94 (expression -> expression DECREMENT .)
    FLOAT           reduce using rule 94 (expression -> expression DECREMENT .)
    DOUBLE          reduce using rule 94 (expression -> expression DECREMENT .)
    VOID            reduce using rule 94 (expression -> expression DECREMENT .)
    TYPEDEF         reduce using rule 94 (expression -> expression DECREMENT .)
    STRUCT          reduce using rule 94 (expression -> expression DECREMENT .)
    RPAREN          reduce using rule 94 (expression -> expression DECREMENT .)
    SEMICOLON       reduce using rule 94 (expression -> expression DECREMENT .)
    COMMA           reduce using rule 94 (expression -> expression DECREMENT .)
    RBRACE          reduce using rule 94 (expression -> expression DECREMENT .)
    COLON           reduce using rule 94 (expression -> expression DECREMENT .)


state 92

    (97) term -> term TIMES . factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 128

state 93

    (98) term -> term DIVIDE . factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 129

state 94

    (99) term -> term MOD . factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 130

state 95

    (100) term -> term LSHIFT . factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 131

state 96

    (101) term -> term RSHIFT . factor
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 132

state 97

    (108) factor -> LPAREN expression . RPAREN
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RPAREN          shift and go to state 133
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 98

    (23) parameter -> type_specifier . ID

    ID              shift and go to state 134


state 99

    (17) function -> type_specifier ID LPAREN parameter_list . RPAREN compound_statement
    (21) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 135
    COMMA           shift and go to state 136


state 100

    (18) function -> type_specifier ID LPAREN RPAREN . compound_statement
    (24) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 138

    compound_statement             shift and go to state 137

state 101

    (20) parameter_list -> parameter .

    RPAREN          reduce using rule 20 (parameter_list -> parameter .)
    COMMA           reduce using rule 20 (parameter_list -> parameter .)


state 102

    (22) parameter_list -> empty .
    (76) pre_type_specifier -> empty .

    RPAREN          reduce using rule 22 (parameter_list -> empty .)
    COMMA           reduce using rule 22 (parameter_list -> empty .)
    ID              reduce using rule 76 (pre_type_specifier -> empty .)
    INT             reduce using rule 76 (pre_type_specifier -> empty .)
    CHAR            reduce using rule 76 (pre_type_specifier -> empty .)
    FLOAT           reduce using rule 76 (pre_type_specifier -> empty .)
    DOUBLE          reduce using rule 76 (pre_type_specifier -> empty .)
    VOID            reduce using rule 76 (pre_type_specifier -> empty .)


state 103

    (19) main_function -> type_specifier MAIN LPAREN RPAREN . compound_statement
    (24) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 138

    compound_statement             shift and go to state 139

state 104

    (51) init_declarator_list -> init_declarator_list COMMA init_declarator .

    SEMICOLON       reduce using rule 51 (init_declarator_list -> init_declarator_list COMMA init_declarator .)
    COMMA           reduce using rule 51 (init_declarator_list -> init_declarator_list COMMA init_declarator .)


state 105

    (53) init_declarator -> ID EQUALS expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       reduce using rule 53 (init_declarator -> ID EQUALS expression .)
    COMMA           reduce using rule 53 (init_declarator -> ID EQUALS expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 106

    (54) init_declarator -> ID EQUALS LBRACE . initializer_list RBRACE
    (55) initializer_list -> . expression
    (56) initializer_list -> . initializer_list COMMA expression
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    initializer_list               shift and go to state 140
    expression                     shift and go to state 141
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 107

    (44) struct_declaration -> STRUCT optional_id LBRACE struct_members . RBRACE ID SEMICOLON
    (46) struct_members -> struct_members . struct_member
    (47) struct_member -> . type_specifier ID SEMICOLON
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          shift and go to state 142
    ID              shift and go to state 19
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    struct_member                  shift and go to state 143
    type_specifier                 shift and go to state 109
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 108

    (45) struct_members -> struct_member .

    RBRACE          reduce using rule 45 (struct_members -> struct_member .)
    ID              reduce using rule 45 (struct_members -> struct_member .)
    CONST           reduce using rule 45 (struct_members -> struct_member .)
    VOLATILE        reduce using rule 45 (struct_members -> struct_member .)
    AUTO            reduce using rule 45 (struct_members -> struct_member .)
    REGISTER        reduce using rule 45 (struct_members -> struct_member .)
    STATIC          reduce using rule 45 (struct_members -> struct_member .)
    EXTERN          reduce using rule 45 (struct_members -> struct_member .)
    SIGNED          reduce using rule 45 (struct_members -> struct_member .)
    UNSIGNED        reduce using rule 45 (struct_members -> struct_member .)
    SHORT           reduce using rule 45 (struct_members -> struct_member .)
    LONG            reduce using rule 45 (struct_members -> struct_member .)
    INT             reduce using rule 45 (struct_members -> struct_member .)
    CHAR            reduce using rule 45 (struct_members -> struct_member .)
    FLOAT           reduce using rule 45 (struct_members -> struct_member .)
    DOUBLE          reduce using rule 45 (struct_members -> struct_member .)
    VOID            reduce using rule 45 (struct_members -> struct_member .)


state 109

    (47) struct_member -> type_specifier . ID SEMICOLON

    ID              shift and go to state 144


state 110

    (125) function_call -> ID LPAREN RPAREN .

    PLUS            reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    NE              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    COMPARATOR      reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    BITWISE_AND     reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    BITWISE_OR      reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    BITWISE_XOR     reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    DOT             reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    INCREMENT       reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    DECREMENT       reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    HASH            reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    VOLATILE        reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    AUTO            reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    REGISTER        reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    STATIC          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    EXTERN          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    SIGNED          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    UNSIGNED        reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    SHORT           reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    LONG            reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    INT             reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    CHAR            reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    DOUBLE          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    VOID            reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    TYPEDEF         reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    STRUCT          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 125 (function_call -> ID LPAREN RPAREN .)
    COLON           reduce using rule 125 (function_call -> ID LPAREN RPAREN .)


state 111

    (126) function_call -> ID LPAREN argument_list . RPAREN
    (128) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 145
    COMMA           shift and go to state 146


state 112

    (127) argument_list -> expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RPAREN          reduce using rule 127 (argument_list -> expression .)
    COMMA           reduce using rule 127 (argument_list -> expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 113

    (79) expression -> expression PLUS term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 79 (expression -> expression PLUS term .)
    MINUS           reduce using rule 79 (expression -> expression PLUS term .)
    LT              reduce using rule 79 (expression -> expression PLUS term .)
    LE              reduce using rule 79 (expression -> expression PLUS term .)
    GT              reduce using rule 79 (expression -> expression PLUS term .)
    GE              reduce using rule 79 (expression -> expression PLUS term .)
    NE              reduce using rule 79 (expression -> expression PLUS term .)
    COMPARATOR      reduce using rule 79 (expression -> expression PLUS term .)
    BITWISE_AND     reduce using rule 79 (expression -> expression PLUS term .)
    BITWISE_OR      reduce using rule 79 (expression -> expression PLUS term .)
    BITWISE_XOR     reduce using rule 79 (expression -> expression PLUS term .)
    AND             reduce using rule 79 (expression -> expression PLUS term .)
    OR              reduce using rule 79 (expression -> expression PLUS term .)
    DOT             reduce using rule 79 (expression -> expression PLUS term .)
    INCREMENT       reduce using rule 79 (expression -> expression PLUS term .)
    DECREMENT       reduce using rule 79 (expression -> expression PLUS term .)
    HASH            reduce using rule 79 (expression -> expression PLUS term .)
    ID              reduce using rule 79 (expression -> expression PLUS term .)
    CONST           reduce using rule 79 (expression -> expression PLUS term .)
    VOLATILE        reduce using rule 79 (expression -> expression PLUS term .)
    AUTO            reduce using rule 79 (expression -> expression PLUS term .)
    REGISTER        reduce using rule 79 (expression -> expression PLUS term .)
    STATIC          reduce using rule 79 (expression -> expression PLUS term .)
    EXTERN          reduce using rule 79 (expression -> expression PLUS term .)
    SIGNED          reduce using rule 79 (expression -> expression PLUS term .)
    UNSIGNED        reduce using rule 79 (expression -> expression PLUS term .)
    SHORT           reduce using rule 79 (expression -> expression PLUS term .)
    LONG            reduce using rule 79 (expression -> expression PLUS term .)
    INT             reduce using rule 79 (expression -> expression PLUS term .)
    CHAR            reduce using rule 79 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 79 (expression -> expression PLUS term .)
    DOUBLE          reduce using rule 79 (expression -> expression PLUS term .)
    VOID            reduce using rule 79 (expression -> expression PLUS term .)
    TYPEDEF         reduce using rule 79 (expression -> expression PLUS term .)
    STRUCT          reduce using rule 79 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 79 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 79 (expression -> expression PLUS term .)
    COMMA           reduce using rule 79 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 79 (expression -> expression PLUS term .)
    COLON           reduce using rule 79 (expression -> expression PLUS term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 114

    (105) factor -> ID .
    (106) factor -> ID . INCREMENT
    (107) factor -> ID . DECREMENT

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    TIMES           reduce using rule 105 (factor -> ID .)
    DIVIDE          reduce using rule 105 (factor -> ID .)
    MOD             reduce using rule 105 (factor -> ID .)
    LSHIFT          reduce using rule 105 (factor -> ID .)
    RSHIFT          reduce using rule 105 (factor -> ID .)
    PLUS            reduce using rule 105 (factor -> ID .)
    MINUS           reduce using rule 105 (factor -> ID .)
    LT              reduce using rule 105 (factor -> ID .)
    LE              reduce using rule 105 (factor -> ID .)
    GT              reduce using rule 105 (factor -> ID .)
    GE              reduce using rule 105 (factor -> ID .)
    NE              reduce using rule 105 (factor -> ID .)
    COMPARATOR      reduce using rule 105 (factor -> ID .)
    BITWISE_AND     reduce using rule 105 (factor -> ID .)
    BITWISE_OR      reduce using rule 105 (factor -> ID .)
    BITWISE_XOR     reduce using rule 105 (factor -> ID .)
    AND             reduce using rule 105 (factor -> ID .)
    OR              reduce using rule 105 (factor -> ID .)
    DOT             reduce using rule 105 (factor -> ID .)
    HASH            reduce using rule 105 (factor -> ID .)
    ID              reduce using rule 105 (factor -> ID .)
    CONST           reduce using rule 105 (factor -> ID .)
    VOLATILE        reduce using rule 105 (factor -> ID .)
    AUTO            reduce using rule 105 (factor -> ID .)
    REGISTER        reduce using rule 105 (factor -> ID .)
    STATIC          reduce using rule 105 (factor -> ID .)
    EXTERN          reduce using rule 105 (factor -> ID .)
    SIGNED          reduce using rule 105 (factor -> ID .)
    UNSIGNED        reduce using rule 105 (factor -> ID .)
    SHORT           reduce using rule 105 (factor -> ID .)
    LONG            reduce using rule 105 (factor -> ID .)
    INT             reduce using rule 105 (factor -> ID .)
    CHAR            reduce using rule 105 (factor -> ID .)
    FLOAT           reduce using rule 105 (factor -> ID .)
    DOUBLE          reduce using rule 105 (factor -> ID .)
    VOID            reduce using rule 105 (factor -> ID .)
    TYPEDEF         reduce using rule 105 (factor -> ID .)
    STRUCT          reduce using rule 105 (factor -> ID .)
    RPAREN          reduce using rule 105 (factor -> ID .)
    SEMICOLON       reduce using rule 105 (factor -> ID .)
    COMMA           reduce using rule 105 (factor -> ID .)
    RBRACE          reduce using rule 105 (factor -> ID .)
    COLON           reduce using rule 105 (factor -> ID .)
    IF              reduce using rule 105 (factor -> ID .)
    WHILE           reduce using rule 105 (factor -> ID .)
    RETURN          reduce using rule 105 (factor -> ID .)
    LBRACE          reduce using rule 105 (factor -> ID .)
    BREAK           reduce using rule 105 (factor -> ID .)
    CONTINUE        reduce using rule 105 (factor -> ID .)
    SWITCH          reduce using rule 105 (factor -> ID .)
    DO              reduce using rule 105 (factor -> ID .)
    FOR             reduce using rule 105 (factor -> ID .)
    INTEGER         reduce using rule 105 (factor -> ID .)
    FLOAT_N         reduce using rule 105 (factor -> ID .)
    STRING          reduce using rule 105 (factor -> ID .)
    LPAREN          reduce using rule 105 (factor -> ID .)
    INCREMENT       shift and go to state 74
    DECREMENT       shift and go to state 75

  ! INCREMENT       [ reduce using rule 105 (factor -> ID .) ]
  ! DECREMENT       [ reduce using rule 105 (factor -> ID .) ]


state 115

    (80) expression -> expression MINUS term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 80 (expression -> expression MINUS term .)
    MINUS           reduce using rule 80 (expression -> expression MINUS term .)
    LT              reduce using rule 80 (expression -> expression MINUS term .)
    LE              reduce using rule 80 (expression -> expression MINUS term .)
    GT              reduce using rule 80 (expression -> expression MINUS term .)
    GE              reduce using rule 80 (expression -> expression MINUS term .)
    NE              reduce using rule 80 (expression -> expression MINUS term .)
    COMPARATOR      reduce using rule 80 (expression -> expression MINUS term .)
    BITWISE_AND     reduce using rule 80 (expression -> expression MINUS term .)
    BITWISE_OR      reduce using rule 80 (expression -> expression MINUS term .)
    BITWISE_XOR     reduce using rule 80 (expression -> expression MINUS term .)
    AND             reduce using rule 80 (expression -> expression MINUS term .)
    OR              reduce using rule 80 (expression -> expression MINUS term .)
    DOT             reduce using rule 80 (expression -> expression MINUS term .)
    INCREMENT       reduce using rule 80 (expression -> expression MINUS term .)
    DECREMENT       reduce using rule 80 (expression -> expression MINUS term .)
    HASH            reduce using rule 80 (expression -> expression MINUS term .)
    ID              reduce using rule 80 (expression -> expression MINUS term .)
    CONST           reduce using rule 80 (expression -> expression MINUS term .)
    VOLATILE        reduce using rule 80 (expression -> expression MINUS term .)
    AUTO            reduce using rule 80 (expression -> expression MINUS term .)
    REGISTER        reduce using rule 80 (expression -> expression MINUS term .)
    STATIC          reduce using rule 80 (expression -> expression MINUS term .)
    EXTERN          reduce using rule 80 (expression -> expression MINUS term .)
    SIGNED          reduce using rule 80 (expression -> expression MINUS term .)
    UNSIGNED        reduce using rule 80 (expression -> expression MINUS term .)
    SHORT           reduce using rule 80 (expression -> expression MINUS term .)
    LONG            reduce using rule 80 (expression -> expression MINUS term .)
    INT             reduce using rule 80 (expression -> expression MINUS term .)
    CHAR            reduce using rule 80 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 80 (expression -> expression MINUS term .)
    DOUBLE          reduce using rule 80 (expression -> expression MINUS term .)
    VOID            reduce using rule 80 (expression -> expression MINUS term .)
    TYPEDEF         reduce using rule 80 (expression -> expression MINUS term .)
    STRUCT          reduce using rule 80 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 80 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 80 (expression -> expression MINUS term .)
    COMMA           reduce using rule 80 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 80 (expression -> expression MINUS term .)
    COLON           reduce using rule 80 (expression -> expression MINUS term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 116

    (81) expression -> expression LT term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 81 (expression -> expression LT term .)
    MINUS           reduce using rule 81 (expression -> expression LT term .)
    LT              reduce using rule 81 (expression -> expression LT term .)
    LE              reduce using rule 81 (expression -> expression LT term .)
    GT              reduce using rule 81 (expression -> expression LT term .)
    GE              reduce using rule 81 (expression -> expression LT term .)
    NE              reduce using rule 81 (expression -> expression LT term .)
    COMPARATOR      reduce using rule 81 (expression -> expression LT term .)
    BITWISE_AND     reduce using rule 81 (expression -> expression LT term .)
    BITWISE_OR      reduce using rule 81 (expression -> expression LT term .)
    BITWISE_XOR     reduce using rule 81 (expression -> expression LT term .)
    AND             reduce using rule 81 (expression -> expression LT term .)
    OR              reduce using rule 81 (expression -> expression LT term .)
    DOT             reduce using rule 81 (expression -> expression LT term .)
    INCREMENT       reduce using rule 81 (expression -> expression LT term .)
    DECREMENT       reduce using rule 81 (expression -> expression LT term .)
    HASH            reduce using rule 81 (expression -> expression LT term .)
    ID              reduce using rule 81 (expression -> expression LT term .)
    CONST           reduce using rule 81 (expression -> expression LT term .)
    VOLATILE        reduce using rule 81 (expression -> expression LT term .)
    AUTO            reduce using rule 81 (expression -> expression LT term .)
    REGISTER        reduce using rule 81 (expression -> expression LT term .)
    STATIC          reduce using rule 81 (expression -> expression LT term .)
    EXTERN          reduce using rule 81 (expression -> expression LT term .)
    SIGNED          reduce using rule 81 (expression -> expression LT term .)
    UNSIGNED        reduce using rule 81 (expression -> expression LT term .)
    SHORT           reduce using rule 81 (expression -> expression LT term .)
    LONG            reduce using rule 81 (expression -> expression LT term .)
    INT             reduce using rule 81 (expression -> expression LT term .)
    CHAR            reduce using rule 81 (expression -> expression LT term .)
    FLOAT           reduce using rule 81 (expression -> expression LT term .)
    DOUBLE          reduce using rule 81 (expression -> expression LT term .)
    VOID            reduce using rule 81 (expression -> expression LT term .)
    TYPEDEF         reduce using rule 81 (expression -> expression LT term .)
    STRUCT          reduce using rule 81 (expression -> expression LT term .)
    RPAREN          reduce using rule 81 (expression -> expression LT term .)
    SEMICOLON       reduce using rule 81 (expression -> expression LT term .)
    COMMA           reduce using rule 81 (expression -> expression LT term .)
    RBRACE          reduce using rule 81 (expression -> expression LT term .)
    COLON           reduce using rule 81 (expression -> expression LT term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 117

    (82) expression -> expression LE term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 82 (expression -> expression LE term .)
    MINUS           reduce using rule 82 (expression -> expression LE term .)
    LT              reduce using rule 82 (expression -> expression LE term .)
    LE              reduce using rule 82 (expression -> expression LE term .)
    GT              reduce using rule 82 (expression -> expression LE term .)
    GE              reduce using rule 82 (expression -> expression LE term .)
    NE              reduce using rule 82 (expression -> expression LE term .)
    COMPARATOR      reduce using rule 82 (expression -> expression LE term .)
    BITWISE_AND     reduce using rule 82 (expression -> expression LE term .)
    BITWISE_OR      reduce using rule 82 (expression -> expression LE term .)
    BITWISE_XOR     reduce using rule 82 (expression -> expression LE term .)
    AND             reduce using rule 82 (expression -> expression LE term .)
    OR              reduce using rule 82 (expression -> expression LE term .)
    DOT             reduce using rule 82 (expression -> expression LE term .)
    INCREMENT       reduce using rule 82 (expression -> expression LE term .)
    DECREMENT       reduce using rule 82 (expression -> expression LE term .)
    HASH            reduce using rule 82 (expression -> expression LE term .)
    ID              reduce using rule 82 (expression -> expression LE term .)
    CONST           reduce using rule 82 (expression -> expression LE term .)
    VOLATILE        reduce using rule 82 (expression -> expression LE term .)
    AUTO            reduce using rule 82 (expression -> expression LE term .)
    REGISTER        reduce using rule 82 (expression -> expression LE term .)
    STATIC          reduce using rule 82 (expression -> expression LE term .)
    EXTERN          reduce using rule 82 (expression -> expression LE term .)
    SIGNED          reduce using rule 82 (expression -> expression LE term .)
    UNSIGNED        reduce using rule 82 (expression -> expression LE term .)
    SHORT           reduce using rule 82 (expression -> expression LE term .)
    LONG            reduce using rule 82 (expression -> expression LE term .)
    INT             reduce using rule 82 (expression -> expression LE term .)
    CHAR            reduce using rule 82 (expression -> expression LE term .)
    FLOAT           reduce using rule 82 (expression -> expression LE term .)
    DOUBLE          reduce using rule 82 (expression -> expression LE term .)
    VOID            reduce using rule 82 (expression -> expression LE term .)
    TYPEDEF         reduce using rule 82 (expression -> expression LE term .)
    STRUCT          reduce using rule 82 (expression -> expression LE term .)
    RPAREN          reduce using rule 82 (expression -> expression LE term .)
    SEMICOLON       reduce using rule 82 (expression -> expression LE term .)
    COMMA           reduce using rule 82 (expression -> expression LE term .)
    RBRACE          reduce using rule 82 (expression -> expression LE term .)
    COLON           reduce using rule 82 (expression -> expression LE term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 118

    (83) expression -> expression GT term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 83 (expression -> expression GT term .)
    MINUS           reduce using rule 83 (expression -> expression GT term .)
    LT              reduce using rule 83 (expression -> expression GT term .)
    LE              reduce using rule 83 (expression -> expression GT term .)
    GT              reduce using rule 83 (expression -> expression GT term .)
    GE              reduce using rule 83 (expression -> expression GT term .)
    NE              reduce using rule 83 (expression -> expression GT term .)
    COMPARATOR      reduce using rule 83 (expression -> expression GT term .)
    BITWISE_AND     reduce using rule 83 (expression -> expression GT term .)
    BITWISE_OR      reduce using rule 83 (expression -> expression GT term .)
    BITWISE_XOR     reduce using rule 83 (expression -> expression GT term .)
    AND             reduce using rule 83 (expression -> expression GT term .)
    OR              reduce using rule 83 (expression -> expression GT term .)
    DOT             reduce using rule 83 (expression -> expression GT term .)
    INCREMENT       reduce using rule 83 (expression -> expression GT term .)
    DECREMENT       reduce using rule 83 (expression -> expression GT term .)
    HASH            reduce using rule 83 (expression -> expression GT term .)
    ID              reduce using rule 83 (expression -> expression GT term .)
    CONST           reduce using rule 83 (expression -> expression GT term .)
    VOLATILE        reduce using rule 83 (expression -> expression GT term .)
    AUTO            reduce using rule 83 (expression -> expression GT term .)
    REGISTER        reduce using rule 83 (expression -> expression GT term .)
    STATIC          reduce using rule 83 (expression -> expression GT term .)
    EXTERN          reduce using rule 83 (expression -> expression GT term .)
    SIGNED          reduce using rule 83 (expression -> expression GT term .)
    UNSIGNED        reduce using rule 83 (expression -> expression GT term .)
    SHORT           reduce using rule 83 (expression -> expression GT term .)
    LONG            reduce using rule 83 (expression -> expression GT term .)
    INT             reduce using rule 83 (expression -> expression GT term .)
    CHAR            reduce using rule 83 (expression -> expression GT term .)
    FLOAT           reduce using rule 83 (expression -> expression GT term .)
    DOUBLE          reduce using rule 83 (expression -> expression GT term .)
    VOID            reduce using rule 83 (expression -> expression GT term .)
    TYPEDEF         reduce using rule 83 (expression -> expression GT term .)
    STRUCT          reduce using rule 83 (expression -> expression GT term .)
    RPAREN          reduce using rule 83 (expression -> expression GT term .)
    SEMICOLON       reduce using rule 83 (expression -> expression GT term .)
    COMMA           reduce using rule 83 (expression -> expression GT term .)
    RBRACE          reduce using rule 83 (expression -> expression GT term .)
    COLON           reduce using rule 83 (expression -> expression GT term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 119

    (84) expression -> expression GE term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 84 (expression -> expression GE term .)
    MINUS           reduce using rule 84 (expression -> expression GE term .)
    LT              reduce using rule 84 (expression -> expression GE term .)
    LE              reduce using rule 84 (expression -> expression GE term .)
    GT              reduce using rule 84 (expression -> expression GE term .)
    GE              reduce using rule 84 (expression -> expression GE term .)
    NE              reduce using rule 84 (expression -> expression GE term .)
    COMPARATOR      reduce using rule 84 (expression -> expression GE term .)
    BITWISE_AND     reduce using rule 84 (expression -> expression GE term .)
    BITWISE_OR      reduce using rule 84 (expression -> expression GE term .)
    BITWISE_XOR     reduce using rule 84 (expression -> expression GE term .)
    AND             reduce using rule 84 (expression -> expression GE term .)
    OR              reduce using rule 84 (expression -> expression GE term .)
    DOT             reduce using rule 84 (expression -> expression GE term .)
    INCREMENT       reduce using rule 84 (expression -> expression GE term .)
    DECREMENT       reduce using rule 84 (expression -> expression GE term .)
    HASH            reduce using rule 84 (expression -> expression GE term .)
    ID              reduce using rule 84 (expression -> expression GE term .)
    CONST           reduce using rule 84 (expression -> expression GE term .)
    VOLATILE        reduce using rule 84 (expression -> expression GE term .)
    AUTO            reduce using rule 84 (expression -> expression GE term .)
    REGISTER        reduce using rule 84 (expression -> expression GE term .)
    STATIC          reduce using rule 84 (expression -> expression GE term .)
    EXTERN          reduce using rule 84 (expression -> expression GE term .)
    SIGNED          reduce using rule 84 (expression -> expression GE term .)
    UNSIGNED        reduce using rule 84 (expression -> expression GE term .)
    SHORT           reduce using rule 84 (expression -> expression GE term .)
    LONG            reduce using rule 84 (expression -> expression GE term .)
    INT             reduce using rule 84 (expression -> expression GE term .)
    CHAR            reduce using rule 84 (expression -> expression GE term .)
    FLOAT           reduce using rule 84 (expression -> expression GE term .)
    DOUBLE          reduce using rule 84 (expression -> expression GE term .)
    VOID            reduce using rule 84 (expression -> expression GE term .)
    TYPEDEF         reduce using rule 84 (expression -> expression GE term .)
    STRUCT          reduce using rule 84 (expression -> expression GE term .)
    RPAREN          reduce using rule 84 (expression -> expression GE term .)
    SEMICOLON       reduce using rule 84 (expression -> expression GE term .)
    COMMA           reduce using rule 84 (expression -> expression GE term .)
    RBRACE          reduce using rule 84 (expression -> expression GE term .)
    COLON           reduce using rule 84 (expression -> expression GE term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 120

    (85) expression -> expression NE term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 85 (expression -> expression NE term .)
    MINUS           reduce using rule 85 (expression -> expression NE term .)
    LT              reduce using rule 85 (expression -> expression NE term .)
    LE              reduce using rule 85 (expression -> expression NE term .)
    GT              reduce using rule 85 (expression -> expression NE term .)
    GE              reduce using rule 85 (expression -> expression NE term .)
    NE              reduce using rule 85 (expression -> expression NE term .)
    COMPARATOR      reduce using rule 85 (expression -> expression NE term .)
    BITWISE_AND     reduce using rule 85 (expression -> expression NE term .)
    BITWISE_OR      reduce using rule 85 (expression -> expression NE term .)
    BITWISE_XOR     reduce using rule 85 (expression -> expression NE term .)
    AND             reduce using rule 85 (expression -> expression NE term .)
    OR              reduce using rule 85 (expression -> expression NE term .)
    DOT             reduce using rule 85 (expression -> expression NE term .)
    INCREMENT       reduce using rule 85 (expression -> expression NE term .)
    DECREMENT       reduce using rule 85 (expression -> expression NE term .)
    HASH            reduce using rule 85 (expression -> expression NE term .)
    ID              reduce using rule 85 (expression -> expression NE term .)
    CONST           reduce using rule 85 (expression -> expression NE term .)
    VOLATILE        reduce using rule 85 (expression -> expression NE term .)
    AUTO            reduce using rule 85 (expression -> expression NE term .)
    REGISTER        reduce using rule 85 (expression -> expression NE term .)
    STATIC          reduce using rule 85 (expression -> expression NE term .)
    EXTERN          reduce using rule 85 (expression -> expression NE term .)
    SIGNED          reduce using rule 85 (expression -> expression NE term .)
    UNSIGNED        reduce using rule 85 (expression -> expression NE term .)
    SHORT           reduce using rule 85 (expression -> expression NE term .)
    LONG            reduce using rule 85 (expression -> expression NE term .)
    INT             reduce using rule 85 (expression -> expression NE term .)
    CHAR            reduce using rule 85 (expression -> expression NE term .)
    FLOAT           reduce using rule 85 (expression -> expression NE term .)
    DOUBLE          reduce using rule 85 (expression -> expression NE term .)
    VOID            reduce using rule 85 (expression -> expression NE term .)
    TYPEDEF         reduce using rule 85 (expression -> expression NE term .)
    STRUCT          reduce using rule 85 (expression -> expression NE term .)
    RPAREN          reduce using rule 85 (expression -> expression NE term .)
    SEMICOLON       reduce using rule 85 (expression -> expression NE term .)
    COMMA           reduce using rule 85 (expression -> expression NE term .)
    RBRACE          reduce using rule 85 (expression -> expression NE term .)
    COLON           reduce using rule 85 (expression -> expression NE term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 121

    (86) expression -> expression COMPARATOR term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 86 (expression -> expression COMPARATOR term .)
    MINUS           reduce using rule 86 (expression -> expression COMPARATOR term .)
    LT              reduce using rule 86 (expression -> expression COMPARATOR term .)
    LE              reduce using rule 86 (expression -> expression COMPARATOR term .)
    GT              reduce using rule 86 (expression -> expression COMPARATOR term .)
    GE              reduce using rule 86 (expression -> expression COMPARATOR term .)
    NE              reduce using rule 86 (expression -> expression COMPARATOR term .)
    COMPARATOR      reduce using rule 86 (expression -> expression COMPARATOR term .)
    BITWISE_AND     reduce using rule 86 (expression -> expression COMPARATOR term .)
    BITWISE_OR      reduce using rule 86 (expression -> expression COMPARATOR term .)
    BITWISE_XOR     reduce using rule 86 (expression -> expression COMPARATOR term .)
    AND             reduce using rule 86 (expression -> expression COMPARATOR term .)
    OR              reduce using rule 86 (expression -> expression COMPARATOR term .)
    DOT             reduce using rule 86 (expression -> expression COMPARATOR term .)
    INCREMENT       reduce using rule 86 (expression -> expression COMPARATOR term .)
    DECREMENT       reduce using rule 86 (expression -> expression COMPARATOR term .)
    HASH            reduce using rule 86 (expression -> expression COMPARATOR term .)
    ID              reduce using rule 86 (expression -> expression COMPARATOR term .)
    CONST           reduce using rule 86 (expression -> expression COMPARATOR term .)
    VOLATILE        reduce using rule 86 (expression -> expression COMPARATOR term .)
    AUTO            reduce using rule 86 (expression -> expression COMPARATOR term .)
    REGISTER        reduce using rule 86 (expression -> expression COMPARATOR term .)
    STATIC          reduce using rule 86 (expression -> expression COMPARATOR term .)
    EXTERN          reduce using rule 86 (expression -> expression COMPARATOR term .)
    SIGNED          reduce using rule 86 (expression -> expression COMPARATOR term .)
    UNSIGNED        reduce using rule 86 (expression -> expression COMPARATOR term .)
    SHORT           reduce using rule 86 (expression -> expression COMPARATOR term .)
    LONG            reduce using rule 86 (expression -> expression COMPARATOR term .)
    INT             reduce using rule 86 (expression -> expression COMPARATOR term .)
    CHAR            reduce using rule 86 (expression -> expression COMPARATOR term .)
    FLOAT           reduce using rule 86 (expression -> expression COMPARATOR term .)
    DOUBLE          reduce using rule 86 (expression -> expression COMPARATOR term .)
    VOID            reduce using rule 86 (expression -> expression COMPARATOR term .)
    TYPEDEF         reduce using rule 86 (expression -> expression COMPARATOR term .)
    STRUCT          reduce using rule 86 (expression -> expression COMPARATOR term .)
    RPAREN          reduce using rule 86 (expression -> expression COMPARATOR term .)
    SEMICOLON       reduce using rule 86 (expression -> expression COMPARATOR term .)
    COMMA           reduce using rule 86 (expression -> expression COMPARATOR term .)
    RBRACE          reduce using rule 86 (expression -> expression COMPARATOR term .)
    COLON           reduce using rule 86 (expression -> expression COMPARATOR term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 122

    (87) expression -> expression BITWISE_AND term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 87 (expression -> expression BITWISE_AND term .)
    MINUS           reduce using rule 87 (expression -> expression BITWISE_AND term .)
    LT              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    LE              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    GT              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    GE              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    NE              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    COMPARATOR      reduce using rule 87 (expression -> expression BITWISE_AND term .)
    BITWISE_AND     reduce using rule 87 (expression -> expression BITWISE_AND term .)
    BITWISE_OR      reduce using rule 87 (expression -> expression BITWISE_AND term .)
    BITWISE_XOR     reduce using rule 87 (expression -> expression BITWISE_AND term .)
    AND             reduce using rule 87 (expression -> expression BITWISE_AND term .)
    OR              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    DOT             reduce using rule 87 (expression -> expression BITWISE_AND term .)
    INCREMENT       reduce using rule 87 (expression -> expression BITWISE_AND term .)
    DECREMENT       reduce using rule 87 (expression -> expression BITWISE_AND term .)
    HASH            reduce using rule 87 (expression -> expression BITWISE_AND term .)
    ID              reduce using rule 87 (expression -> expression BITWISE_AND term .)
    CONST           reduce using rule 87 (expression -> expression BITWISE_AND term .)
    VOLATILE        reduce using rule 87 (expression -> expression BITWISE_AND term .)
    AUTO            reduce using rule 87 (expression -> expression BITWISE_AND term .)
    REGISTER        reduce using rule 87 (expression -> expression BITWISE_AND term .)
    STATIC          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    EXTERN          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    SIGNED          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    UNSIGNED        reduce using rule 87 (expression -> expression BITWISE_AND term .)
    SHORT           reduce using rule 87 (expression -> expression BITWISE_AND term .)
    LONG            reduce using rule 87 (expression -> expression BITWISE_AND term .)
    INT             reduce using rule 87 (expression -> expression BITWISE_AND term .)
    CHAR            reduce using rule 87 (expression -> expression BITWISE_AND term .)
    FLOAT           reduce using rule 87 (expression -> expression BITWISE_AND term .)
    DOUBLE          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    VOID            reduce using rule 87 (expression -> expression BITWISE_AND term .)
    TYPEDEF         reduce using rule 87 (expression -> expression BITWISE_AND term .)
    STRUCT          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    RPAREN          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    SEMICOLON       reduce using rule 87 (expression -> expression BITWISE_AND term .)
    COMMA           reduce using rule 87 (expression -> expression BITWISE_AND term .)
    RBRACE          reduce using rule 87 (expression -> expression BITWISE_AND term .)
    COLON           reduce using rule 87 (expression -> expression BITWISE_AND term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 123

    (88) expression -> expression BITWISE_OR term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 88 (expression -> expression BITWISE_OR term .)
    MINUS           reduce using rule 88 (expression -> expression BITWISE_OR term .)
    LT              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    LE              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    GT              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    GE              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    NE              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    COMPARATOR      reduce using rule 88 (expression -> expression BITWISE_OR term .)
    BITWISE_AND     reduce using rule 88 (expression -> expression BITWISE_OR term .)
    BITWISE_OR      reduce using rule 88 (expression -> expression BITWISE_OR term .)
    BITWISE_XOR     reduce using rule 88 (expression -> expression BITWISE_OR term .)
    AND             reduce using rule 88 (expression -> expression BITWISE_OR term .)
    OR              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    DOT             reduce using rule 88 (expression -> expression BITWISE_OR term .)
    INCREMENT       reduce using rule 88 (expression -> expression BITWISE_OR term .)
    DECREMENT       reduce using rule 88 (expression -> expression BITWISE_OR term .)
    HASH            reduce using rule 88 (expression -> expression BITWISE_OR term .)
    ID              reduce using rule 88 (expression -> expression BITWISE_OR term .)
    CONST           reduce using rule 88 (expression -> expression BITWISE_OR term .)
    VOLATILE        reduce using rule 88 (expression -> expression BITWISE_OR term .)
    AUTO            reduce using rule 88 (expression -> expression BITWISE_OR term .)
    REGISTER        reduce using rule 88 (expression -> expression BITWISE_OR term .)
    STATIC          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    EXTERN          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    SIGNED          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    UNSIGNED        reduce using rule 88 (expression -> expression BITWISE_OR term .)
    SHORT           reduce using rule 88 (expression -> expression BITWISE_OR term .)
    LONG            reduce using rule 88 (expression -> expression BITWISE_OR term .)
    INT             reduce using rule 88 (expression -> expression BITWISE_OR term .)
    CHAR            reduce using rule 88 (expression -> expression BITWISE_OR term .)
    FLOAT           reduce using rule 88 (expression -> expression BITWISE_OR term .)
    DOUBLE          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    VOID            reduce using rule 88 (expression -> expression BITWISE_OR term .)
    TYPEDEF         reduce using rule 88 (expression -> expression BITWISE_OR term .)
    STRUCT          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    RPAREN          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    SEMICOLON       reduce using rule 88 (expression -> expression BITWISE_OR term .)
    COMMA           reduce using rule 88 (expression -> expression BITWISE_OR term .)
    RBRACE          reduce using rule 88 (expression -> expression BITWISE_OR term .)
    COLON           reduce using rule 88 (expression -> expression BITWISE_OR term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 124

    (89) expression -> expression BITWISE_XOR term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    MINUS           reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    LT              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    LE              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    GT              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    GE              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    NE              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    COMPARATOR      reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    BITWISE_AND     reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    BITWISE_OR      reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    BITWISE_XOR     reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    AND             reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    OR              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    DOT             reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    INCREMENT       reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    DECREMENT       reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    HASH            reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    ID              reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    CONST           reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    VOLATILE        reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    AUTO            reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    REGISTER        reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    STATIC          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    EXTERN          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    SIGNED          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    UNSIGNED        reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    SHORT           reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    LONG            reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    INT             reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    CHAR            reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    FLOAT           reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    DOUBLE          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    VOID            reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    TYPEDEF         reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    STRUCT          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    RPAREN          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    SEMICOLON       reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    COMMA           reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    RBRACE          reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    COLON           reduce using rule 89 (expression -> expression BITWISE_XOR term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 125

    (90) expression -> expression AND term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 90 (expression -> expression AND term .)
    MINUS           reduce using rule 90 (expression -> expression AND term .)
    LT              reduce using rule 90 (expression -> expression AND term .)
    LE              reduce using rule 90 (expression -> expression AND term .)
    GT              reduce using rule 90 (expression -> expression AND term .)
    GE              reduce using rule 90 (expression -> expression AND term .)
    NE              reduce using rule 90 (expression -> expression AND term .)
    COMPARATOR      reduce using rule 90 (expression -> expression AND term .)
    BITWISE_AND     reduce using rule 90 (expression -> expression AND term .)
    BITWISE_OR      reduce using rule 90 (expression -> expression AND term .)
    BITWISE_XOR     reduce using rule 90 (expression -> expression AND term .)
    AND             reduce using rule 90 (expression -> expression AND term .)
    OR              reduce using rule 90 (expression -> expression AND term .)
    DOT             reduce using rule 90 (expression -> expression AND term .)
    INCREMENT       reduce using rule 90 (expression -> expression AND term .)
    DECREMENT       reduce using rule 90 (expression -> expression AND term .)
    HASH            reduce using rule 90 (expression -> expression AND term .)
    ID              reduce using rule 90 (expression -> expression AND term .)
    CONST           reduce using rule 90 (expression -> expression AND term .)
    VOLATILE        reduce using rule 90 (expression -> expression AND term .)
    AUTO            reduce using rule 90 (expression -> expression AND term .)
    REGISTER        reduce using rule 90 (expression -> expression AND term .)
    STATIC          reduce using rule 90 (expression -> expression AND term .)
    EXTERN          reduce using rule 90 (expression -> expression AND term .)
    SIGNED          reduce using rule 90 (expression -> expression AND term .)
    UNSIGNED        reduce using rule 90 (expression -> expression AND term .)
    SHORT           reduce using rule 90 (expression -> expression AND term .)
    LONG            reduce using rule 90 (expression -> expression AND term .)
    INT             reduce using rule 90 (expression -> expression AND term .)
    CHAR            reduce using rule 90 (expression -> expression AND term .)
    FLOAT           reduce using rule 90 (expression -> expression AND term .)
    DOUBLE          reduce using rule 90 (expression -> expression AND term .)
    VOID            reduce using rule 90 (expression -> expression AND term .)
    TYPEDEF         reduce using rule 90 (expression -> expression AND term .)
    STRUCT          reduce using rule 90 (expression -> expression AND term .)
    RPAREN          reduce using rule 90 (expression -> expression AND term .)
    SEMICOLON       reduce using rule 90 (expression -> expression AND term .)
    COMMA           reduce using rule 90 (expression -> expression AND term .)
    RBRACE          reduce using rule 90 (expression -> expression AND term .)
    COLON           reduce using rule 90 (expression -> expression AND term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 126

    (91) expression -> expression OR term .
    (97) term -> term . TIMES factor
    (98) term -> term . DIVIDE factor
    (99) term -> term . MOD factor
    (100) term -> term . LSHIFT factor
    (101) term -> term . RSHIFT factor

    PLUS            reduce using rule 91 (expression -> expression OR term .)
    MINUS           reduce using rule 91 (expression -> expression OR term .)
    LT              reduce using rule 91 (expression -> expression OR term .)
    LE              reduce using rule 91 (expression -> expression OR term .)
    GT              reduce using rule 91 (expression -> expression OR term .)
    GE              reduce using rule 91 (expression -> expression OR term .)
    NE              reduce using rule 91 (expression -> expression OR term .)
    COMPARATOR      reduce using rule 91 (expression -> expression OR term .)
    BITWISE_AND     reduce using rule 91 (expression -> expression OR term .)
    BITWISE_OR      reduce using rule 91 (expression -> expression OR term .)
    BITWISE_XOR     reduce using rule 91 (expression -> expression OR term .)
    AND             reduce using rule 91 (expression -> expression OR term .)
    OR              reduce using rule 91 (expression -> expression OR term .)
    DOT             reduce using rule 91 (expression -> expression OR term .)
    INCREMENT       reduce using rule 91 (expression -> expression OR term .)
    DECREMENT       reduce using rule 91 (expression -> expression OR term .)
    HASH            reduce using rule 91 (expression -> expression OR term .)
    ID              reduce using rule 91 (expression -> expression OR term .)
    CONST           reduce using rule 91 (expression -> expression OR term .)
    VOLATILE        reduce using rule 91 (expression -> expression OR term .)
    AUTO            reduce using rule 91 (expression -> expression OR term .)
    REGISTER        reduce using rule 91 (expression -> expression OR term .)
    STATIC          reduce using rule 91 (expression -> expression OR term .)
    EXTERN          reduce using rule 91 (expression -> expression OR term .)
    SIGNED          reduce using rule 91 (expression -> expression OR term .)
    UNSIGNED        reduce using rule 91 (expression -> expression OR term .)
    SHORT           reduce using rule 91 (expression -> expression OR term .)
    LONG            reduce using rule 91 (expression -> expression OR term .)
    INT             reduce using rule 91 (expression -> expression OR term .)
    CHAR            reduce using rule 91 (expression -> expression OR term .)
    FLOAT           reduce using rule 91 (expression -> expression OR term .)
    DOUBLE          reduce using rule 91 (expression -> expression OR term .)
    VOID            reduce using rule 91 (expression -> expression OR term .)
    TYPEDEF         reduce using rule 91 (expression -> expression OR term .)
    STRUCT          reduce using rule 91 (expression -> expression OR term .)
    RPAREN          reduce using rule 91 (expression -> expression OR term .)
    SEMICOLON       reduce using rule 91 (expression -> expression OR term .)
    COMMA           reduce using rule 91 (expression -> expression OR term .)
    RBRACE          reduce using rule 91 (expression -> expression OR term .)
    COLON           reduce using rule 91 (expression -> expression OR term .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    MOD             shift and go to state 94
    LSHIFT          shift and go to state 95
    RSHIFT          shift and go to state 96


state 127

    (92) expression -> expression DOT ID .

    PLUS            reduce using rule 92 (expression -> expression DOT ID .)
    MINUS           reduce using rule 92 (expression -> expression DOT ID .)
    LT              reduce using rule 92 (expression -> expression DOT ID .)
    LE              reduce using rule 92 (expression -> expression DOT ID .)
    GT              reduce using rule 92 (expression -> expression DOT ID .)
    GE              reduce using rule 92 (expression -> expression DOT ID .)
    NE              reduce using rule 92 (expression -> expression DOT ID .)
    COMPARATOR      reduce using rule 92 (expression -> expression DOT ID .)
    BITWISE_AND     reduce using rule 92 (expression -> expression DOT ID .)
    BITWISE_OR      reduce using rule 92 (expression -> expression DOT ID .)
    BITWISE_XOR     reduce using rule 92 (expression -> expression DOT ID .)
    AND             reduce using rule 92 (expression -> expression DOT ID .)
    OR              reduce using rule 92 (expression -> expression DOT ID .)
    DOT             reduce using rule 92 (expression -> expression DOT ID .)
    INCREMENT       reduce using rule 92 (expression -> expression DOT ID .)
    DECREMENT       reduce using rule 92 (expression -> expression DOT ID .)
    HASH            reduce using rule 92 (expression -> expression DOT ID .)
    ID              reduce using rule 92 (expression -> expression DOT ID .)
    CONST           reduce using rule 92 (expression -> expression DOT ID .)
    VOLATILE        reduce using rule 92 (expression -> expression DOT ID .)
    AUTO            reduce using rule 92 (expression -> expression DOT ID .)
    REGISTER        reduce using rule 92 (expression -> expression DOT ID .)
    STATIC          reduce using rule 92 (expression -> expression DOT ID .)
    EXTERN          reduce using rule 92 (expression -> expression DOT ID .)
    SIGNED          reduce using rule 92 (expression -> expression DOT ID .)
    UNSIGNED        reduce using rule 92 (expression -> expression DOT ID .)
    SHORT           reduce using rule 92 (expression -> expression DOT ID .)
    LONG            reduce using rule 92 (expression -> expression DOT ID .)
    INT             reduce using rule 92 (expression -> expression DOT ID .)
    CHAR            reduce using rule 92 (expression -> expression DOT ID .)
    FLOAT           reduce using rule 92 (expression -> expression DOT ID .)
    DOUBLE          reduce using rule 92 (expression -> expression DOT ID .)
    VOID            reduce using rule 92 (expression -> expression DOT ID .)
    TYPEDEF         reduce using rule 92 (expression -> expression DOT ID .)
    STRUCT          reduce using rule 92 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 92 (expression -> expression DOT ID .)
    SEMICOLON       reduce using rule 92 (expression -> expression DOT ID .)
    COMMA           reduce using rule 92 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 92 (expression -> expression DOT ID .)
    COLON           reduce using rule 92 (expression -> expression DOT ID .)


state 128

    (97) term -> term TIMES factor .

    TIMES           reduce using rule 97 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 97 (term -> term TIMES factor .)
    MOD             reduce using rule 97 (term -> term TIMES factor .)
    LSHIFT          reduce using rule 97 (term -> term TIMES factor .)
    RSHIFT          reduce using rule 97 (term -> term TIMES factor .)
    PLUS            reduce using rule 97 (term -> term TIMES factor .)
    MINUS           reduce using rule 97 (term -> term TIMES factor .)
    LT              reduce using rule 97 (term -> term TIMES factor .)
    LE              reduce using rule 97 (term -> term TIMES factor .)
    GT              reduce using rule 97 (term -> term TIMES factor .)
    GE              reduce using rule 97 (term -> term TIMES factor .)
    NE              reduce using rule 97 (term -> term TIMES factor .)
    COMPARATOR      reduce using rule 97 (term -> term TIMES factor .)
    BITWISE_AND     reduce using rule 97 (term -> term TIMES factor .)
    BITWISE_OR      reduce using rule 97 (term -> term TIMES factor .)
    BITWISE_XOR     reduce using rule 97 (term -> term TIMES factor .)
    AND             reduce using rule 97 (term -> term TIMES factor .)
    OR              reduce using rule 97 (term -> term TIMES factor .)
    DOT             reduce using rule 97 (term -> term TIMES factor .)
    INCREMENT       reduce using rule 97 (term -> term TIMES factor .)
    DECREMENT       reduce using rule 97 (term -> term TIMES factor .)
    HASH            reduce using rule 97 (term -> term TIMES factor .)
    ID              reduce using rule 97 (term -> term TIMES factor .)
    CONST           reduce using rule 97 (term -> term TIMES factor .)
    VOLATILE        reduce using rule 97 (term -> term TIMES factor .)
    AUTO            reduce using rule 97 (term -> term TIMES factor .)
    REGISTER        reduce using rule 97 (term -> term TIMES factor .)
    STATIC          reduce using rule 97 (term -> term TIMES factor .)
    EXTERN          reduce using rule 97 (term -> term TIMES factor .)
    SIGNED          reduce using rule 97 (term -> term TIMES factor .)
    UNSIGNED        reduce using rule 97 (term -> term TIMES factor .)
    SHORT           reduce using rule 97 (term -> term TIMES factor .)
    LONG            reduce using rule 97 (term -> term TIMES factor .)
    INT             reduce using rule 97 (term -> term TIMES factor .)
    CHAR            reduce using rule 97 (term -> term TIMES factor .)
    FLOAT           reduce using rule 97 (term -> term TIMES factor .)
    DOUBLE          reduce using rule 97 (term -> term TIMES factor .)
    VOID            reduce using rule 97 (term -> term TIMES factor .)
    TYPEDEF         reduce using rule 97 (term -> term TIMES factor .)
    STRUCT          reduce using rule 97 (term -> term TIMES factor .)
    RPAREN          reduce using rule 97 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 97 (term -> term TIMES factor .)
    COMMA           reduce using rule 97 (term -> term TIMES factor .)
    RBRACE          reduce using rule 97 (term -> term TIMES factor .)
    COLON           reduce using rule 97 (term -> term TIMES factor .)


state 129

    (98) term -> term DIVIDE factor .

    TIMES           reduce using rule 98 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 98 (term -> term DIVIDE factor .)
    MOD             reduce using rule 98 (term -> term DIVIDE factor .)
    LSHIFT          reduce using rule 98 (term -> term DIVIDE factor .)
    RSHIFT          reduce using rule 98 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 98 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 98 (term -> term DIVIDE factor .)
    LT              reduce using rule 98 (term -> term DIVIDE factor .)
    LE              reduce using rule 98 (term -> term DIVIDE factor .)
    GT              reduce using rule 98 (term -> term DIVIDE factor .)
    GE              reduce using rule 98 (term -> term DIVIDE factor .)
    NE              reduce using rule 98 (term -> term DIVIDE factor .)
    COMPARATOR      reduce using rule 98 (term -> term DIVIDE factor .)
    BITWISE_AND     reduce using rule 98 (term -> term DIVIDE factor .)
    BITWISE_OR      reduce using rule 98 (term -> term DIVIDE factor .)
    BITWISE_XOR     reduce using rule 98 (term -> term DIVIDE factor .)
    AND             reduce using rule 98 (term -> term DIVIDE factor .)
    OR              reduce using rule 98 (term -> term DIVIDE factor .)
    DOT             reduce using rule 98 (term -> term DIVIDE factor .)
    INCREMENT       reduce using rule 98 (term -> term DIVIDE factor .)
    DECREMENT       reduce using rule 98 (term -> term DIVIDE factor .)
    HASH            reduce using rule 98 (term -> term DIVIDE factor .)
    ID              reduce using rule 98 (term -> term DIVIDE factor .)
    CONST           reduce using rule 98 (term -> term DIVIDE factor .)
    VOLATILE        reduce using rule 98 (term -> term DIVIDE factor .)
    AUTO            reduce using rule 98 (term -> term DIVIDE factor .)
    REGISTER        reduce using rule 98 (term -> term DIVIDE factor .)
    STATIC          reduce using rule 98 (term -> term DIVIDE factor .)
    EXTERN          reduce using rule 98 (term -> term DIVIDE factor .)
    SIGNED          reduce using rule 98 (term -> term DIVIDE factor .)
    UNSIGNED        reduce using rule 98 (term -> term DIVIDE factor .)
    SHORT           reduce using rule 98 (term -> term DIVIDE factor .)
    LONG            reduce using rule 98 (term -> term DIVIDE factor .)
    INT             reduce using rule 98 (term -> term DIVIDE factor .)
    CHAR            reduce using rule 98 (term -> term DIVIDE factor .)
    FLOAT           reduce using rule 98 (term -> term DIVIDE factor .)
    DOUBLE          reduce using rule 98 (term -> term DIVIDE factor .)
    VOID            reduce using rule 98 (term -> term DIVIDE factor .)
    TYPEDEF         reduce using rule 98 (term -> term DIVIDE factor .)
    STRUCT          reduce using rule 98 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 98 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 98 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 98 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 98 (term -> term DIVIDE factor .)
    COLON           reduce using rule 98 (term -> term DIVIDE factor .)


state 130

    (99) term -> term MOD factor .

    TIMES           reduce using rule 99 (term -> term MOD factor .)
    DIVIDE          reduce using rule 99 (term -> term MOD factor .)
    MOD             reduce using rule 99 (term -> term MOD factor .)
    LSHIFT          reduce using rule 99 (term -> term MOD factor .)
    RSHIFT          reduce using rule 99 (term -> term MOD factor .)
    PLUS            reduce using rule 99 (term -> term MOD factor .)
    MINUS           reduce using rule 99 (term -> term MOD factor .)
    LT              reduce using rule 99 (term -> term MOD factor .)
    LE              reduce using rule 99 (term -> term MOD factor .)
    GT              reduce using rule 99 (term -> term MOD factor .)
    GE              reduce using rule 99 (term -> term MOD factor .)
    NE              reduce using rule 99 (term -> term MOD factor .)
    COMPARATOR      reduce using rule 99 (term -> term MOD factor .)
    BITWISE_AND     reduce using rule 99 (term -> term MOD factor .)
    BITWISE_OR      reduce using rule 99 (term -> term MOD factor .)
    BITWISE_XOR     reduce using rule 99 (term -> term MOD factor .)
    AND             reduce using rule 99 (term -> term MOD factor .)
    OR              reduce using rule 99 (term -> term MOD factor .)
    DOT             reduce using rule 99 (term -> term MOD factor .)
    INCREMENT       reduce using rule 99 (term -> term MOD factor .)
    DECREMENT       reduce using rule 99 (term -> term MOD factor .)
    HASH            reduce using rule 99 (term -> term MOD factor .)
    ID              reduce using rule 99 (term -> term MOD factor .)
    CONST           reduce using rule 99 (term -> term MOD factor .)
    VOLATILE        reduce using rule 99 (term -> term MOD factor .)
    AUTO            reduce using rule 99 (term -> term MOD factor .)
    REGISTER        reduce using rule 99 (term -> term MOD factor .)
    STATIC          reduce using rule 99 (term -> term MOD factor .)
    EXTERN          reduce using rule 99 (term -> term MOD factor .)
    SIGNED          reduce using rule 99 (term -> term MOD factor .)
    UNSIGNED        reduce using rule 99 (term -> term MOD factor .)
    SHORT           reduce using rule 99 (term -> term MOD factor .)
    LONG            reduce using rule 99 (term -> term MOD factor .)
    INT             reduce using rule 99 (term -> term MOD factor .)
    CHAR            reduce using rule 99 (term -> term MOD factor .)
    FLOAT           reduce using rule 99 (term -> term MOD factor .)
    DOUBLE          reduce using rule 99 (term -> term MOD factor .)
    VOID            reduce using rule 99 (term -> term MOD factor .)
    TYPEDEF         reduce using rule 99 (term -> term MOD factor .)
    STRUCT          reduce using rule 99 (term -> term MOD factor .)
    RPAREN          reduce using rule 99 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 99 (term -> term MOD factor .)
    COMMA           reduce using rule 99 (term -> term MOD factor .)
    RBRACE          reduce using rule 99 (term -> term MOD factor .)
    COLON           reduce using rule 99 (term -> term MOD factor .)


state 131

    (100) term -> term LSHIFT factor .

    TIMES           reduce using rule 100 (term -> term LSHIFT factor .)
    DIVIDE          reduce using rule 100 (term -> term LSHIFT factor .)
    MOD             reduce using rule 100 (term -> term LSHIFT factor .)
    LSHIFT          reduce using rule 100 (term -> term LSHIFT factor .)
    RSHIFT          reduce using rule 100 (term -> term LSHIFT factor .)
    PLUS            reduce using rule 100 (term -> term LSHIFT factor .)
    MINUS           reduce using rule 100 (term -> term LSHIFT factor .)
    LT              reduce using rule 100 (term -> term LSHIFT factor .)
    LE              reduce using rule 100 (term -> term LSHIFT factor .)
    GT              reduce using rule 100 (term -> term LSHIFT factor .)
    GE              reduce using rule 100 (term -> term LSHIFT factor .)
    NE              reduce using rule 100 (term -> term LSHIFT factor .)
    COMPARATOR      reduce using rule 100 (term -> term LSHIFT factor .)
    BITWISE_AND     reduce using rule 100 (term -> term LSHIFT factor .)
    BITWISE_OR      reduce using rule 100 (term -> term LSHIFT factor .)
    BITWISE_XOR     reduce using rule 100 (term -> term LSHIFT factor .)
    AND             reduce using rule 100 (term -> term LSHIFT factor .)
    OR              reduce using rule 100 (term -> term LSHIFT factor .)
    DOT             reduce using rule 100 (term -> term LSHIFT factor .)
    INCREMENT       reduce using rule 100 (term -> term LSHIFT factor .)
    DECREMENT       reduce using rule 100 (term -> term LSHIFT factor .)
    HASH            reduce using rule 100 (term -> term LSHIFT factor .)
    ID              reduce using rule 100 (term -> term LSHIFT factor .)
    CONST           reduce using rule 100 (term -> term LSHIFT factor .)
    VOLATILE        reduce using rule 100 (term -> term LSHIFT factor .)
    AUTO            reduce using rule 100 (term -> term LSHIFT factor .)
    REGISTER        reduce using rule 100 (term -> term LSHIFT factor .)
    STATIC          reduce using rule 100 (term -> term LSHIFT factor .)
    EXTERN          reduce using rule 100 (term -> term LSHIFT factor .)
    SIGNED          reduce using rule 100 (term -> term LSHIFT factor .)
    UNSIGNED        reduce using rule 100 (term -> term LSHIFT factor .)
    SHORT           reduce using rule 100 (term -> term LSHIFT factor .)
    LONG            reduce using rule 100 (term -> term LSHIFT factor .)
    INT             reduce using rule 100 (term -> term LSHIFT factor .)
    CHAR            reduce using rule 100 (term -> term LSHIFT factor .)
    FLOAT           reduce using rule 100 (term -> term LSHIFT factor .)
    DOUBLE          reduce using rule 100 (term -> term LSHIFT factor .)
    VOID            reduce using rule 100 (term -> term LSHIFT factor .)
    TYPEDEF         reduce using rule 100 (term -> term LSHIFT factor .)
    STRUCT          reduce using rule 100 (term -> term LSHIFT factor .)
    RPAREN          reduce using rule 100 (term -> term LSHIFT factor .)
    SEMICOLON       reduce using rule 100 (term -> term LSHIFT factor .)
    COMMA           reduce using rule 100 (term -> term LSHIFT factor .)
    RBRACE          reduce using rule 100 (term -> term LSHIFT factor .)
    COLON           reduce using rule 100 (term -> term LSHIFT factor .)


state 132

    (101) term -> term RSHIFT factor .

    TIMES           reduce using rule 101 (term -> term RSHIFT factor .)
    DIVIDE          reduce using rule 101 (term -> term RSHIFT factor .)
    MOD             reduce using rule 101 (term -> term RSHIFT factor .)
    LSHIFT          reduce using rule 101 (term -> term RSHIFT factor .)
    RSHIFT          reduce using rule 101 (term -> term RSHIFT factor .)
    PLUS            reduce using rule 101 (term -> term RSHIFT factor .)
    MINUS           reduce using rule 101 (term -> term RSHIFT factor .)
    LT              reduce using rule 101 (term -> term RSHIFT factor .)
    LE              reduce using rule 101 (term -> term RSHIFT factor .)
    GT              reduce using rule 101 (term -> term RSHIFT factor .)
    GE              reduce using rule 101 (term -> term RSHIFT factor .)
    NE              reduce using rule 101 (term -> term RSHIFT factor .)
    COMPARATOR      reduce using rule 101 (term -> term RSHIFT factor .)
    BITWISE_AND     reduce using rule 101 (term -> term RSHIFT factor .)
    BITWISE_OR      reduce using rule 101 (term -> term RSHIFT factor .)
    BITWISE_XOR     reduce using rule 101 (term -> term RSHIFT factor .)
    AND             reduce using rule 101 (term -> term RSHIFT factor .)
    OR              reduce using rule 101 (term -> term RSHIFT factor .)
    DOT             reduce using rule 101 (term -> term RSHIFT factor .)
    INCREMENT       reduce using rule 101 (term -> term RSHIFT factor .)
    DECREMENT       reduce using rule 101 (term -> term RSHIFT factor .)
    HASH            reduce using rule 101 (term -> term RSHIFT factor .)
    ID              reduce using rule 101 (term -> term RSHIFT factor .)
    CONST           reduce using rule 101 (term -> term RSHIFT factor .)
    VOLATILE        reduce using rule 101 (term -> term RSHIFT factor .)
    AUTO            reduce using rule 101 (term -> term RSHIFT factor .)
    REGISTER        reduce using rule 101 (term -> term RSHIFT factor .)
    STATIC          reduce using rule 101 (term -> term RSHIFT factor .)
    EXTERN          reduce using rule 101 (term -> term RSHIFT factor .)
    SIGNED          reduce using rule 101 (term -> term RSHIFT factor .)
    UNSIGNED        reduce using rule 101 (term -> term RSHIFT factor .)
    SHORT           reduce using rule 101 (term -> term RSHIFT factor .)
    LONG            reduce using rule 101 (term -> term RSHIFT factor .)
    INT             reduce using rule 101 (term -> term RSHIFT factor .)
    CHAR            reduce using rule 101 (term -> term RSHIFT factor .)
    FLOAT           reduce using rule 101 (term -> term RSHIFT factor .)
    DOUBLE          reduce using rule 101 (term -> term RSHIFT factor .)
    VOID            reduce using rule 101 (term -> term RSHIFT factor .)
    TYPEDEF         reduce using rule 101 (term -> term RSHIFT factor .)
    STRUCT          reduce using rule 101 (term -> term RSHIFT factor .)
    RPAREN          reduce using rule 101 (term -> term RSHIFT factor .)
    SEMICOLON       reduce using rule 101 (term -> term RSHIFT factor .)
    COMMA           reduce using rule 101 (term -> term RSHIFT factor .)
    RBRACE          reduce using rule 101 (term -> term RSHIFT factor .)
    COLON           reduce using rule 101 (term -> term RSHIFT factor .)


state 133

    (108) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    COMPARATOR      reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    BITWISE_AND     reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    BITWISE_OR      reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    BITWISE_XOR     reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    DOT             reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    INCREMENT       reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    HASH            reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    CONST           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    VOLATILE        reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    AUTO            reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    REGISTER        reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    STATIC          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    EXTERN          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    SIGNED          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    UNSIGNED        reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    SHORT           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    LONG            reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    DOUBLE          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    VOID            reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    TYPEDEF         reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    STRUCT          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    COLON           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    SWITCH          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    FLOAT_N         reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 108 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 108 (factor -> LPAREN expression RPAREN .)


state 134

    (23) parameter -> type_specifier ID .

    RPAREN          reduce using rule 23 (parameter -> type_specifier ID .)
    COMMA           reduce using rule 23 (parameter -> type_specifier ID .)


state 135

    (17) function -> type_specifier ID LPAREN parameter_list RPAREN . compound_statement
    (24) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 138

    compound_statement             shift and go to state 147

state 136

    (21) parameter_list -> parameter_list COMMA . parameter
    (23) parameter -> . type_specifier ID
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 19
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    parameter                      shift and go to state 148
    type_specifier                 shift and go to state 98
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 137

    (18) function -> type_specifier ID LPAREN RPAREN compound_statement .

    ID              reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    CONST           reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    VOLATILE        reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    AUTO            reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    REGISTER        reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    STATIC          reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    EXTERN          reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    SIGNED          reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    UNSIGNED        reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    SHORT           reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    LONG            reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    INT             reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    CHAR            reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    FLOAT           reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    DOUBLE          reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    VOID            reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)
    $end            reduce using rule 18 (function -> type_specifier ID LPAREN RPAREN compound_statement .)


state 138

    (24) compound_statement -> LBRACE . statement_list RBRACE
    (25) statement_list -> . statement
    (26) statement_list -> . statement_list statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    statement_list                 shift and go to state 149
    statement                      shift and go to state 150
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 139

    (19) main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .

    ID              reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    CONST           reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    VOLATILE        reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    AUTO            reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    REGISTER        reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    STATIC          reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    EXTERN          reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    SIGNED          reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    UNSIGNED        reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    SHORT           reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    LONG            reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    INT             reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    CHAR            reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    FLOAT           reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    DOUBLE          reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    VOID            reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)
    $end            reduce using rule 19 (main_function -> type_specifier MAIN LPAREN RPAREN compound_statement .)


state 140

    (54) init_declarator -> ID EQUALS LBRACE initializer_list . RBRACE
    (56) initializer_list -> initializer_list . COMMA expression

    RBRACE          shift and go to state 173
    COMMA           shift and go to state 174


state 141

    (55) initializer_list -> expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RBRACE          reduce using rule 55 (initializer_list -> expression .)
    COMMA           reduce using rule 55 (initializer_list -> expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 142

    (44) struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE . ID SEMICOLON

    ID              shift and go to state 175


state 143

    (46) struct_members -> struct_members struct_member .

    RBRACE          reduce using rule 46 (struct_members -> struct_members struct_member .)
    ID              reduce using rule 46 (struct_members -> struct_members struct_member .)
    CONST           reduce using rule 46 (struct_members -> struct_members struct_member .)
    VOLATILE        reduce using rule 46 (struct_members -> struct_members struct_member .)
    AUTO            reduce using rule 46 (struct_members -> struct_members struct_member .)
    REGISTER        reduce using rule 46 (struct_members -> struct_members struct_member .)
    STATIC          reduce using rule 46 (struct_members -> struct_members struct_member .)
    EXTERN          reduce using rule 46 (struct_members -> struct_members struct_member .)
    SIGNED          reduce using rule 46 (struct_members -> struct_members struct_member .)
    UNSIGNED        reduce using rule 46 (struct_members -> struct_members struct_member .)
    SHORT           reduce using rule 46 (struct_members -> struct_members struct_member .)
    LONG            reduce using rule 46 (struct_members -> struct_members struct_member .)
    INT             reduce using rule 46 (struct_members -> struct_members struct_member .)
    CHAR            reduce using rule 46 (struct_members -> struct_members struct_member .)
    FLOAT           reduce using rule 46 (struct_members -> struct_members struct_member .)
    DOUBLE          reduce using rule 46 (struct_members -> struct_members struct_member .)
    VOID            reduce using rule 46 (struct_members -> struct_members struct_member .)


state 144

    (47) struct_member -> type_specifier ID . SEMICOLON

    SEMICOLON       shift and go to state 176


state 145

    (126) function_call -> ID LPAREN argument_list RPAREN .

    PLUS            reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    LE              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    GE              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    NE              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    COMPARATOR      reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    BITWISE_AND     reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    BITWISE_OR      reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    BITWISE_XOR     reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    DOT             reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    INCREMENT       reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    DECREMENT       reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    HASH            reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    CONST           reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    VOLATILE        reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    AUTO            reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    REGISTER        reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    STATIC          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    EXTERN          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    SIGNED          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    UNSIGNED        reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    SHORT           reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    LONG            reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    INT             reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    CHAR            reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    DOUBLE          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    VOID            reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    TYPEDEF         reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    STRUCT          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)
    COLON           reduce using rule 126 (function_call -> ID LPAREN argument_list RPAREN .)


state 146

    (128) argument_list -> argument_list COMMA . expression
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 177
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 147

    (17) function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    ID              reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    CONST           reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    VOLATILE        reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    AUTO            reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    REGISTER        reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    STATIC          reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    EXTERN          reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    SIGNED          reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    UNSIGNED        reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    SHORT           reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    LONG            reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    INT             reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    CHAR            reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    FLOAT           reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    DOUBLE          reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    VOID            reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)
    $end            reduce using rule 17 (function -> type_specifier ID LPAREN parameter_list RPAREN compound_statement .)


state 148

    (21) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 21 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 21 (parameter_list -> parameter_list COMMA parameter .)


state 149

    (24) compound_statement -> LBRACE statement_list . RBRACE
    (26) statement_list -> statement_list . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          shift and go to state 178
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 179
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 150

    (25) statement_list -> statement .

    RBRACE          reduce using rule 25 (statement_list -> statement .)
    ID              reduce using rule 25 (statement_list -> statement .)
    IF              reduce using rule 25 (statement_list -> statement .)
    WHILE           reduce using rule 25 (statement_list -> statement .)
    RETURN          reduce using rule 25 (statement_list -> statement .)
    LBRACE          reduce using rule 25 (statement_list -> statement .)
    BREAK           reduce using rule 25 (statement_list -> statement .)
    CONTINUE        reduce using rule 25 (statement_list -> statement .)
    SWITCH          reduce using rule 25 (statement_list -> statement .)
    DO              reduce using rule 25 (statement_list -> statement .)
    FOR             reduce using rule 25 (statement_list -> statement .)
    TYPEDEF         reduce using rule 25 (statement_list -> statement .)
    STRUCT          reduce using rule 25 (statement_list -> statement .)
    INTEGER         reduce using rule 25 (statement_list -> statement .)
    FLOAT_N         reduce using rule 25 (statement_list -> statement .)
    STRING          reduce using rule 25 (statement_list -> statement .)
    LPAREN          reduce using rule 25 (statement_list -> statement .)
    CONST           reduce using rule 25 (statement_list -> statement .)
    VOLATILE        reduce using rule 25 (statement_list -> statement .)
    AUTO            reduce using rule 25 (statement_list -> statement .)
    REGISTER        reduce using rule 25 (statement_list -> statement .)
    STATIC          reduce using rule 25 (statement_list -> statement .)
    EXTERN          reduce using rule 25 (statement_list -> statement .)
    SIGNED          reduce using rule 25 (statement_list -> statement .)
    UNSIGNED        reduce using rule 25 (statement_list -> statement .)
    SHORT           reduce using rule 25 (statement_list -> statement .)
    LONG            reduce using rule 25 (statement_list -> statement .)
    INT             reduce using rule 25 (statement_list -> statement .)
    CHAR            reduce using rule 25 (statement_list -> statement .)
    FLOAT           reduce using rule 25 (statement_list -> statement .)
    DOUBLE          reduce using rule 25 (statement_list -> statement .)
    VOID            reduce using rule 25 (statement_list -> statement .)
    DEFAULT         reduce using rule 25 (statement_list -> statement .)
    CASE            reduce using rule 25 (statement_list -> statement .)


state 151

    (27) statement -> declaration .

    RBRACE          reduce using rule 27 (statement -> declaration .)
    ID              reduce using rule 27 (statement -> declaration .)
    IF              reduce using rule 27 (statement -> declaration .)
    WHILE           reduce using rule 27 (statement -> declaration .)
    RETURN          reduce using rule 27 (statement -> declaration .)
    LBRACE          reduce using rule 27 (statement -> declaration .)
    BREAK           reduce using rule 27 (statement -> declaration .)
    CONTINUE        reduce using rule 27 (statement -> declaration .)
    SWITCH          reduce using rule 27 (statement -> declaration .)
    DO              reduce using rule 27 (statement -> declaration .)
    FOR             reduce using rule 27 (statement -> declaration .)
    TYPEDEF         reduce using rule 27 (statement -> declaration .)
    STRUCT          reduce using rule 27 (statement -> declaration .)
    INTEGER         reduce using rule 27 (statement -> declaration .)
    FLOAT_N         reduce using rule 27 (statement -> declaration .)
    STRING          reduce using rule 27 (statement -> declaration .)
    LPAREN          reduce using rule 27 (statement -> declaration .)
    CONST           reduce using rule 27 (statement -> declaration .)
    VOLATILE        reduce using rule 27 (statement -> declaration .)
    AUTO            reduce using rule 27 (statement -> declaration .)
    REGISTER        reduce using rule 27 (statement -> declaration .)
    STATIC          reduce using rule 27 (statement -> declaration .)
    EXTERN          reduce using rule 27 (statement -> declaration .)
    SIGNED          reduce using rule 27 (statement -> declaration .)
    UNSIGNED        reduce using rule 27 (statement -> declaration .)
    SHORT           reduce using rule 27 (statement -> declaration .)
    LONG            reduce using rule 27 (statement -> declaration .)
    INT             reduce using rule 27 (statement -> declaration .)
    CHAR            reduce using rule 27 (statement -> declaration .)
    FLOAT           reduce using rule 27 (statement -> declaration .)
    DOUBLE          reduce using rule 27 (statement -> declaration .)
    VOID            reduce using rule 27 (statement -> declaration .)
    ELSE            reduce using rule 27 (statement -> declaration .)
    DEFAULT         reduce using rule 27 (statement -> declaration .)
    CASE            reduce using rule 27 (statement -> declaration .)


state 152

    (28) statement -> assignment .

    RBRACE          reduce using rule 28 (statement -> assignment .)
    ID              reduce using rule 28 (statement -> assignment .)
    IF              reduce using rule 28 (statement -> assignment .)
    WHILE           reduce using rule 28 (statement -> assignment .)
    RETURN          reduce using rule 28 (statement -> assignment .)
    LBRACE          reduce using rule 28 (statement -> assignment .)
    BREAK           reduce using rule 28 (statement -> assignment .)
    CONTINUE        reduce using rule 28 (statement -> assignment .)
    SWITCH          reduce using rule 28 (statement -> assignment .)
    DO              reduce using rule 28 (statement -> assignment .)
    FOR             reduce using rule 28 (statement -> assignment .)
    TYPEDEF         reduce using rule 28 (statement -> assignment .)
    STRUCT          reduce using rule 28 (statement -> assignment .)
    INTEGER         reduce using rule 28 (statement -> assignment .)
    FLOAT_N         reduce using rule 28 (statement -> assignment .)
    STRING          reduce using rule 28 (statement -> assignment .)
    LPAREN          reduce using rule 28 (statement -> assignment .)
    CONST           reduce using rule 28 (statement -> assignment .)
    VOLATILE        reduce using rule 28 (statement -> assignment .)
    AUTO            reduce using rule 28 (statement -> assignment .)
    REGISTER        reduce using rule 28 (statement -> assignment .)
    STATIC          reduce using rule 28 (statement -> assignment .)
    EXTERN          reduce using rule 28 (statement -> assignment .)
    SIGNED          reduce using rule 28 (statement -> assignment .)
    UNSIGNED        reduce using rule 28 (statement -> assignment .)
    SHORT           reduce using rule 28 (statement -> assignment .)
    LONG            reduce using rule 28 (statement -> assignment .)
    INT             reduce using rule 28 (statement -> assignment .)
    CHAR            reduce using rule 28 (statement -> assignment .)
    FLOAT           reduce using rule 28 (statement -> assignment .)
    DOUBLE          reduce using rule 28 (statement -> assignment .)
    VOID            reduce using rule 28 (statement -> assignment .)
    ELSE            reduce using rule 28 (statement -> assignment .)
    DEFAULT         reduce using rule 28 (statement -> assignment .)
    CASE            reduce using rule 28 (statement -> assignment .)


state 153

    (29) statement -> if_statement .

    RBRACE          reduce using rule 29 (statement -> if_statement .)
    ID              reduce using rule 29 (statement -> if_statement .)
    IF              reduce using rule 29 (statement -> if_statement .)
    WHILE           reduce using rule 29 (statement -> if_statement .)
    RETURN          reduce using rule 29 (statement -> if_statement .)
    LBRACE          reduce using rule 29 (statement -> if_statement .)
    BREAK           reduce using rule 29 (statement -> if_statement .)
    CONTINUE        reduce using rule 29 (statement -> if_statement .)
    SWITCH          reduce using rule 29 (statement -> if_statement .)
    DO              reduce using rule 29 (statement -> if_statement .)
    FOR             reduce using rule 29 (statement -> if_statement .)
    TYPEDEF         reduce using rule 29 (statement -> if_statement .)
    STRUCT          reduce using rule 29 (statement -> if_statement .)
    INTEGER         reduce using rule 29 (statement -> if_statement .)
    FLOAT_N         reduce using rule 29 (statement -> if_statement .)
    STRING          reduce using rule 29 (statement -> if_statement .)
    LPAREN          reduce using rule 29 (statement -> if_statement .)
    CONST           reduce using rule 29 (statement -> if_statement .)
    VOLATILE        reduce using rule 29 (statement -> if_statement .)
    AUTO            reduce using rule 29 (statement -> if_statement .)
    REGISTER        reduce using rule 29 (statement -> if_statement .)
    STATIC          reduce using rule 29 (statement -> if_statement .)
    EXTERN          reduce using rule 29 (statement -> if_statement .)
    SIGNED          reduce using rule 29 (statement -> if_statement .)
    UNSIGNED        reduce using rule 29 (statement -> if_statement .)
    SHORT           reduce using rule 29 (statement -> if_statement .)
    LONG            reduce using rule 29 (statement -> if_statement .)
    INT             reduce using rule 29 (statement -> if_statement .)
    CHAR            reduce using rule 29 (statement -> if_statement .)
    FLOAT           reduce using rule 29 (statement -> if_statement .)
    DOUBLE          reduce using rule 29 (statement -> if_statement .)
    VOID            reduce using rule 29 (statement -> if_statement .)
    ELSE            reduce using rule 29 (statement -> if_statement .)
    DEFAULT         reduce using rule 29 (statement -> if_statement .)
    CASE            reduce using rule 29 (statement -> if_statement .)


state 154

    (30) statement -> while_statement .

    RBRACE          reduce using rule 30 (statement -> while_statement .)
    ID              reduce using rule 30 (statement -> while_statement .)
    IF              reduce using rule 30 (statement -> while_statement .)
    WHILE           reduce using rule 30 (statement -> while_statement .)
    RETURN          reduce using rule 30 (statement -> while_statement .)
    LBRACE          reduce using rule 30 (statement -> while_statement .)
    BREAK           reduce using rule 30 (statement -> while_statement .)
    CONTINUE        reduce using rule 30 (statement -> while_statement .)
    SWITCH          reduce using rule 30 (statement -> while_statement .)
    DO              reduce using rule 30 (statement -> while_statement .)
    FOR             reduce using rule 30 (statement -> while_statement .)
    TYPEDEF         reduce using rule 30 (statement -> while_statement .)
    STRUCT          reduce using rule 30 (statement -> while_statement .)
    INTEGER         reduce using rule 30 (statement -> while_statement .)
    FLOAT_N         reduce using rule 30 (statement -> while_statement .)
    STRING          reduce using rule 30 (statement -> while_statement .)
    LPAREN          reduce using rule 30 (statement -> while_statement .)
    CONST           reduce using rule 30 (statement -> while_statement .)
    VOLATILE        reduce using rule 30 (statement -> while_statement .)
    AUTO            reduce using rule 30 (statement -> while_statement .)
    REGISTER        reduce using rule 30 (statement -> while_statement .)
    STATIC          reduce using rule 30 (statement -> while_statement .)
    EXTERN          reduce using rule 30 (statement -> while_statement .)
    SIGNED          reduce using rule 30 (statement -> while_statement .)
    UNSIGNED        reduce using rule 30 (statement -> while_statement .)
    SHORT           reduce using rule 30 (statement -> while_statement .)
    LONG            reduce using rule 30 (statement -> while_statement .)
    INT             reduce using rule 30 (statement -> while_statement .)
    CHAR            reduce using rule 30 (statement -> while_statement .)
    FLOAT           reduce using rule 30 (statement -> while_statement .)
    DOUBLE          reduce using rule 30 (statement -> while_statement .)
    VOID            reduce using rule 30 (statement -> while_statement .)
    ELSE            reduce using rule 30 (statement -> while_statement .)
    DEFAULT         reduce using rule 30 (statement -> while_statement .)
    CASE            reduce using rule 30 (statement -> while_statement .)


state 155

    (31) statement -> return_statement .

    RBRACE          reduce using rule 31 (statement -> return_statement .)
    ID              reduce using rule 31 (statement -> return_statement .)
    IF              reduce using rule 31 (statement -> return_statement .)
    WHILE           reduce using rule 31 (statement -> return_statement .)
    RETURN          reduce using rule 31 (statement -> return_statement .)
    LBRACE          reduce using rule 31 (statement -> return_statement .)
    BREAK           reduce using rule 31 (statement -> return_statement .)
    CONTINUE        reduce using rule 31 (statement -> return_statement .)
    SWITCH          reduce using rule 31 (statement -> return_statement .)
    DO              reduce using rule 31 (statement -> return_statement .)
    FOR             reduce using rule 31 (statement -> return_statement .)
    TYPEDEF         reduce using rule 31 (statement -> return_statement .)
    STRUCT          reduce using rule 31 (statement -> return_statement .)
    INTEGER         reduce using rule 31 (statement -> return_statement .)
    FLOAT_N         reduce using rule 31 (statement -> return_statement .)
    STRING          reduce using rule 31 (statement -> return_statement .)
    LPAREN          reduce using rule 31 (statement -> return_statement .)
    CONST           reduce using rule 31 (statement -> return_statement .)
    VOLATILE        reduce using rule 31 (statement -> return_statement .)
    AUTO            reduce using rule 31 (statement -> return_statement .)
    REGISTER        reduce using rule 31 (statement -> return_statement .)
    STATIC          reduce using rule 31 (statement -> return_statement .)
    EXTERN          reduce using rule 31 (statement -> return_statement .)
    SIGNED          reduce using rule 31 (statement -> return_statement .)
    UNSIGNED        reduce using rule 31 (statement -> return_statement .)
    SHORT           reduce using rule 31 (statement -> return_statement .)
    LONG            reduce using rule 31 (statement -> return_statement .)
    INT             reduce using rule 31 (statement -> return_statement .)
    CHAR            reduce using rule 31 (statement -> return_statement .)
    FLOAT           reduce using rule 31 (statement -> return_statement .)
    DOUBLE          reduce using rule 31 (statement -> return_statement .)
    VOID            reduce using rule 31 (statement -> return_statement .)
    ELSE            reduce using rule 31 (statement -> return_statement .)
    DEFAULT         reduce using rule 31 (statement -> return_statement .)
    CASE            reduce using rule 31 (statement -> return_statement .)


state 156

    (32) statement -> compound_statement .

    RBRACE          reduce using rule 32 (statement -> compound_statement .)
    ID              reduce using rule 32 (statement -> compound_statement .)
    IF              reduce using rule 32 (statement -> compound_statement .)
    WHILE           reduce using rule 32 (statement -> compound_statement .)
    RETURN          reduce using rule 32 (statement -> compound_statement .)
    LBRACE          reduce using rule 32 (statement -> compound_statement .)
    BREAK           reduce using rule 32 (statement -> compound_statement .)
    CONTINUE        reduce using rule 32 (statement -> compound_statement .)
    SWITCH          reduce using rule 32 (statement -> compound_statement .)
    DO              reduce using rule 32 (statement -> compound_statement .)
    FOR             reduce using rule 32 (statement -> compound_statement .)
    TYPEDEF         reduce using rule 32 (statement -> compound_statement .)
    STRUCT          reduce using rule 32 (statement -> compound_statement .)
    INTEGER         reduce using rule 32 (statement -> compound_statement .)
    FLOAT_N         reduce using rule 32 (statement -> compound_statement .)
    STRING          reduce using rule 32 (statement -> compound_statement .)
    LPAREN          reduce using rule 32 (statement -> compound_statement .)
    CONST           reduce using rule 32 (statement -> compound_statement .)
    VOLATILE        reduce using rule 32 (statement -> compound_statement .)
    AUTO            reduce using rule 32 (statement -> compound_statement .)
    REGISTER        reduce using rule 32 (statement -> compound_statement .)
    STATIC          reduce using rule 32 (statement -> compound_statement .)
    EXTERN          reduce using rule 32 (statement -> compound_statement .)
    SIGNED          reduce using rule 32 (statement -> compound_statement .)
    UNSIGNED        reduce using rule 32 (statement -> compound_statement .)
    SHORT           reduce using rule 32 (statement -> compound_statement .)
    LONG            reduce using rule 32 (statement -> compound_statement .)
    INT             reduce using rule 32 (statement -> compound_statement .)
    CHAR            reduce using rule 32 (statement -> compound_statement .)
    FLOAT           reduce using rule 32 (statement -> compound_statement .)
    DOUBLE          reduce using rule 32 (statement -> compound_statement .)
    VOID            reduce using rule 32 (statement -> compound_statement .)
    ELSE            reduce using rule 32 (statement -> compound_statement .)
    DEFAULT         reduce using rule 32 (statement -> compound_statement .)
    CASE            reduce using rule 32 (statement -> compound_statement .)


state 157

    (33) statement -> function_call . SEMICOLON
    (95) expression -> function_call .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 180
    PLUS            reduce using rule 95 (expression -> function_call .)
    MINUS           reduce using rule 95 (expression -> function_call .)
    LT              reduce using rule 95 (expression -> function_call .)
    LE              reduce using rule 95 (expression -> function_call .)
    GT              reduce using rule 95 (expression -> function_call .)
    GE              reduce using rule 95 (expression -> function_call .)
    NE              reduce using rule 95 (expression -> function_call .)
    COMPARATOR      reduce using rule 95 (expression -> function_call .)
    BITWISE_AND     reduce using rule 95 (expression -> function_call .)
    BITWISE_OR      reduce using rule 95 (expression -> function_call .)
    BITWISE_XOR     reduce using rule 95 (expression -> function_call .)
    AND             reduce using rule 95 (expression -> function_call .)
    OR              reduce using rule 95 (expression -> function_call .)
    DOT             reduce using rule 95 (expression -> function_call .)
    INCREMENT       reduce using rule 95 (expression -> function_call .)
    DECREMENT       reduce using rule 95 (expression -> function_call .)

  ! SEMICOLON       [ reduce using rule 95 (expression -> function_call .) ]


state 158

    (34) statement -> break_statement .

    RBRACE          reduce using rule 34 (statement -> break_statement .)
    ID              reduce using rule 34 (statement -> break_statement .)
    IF              reduce using rule 34 (statement -> break_statement .)
    WHILE           reduce using rule 34 (statement -> break_statement .)
    RETURN          reduce using rule 34 (statement -> break_statement .)
    LBRACE          reduce using rule 34 (statement -> break_statement .)
    BREAK           reduce using rule 34 (statement -> break_statement .)
    CONTINUE        reduce using rule 34 (statement -> break_statement .)
    SWITCH          reduce using rule 34 (statement -> break_statement .)
    DO              reduce using rule 34 (statement -> break_statement .)
    FOR             reduce using rule 34 (statement -> break_statement .)
    TYPEDEF         reduce using rule 34 (statement -> break_statement .)
    STRUCT          reduce using rule 34 (statement -> break_statement .)
    INTEGER         reduce using rule 34 (statement -> break_statement .)
    FLOAT_N         reduce using rule 34 (statement -> break_statement .)
    STRING          reduce using rule 34 (statement -> break_statement .)
    LPAREN          reduce using rule 34 (statement -> break_statement .)
    CONST           reduce using rule 34 (statement -> break_statement .)
    VOLATILE        reduce using rule 34 (statement -> break_statement .)
    AUTO            reduce using rule 34 (statement -> break_statement .)
    REGISTER        reduce using rule 34 (statement -> break_statement .)
    STATIC          reduce using rule 34 (statement -> break_statement .)
    EXTERN          reduce using rule 34 (statement -> break_statement .)
    SIGNED          reduce using rule 34 (statement -> break_statement .)
    UNSIGNED        reduce using rule 34 (statement -> break_statement .)
    SHORT           reduce using rule 34 (statement -> break_statement .)
    LONG            reduce using rule 34 (statement -> break_statement .)
    INT             reduce using rule 34 (statement -> break_statement .)
    CHAR            reduce using rule 34 (statement -> break_statement .)
    FLOAT           reduce using rule 34 (statement -> break_statement .)
    DOUBLE          reduce using rule 34 (statement -> break_statement .)
    VOID            reduce using rule 34 (statement -> break_statement .)
    ELSE            reduce using rule 34 (statement -> break_statement .)
    DEFAULT         reduce using rule 34 (statement -> break_statement .)
    CASE            reduce using rule 34 (statement -> break_statement .)


state 159

    (35) statement -> continue_statement .

    RBRACE          reduce using rule 35 (statement -> continue_statement .)
    ID              reduce using rule 35 (statement -> continue_statement .)
    IF              reduce using rule 35 (statement -> continue_statement .)
    WHILE           reduce using rule 35 (statement -> continue_statement .)
    RETURN          reduce using rule 35 (statement -> continue_statement .)
    LBRACE          reduce using rule 35 (statement -> continue_statement .)
    BREAK           reduce using rule 35 (statement -> continue_statement .)
    CONTINUE        reduce using rule 35 (statement -> continue_statement .)
    SWITCH          reduce using rule 35 (statement -> continue_statement .)
    DO              reduce using rule 35 (statement -> continue_statement .)
    FOR             reduce using rule 35 (statement -> continue_statement .)
    TYPEDEF         reduce using rule 35 (statement -> continue_statement .)
    STRUCT          reduce using rule 35 (statement -> continue_statement .)
    INTEGER         reduce using rule 35 (statement -> continue_statement .)
    FLOAT_N         reduce using rule 35 (statement -> continue_statement .)
    STRING          reduce using rule 35 (statement -> continue_statement .)
    LPAREN          reduce using rule 35 (statement -> continue_statement .)
    CONST           reduce using rule 35 (statement -> continue_statement .)
    VOLATILE        reduce using rule 35 (statement -> continue_statement .)
    AUTO            reduce using rule 35 (statement -> continue_statement .)
    REGISTER        reduce using rule 35 (statement -> continue_statement .)
    STATIC          reduce using rule 35 (statement -> continue_statement .)
    EXTERN          reduce using rule 35 (statement -> continue_statement .)
    SIGNED          reduce using rule 35 (statement -> continue_statement .)
    UNSIGNED        reduce using rule 35 (statement -> continue_statement .)
    SHORT           reduce using rule 35 (statement -> continue_statement .)
    LONG            reduce using rule 35 (statement -> continue_statement .)
    INT             reduce using rule 35 (statement -> continue_statement .)
    CHAR            reduce using rule 35 (statement -> continue_statement .)
    FLOAT           reduce using rule 35 (statement -> continue_statement .)
    DOUBLE          reduce using rule 35 (statement -> continue_statement .)
    VOID            reduce using rule 35 (statement -> continue_statement .)
    ELSE            reduce using rule 35 (statement -> continue_statement .)
    DEFAULT         reduce using rule 35 (statement -> continue_statement .)
    CASE            reduce using rule 35 (statement -> continue_statement .)


state 160

    (36) statement -> switch_statement .

    RBRACE          reduce using rule 36 (statement -> switch_statement .)
    ID              reduce using rule 36 (statement -> switch_statement .)
    IF              reduce using rule 36 (statement -> switch_statement .)
    WHILE           reduce using rule 36 (statement -> switch_statement .)
    RETURN          reduce using rule 36 (statement -> switch_statement .)
    LBRACE          reduce using rule 36 (statement -> switch_statement .)
    BREAK           reduce using rule 36 (statement -> switch_statement .)
    CONTINUE        reduce using rule 36 (statement -> switch_statement .)
    SWITCH          reduce using rule 36 (statement -> switch_statement .)
    DO              reduce using rule 36 (statement -> switch_statement .)
    FOR             reduce using rule 36 (statement -> switch_statement .)
    TYPEDEF         reduce using rule 36 (statement -> switch_statement .)
    STRUCT          reduce using rule 36 (statement -> switch_statement .)
    INTEGER         reduce using rule 36 (statement -> switch_statement .)
    FLOAT_N         reduce using rule 36 (statement -> switch_statement .)
    STRING          reduce using rule 36 (statement -> switch_statement .)
    LPAREN          reduce using rule 36 (statement -> switch_statement .)
    CONST           reduce using rule 36 (statement -> switch_statement .)
    VOLATILE        reduce using rule 36 (statement -> switch_statement .)
    AUTO            reduce using rule 36 (statement -> switch_statement .)
    REGISTER        reduce using rule 36 (statement -> switch_statement .)
    STATIC          reduce using rule 36 (statement -> switch_statement .)
    EXTERN          reduce using rule 36 (statement -> switch_statement .)
    SIGNED          reduce using rule 36 (statement -> switch_statement .)
    UNSIGNED        reduce using rule 36 (statement -> switch_statement .)
    SHORT           reduce using rule 36 (statement -> switch_statement .)
    LONG            reduce using rule 36 (statement -> switch_statement .)
    INT             reduce using rule 36 (statement -> switch_statement .)
    CHAR            reduce using rule 36 (statement -> switch_statement .)
    FLOAT           reduce using rule 36 (statement -> switch_statement .)
    DOUBLE          reduce using rule 36 (statement -> switch_statement .)
    VOID            reduce using rule 36 (statement -> switch_statement .)
    ELSE            reduce using rule 36 (statement -> switch_statement .)
    DEFAULT         reduce using rule 36 (statement -> switch_statement .)
    CASE            reduce using rule 36 (statement -> switch_statement .)


state 161

    (37) statement -> do_while_statement .

    RBRACE          reduce using rule 37 (statement -> do_while_statement .)
    ID              reduce using rule 37 (statement -> do_while_statement .)
    IF              reduce using rule 37 (statement -> do_while_statement .)
    WHILE           reduce using rule 37 (statement -> do_while_statement .)
    RETURN          reduce using rule 37 (statement -> do_while_statement .)
    LBRACE          reduce using rule 37 (statement -> do_while_statement .)
    BREAK           reduce using rule 37 (statement -> do_while_statement .)
    CONTINUE        reduce using rule 37 (statement -> do_while_statement .)
    SWITCH          reduce using rule 37 (statement -> do_while_statement .)
    DO              reduce using rule 37 (statement -> do_while_statement .)
    FOR             reduce using rule 37 (statement -> do_while_statement .)
    TYPEDEF         reduce using rule 37 (statement -> do_while_statement .)
    STRUCT          reduce using rule 37 (statement -> do_while_statement .)
    INTEGER         reduce using rule 37 (statement -> do_while_statement .)
    FLOAT_N         reduce using rule 37 (statement -> do_while_statement .)
    STRING          reduce using rule 37 (statement -> do_while_statement .)
    LPAREN          reduce using rule 37 (statement -> do_while_statement .)
    CONST           reduce using rule 37 (statement -> do_while_statement .)
    VOLATILE        reduce using rule 37 (statement -> do_while_statement .)
    AUTO            reduce using rule 37 (statement -> do_while_statement .)
    REGISTER        reduce using rule 37 (statement -> do_while_statement .)
    STATIC          reduce using rule 37 (statement -> do_while_statement .)
    EXTERN          reduce using rule 37 (statement -> do_while_statement .)
    SIGNED          reduce using rule 37 (statement -> do_while_statement .)
    UNSIGNED        reduce using rule 37 (statement -> do_while_statement .)
    SHORT           reduce using rule 37 (statement -> do_while_statement .)
    LONG            reduce using rule 37 (statement -> do_while_statement .)
    INT             reduce using rule 37 (statement -> do_while_statement .)
    CHAR            reduce using rule 37 (statement -> do_while_statement .)
    FLOAT           reduce using rule 37 (statement -> do_while_statement .)
    DOUBLE          reduce using rule 37 (statement -> do_while_statement .)
    VOID            reduce using rule 37 (statement -> do_while_statement .)
    ELSE            reduce using rule 37 (statement -> do_while_statement .)
    DEFAULT         reduce using rule 37 (statement -> do_while_statement .)
    CASE            reduce using rule 37 (statement -> do_while_statement .)


state 162

    (38) statement -> for_statement .

    RBRACE          reduce using rule 38 (statement -> for_statement .)
    ID              reduce using rule 38 (statement -> for_statement .)
    IF              reduce using rule 38 (statement -> for_statement .)
    WHILE           reduce using rule 38 (statement -> for_statement .)
    RETURN          reduce using rule 38 (statement -> for_statement .)
    LBRACE          reduce using rule 38 (statement -> for_statement .)
    BREAK           reduce using rule 38 (statement -> for_statement .)
    CONTINUE        reduce using rule 38 (statement -> for_statement .)
    SWITCH          reduce using rule 38 (statement -> for_statement .)
    DO              reduce using rule 38 (statement -> for_statement .)
    FOR             reduce using rule 38 (statement -> for_statement .)
    TYPEDEF         reduce using rule 38 (statement -> for_statement .)
    STRUCT          reduce using rule 38 (statement -> for_statement .)
    INTEGER         reduce using rule 38 (statement -> for_statement .)
    FLOAT_N         reduce using rule 38 (statement -> for_statement .)
    STRING          reduce using rule 38 (statement -> for_statement .)
    LPAREN          reduce using rule 38 (statement -> for_statement .)
    CONST           reduce using rule 38 (statement -> for_statement .)
    VOLATILE        reduce using rule 38 (statement -> for_statement .)
    AUTO            reduce using rule 38 (statement -> for_statement .)
    REGISTER        reduce using rule 38 (statement -> for_statement .)
    STATIC          reduce using rule 38 (statement -> for_statement .)
    EXTERN          reduce using rule 38 (statement -> for_statement .)
    SIGNED          reduce using rule 38 (statement -> for_statement .)
    UNSIGNED        reduce using rule 38 (statement -> for_statement .)
    SHORT           reduce using rule 38 (statement -> for_statement .)
    LONG            reduce using rule 38 (statement -> for_statement .)
    INT             reduce using rule 38 (statement -> for_statement .)
    CHAR            reduce using rule 38 (statement -> for_statement .)
    FLOAT           reduce using rule 38 (statement -> for_statement .)
    DOUBLE          reduce using rule 38 (statement -> for_statement .)
    VOID            reduce using rule 38 (statement -> for_statement .)
    ELSE            reduce using rule 38 (statement -> for_statement .)
    DEFAULT         reduce using rule 38 (statement -> for_statement .)
    CASE            reduce using rule 38 (statement -> for_statement .)


state 163

    (39) statement -> expression . SEMICOLON
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 181
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 164

    (77) assignment -> ID . EQUALS expression SEMICOLON
    (125) function_call -> ID . LPAREN RPAREN
    (126) function_call -> ID . LPAREN argument_list RPAREN
    (59) type_specifier -> ID .
    (105) factor -> ID .
    (106) factor -> ID . INCREMENT
    (107) factor -> ID . DECREMENT

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    EQUALS          shift and go to state 182
    LPAREN          shift and go to state 73
    ID              reduce using rule 59 (type_specifier -> ID .)
    TIMES           reduce using rule 105 (factor -> ID .)
    DIVIDE          reduce using rule 105 (factor -> ID .)
    MOD             reduce using rule 105 (factor -> ID .)
    LSHIFT          reduce using rule 105 (factor -> ID .)
    RSHIFT          reduce using rule 105 (factor -> ID .)
    SEMICOLON       reduce using rule 105 (factor -> ID .)
    PLUS            reduce using rule 105 (factor -> ID .)
    MINUS           reduce using rule 105 (factor -> ID .)
    LT              reduce using rule 105 (factor -> ID .)
    LE              reduce using rule 105 (factor -> ID .)
    GT              reduce using rule 105 (factor -> ID .)
    GE              reduce using rule 105 (factor -> ID .)
    NE              reduce using rule 105 (factor -> ID .)
    COMPARATOR      reduce using rule 105 (factor -> ID .)
    BITWISE_AND     reduce using rule 105 (factor -> ID .)
    BITWISE_OR      reduce using rule 105 (factor -> ID .)
    BITWISE_XOR     reduce using rule 105 (factor -> ID .)
    AND             reduce using rule 105 (factor -> ID .)
    OR              reduce using rule 105 (factor -> ID .)
    DOT             reduce using rule 105 (factor -> ID .)
    INCREMENT       shift and go to state 74
    DECREMENT       shift and go to state 75

  ! INCREMENT       [ reduce using rule 105 (factor -> ID .) ]
  ! DECREMENT       [ reduce using rule 105 (factor -> ID .) ]


state 165

    (109) if_statement -> IF . factor statement
    (110) if_statement -> IF . factor statement ELSE statement
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 183

state 166

    (111) while_statement -> WHILE . factor statement
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 184

state 167

    (124) return_statement -> RETURN . expression SEMICOLON
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 185
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 168

    (122) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 186


state 169

    (123) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 187


state 170

    (115) switch_statement -> SWITCH . factor LBRACE case_list default_case RBRACE
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 188

state 171

    (112) do_while_statement -> DO . statement WHILE factor SEMICOLON
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 189
    factor                         shift and go to state 62
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 172

    (113) for_statement -> FOR . LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

    LPAREN          shift and go to state 190


state 173

    (54) init_declarator -> ID EQUALS LBRACE initializer_list RBRACE .

    SEMICOLON       reduce using rule 54 (init_declarator -> ID EQUALS LBRACE initializer_list RBRACE .)
    COMMA           reduce using rule 54 (init_declarator -> ID EQUALS LBRACE initializer_list RBRACE .)


state 174

    (56) initializer_list -> initializer_list COMMA . expression
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 191
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 175

    (44) struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID . SEMICOLON

    SEMICOLON       shift and go to state 192


state 176

    (47) struct_member -> type_specifier ID SEMICOLON .

    RBRACE          reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    ID              reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    CONST           reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    VOLATILE        reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    AUTO            reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    REGISTER        reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    STATIC          reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    EXTERN          reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    SIGNED          reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    UNSIGNED        reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    SHORT           reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    LONG            reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    INT             reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    CHAR            reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    FLOAT           reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    DOUBLE          reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)
    VOID            reduce using rule 47 (struct_member -> type_specifier ID SEMICOLON .)


state 177

    (128) argument_list -> argument_list COMMA expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RPAREN          reduce using rule 128 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 128 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 178

    (24) compound_statement -> LBRACE statement_list RBRACE .

    ID              reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    CONST           reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    VOLATILE        reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    AUTO            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    REGISTER        reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    STATIC          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    EXTERN          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    SIGNED          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    UNSIGNED        reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    SHORT           reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    LONG            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    SWITCH          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    TYPEDEF         reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    STRUCT          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    INTEGER         reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT_N         reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    DEFAULT         reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)
    CASE            reduce using rule 24 (compound_statement -> LBRACE statement_list RBRACE .)


state 179

    (26) statement_list -> statement_list statement .

    RBRACE          reduce using rule 26 (statement_list -> statement_list statement .)
    ID              reduce using rule 26 (statement_list -> statement_list statement .)
    IF              reduce using rule 26 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 26 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 26 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 26 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 26 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 26 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 26 (statement_list -> statement_list statement .)
    DO              reduce using rule 26 (statement_list -> statement_list statement .)
    FOR             reduce using rule 26 (statement_list -> statement_list statement .)
    TYPEDEF         reduce using rule 26 (statement_list -> statement_list statement .)
    STRUCT          reduce using rule 26 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 26 (statement_list -> statement_list statement .)
    FLOAT_N         reduce using rule 26 (statement_list -> statement_list statement .)
    STRING          reduce using rule 26 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 26 (statement_list -> statement_list statement .)
    CONST           reduce using rule 26 (statement_list -> statement_list statement .)
    VOLATILE        reduce using rule 26 (statement_list -> statement_list statement .)
    AUTO            reduce using rule 26 (statement_list -> statement_list statement .)
    REGISTER        reduce using rule 26 (statement_list -> statement_list statement .)
    STATIC          reduce using rule 26 (statement_list -> statement_list statement .)
    EXTERN          reduce using rule 26 (statement_list -> statement_list statement .)
    SIGNED          reduce using rule 26 (statement_list -> statement_list statement .)
    UNSIGNED        reduce using rule 26 (statement_list -> statement_list statement .)
    SHORT           reduce using rule 26 (statement_list -> statement_list statement .)
    LONG            reduce using rule 26 (statement_list -> statement_list statement .)
    INT             reduce using rule 26 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 26 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 26 (statement_list -> statement_list statement .)
    DOUBLE          reduce using rule 26 (statement_list -> statement_list statement .)
    VOID            reduce using rule 26 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 26 (statement_list -> statement_list statement .)
    CASE            reduce using rule 26 (statement_list -> statement_list statement .)


state 180

    (33) statement -> function_call SEMICOLON .

    RBRACE          reduce using rule 33 (statement -> function_call SEMICOLON .)
    ID              reduce using rule 33 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 33 (statement -> function_call SEMICOLON .)
    WHILE           reduce using rule 33 (statement -> function_call SEMICOLON .)
    RETURN          reduce using rule 33 (statement -> function_call SEMICOLON .)
    LBRACE          reduce using rule 33 (statement -> function_call SEMICOLON .)
    BREAK           reduce using rule 33 (statement -> function_call SEMICOLON .)
    CONTINUE        reduce using rule 33 (statement -> function_call SEMICOLON .)
    SWITCH          reduce using rule 33 (statement -> function_call SEMICOLON .)
    DO              reduce using rule 33 (statement -> function_call SEMICOLON .)
    FOR             reduce using rule 33 (statement -> function_call SEMICOLON .)
    TYPEDEF         reduce using rule 33 (statement -> function_call SEMICOLON .)
    STRUCT          reduce using rule 33 (statement -> function_call SEMICOLON .)
    INTEGER         reduce using rule 33 (statement -> function_call SEMICOLON .)
    FLOAT_N         reduce using rule 33 (statement -> function_call SEMICOLON .)
    STRING          reduce using rule 33 (statement -> function_call SEMICOLON .)
    LPAREN          reduce using rule 33 (statement -> function_call SEMICOLON .)
    CONST           reduce using rule 33 (statement -> function_call SEMICOLON .)
    VOLATILE        reduce using rule 33 (statement -> function_call SEMICOLON .)
    AUTO            reduce using rule 33 (statement -> function_call SEMICOLON .)
    REGISTER        reduce using rule 33 (statement -> function_call SEMICOLON .)
    STATIC          reduce using rule 33 (statement -> function_call SEMICOLON .)
    EXTERN          reduce using rule 33 (statement -> function_call SEMICOLON .)
    SIGNED          reduce using rule 33 (statement -> function_call SEMICOLON .)
    UNSIGNED        reduce using rule 33 (statement -> function_call SEMICOLON .)
    SHORT           reduce using rule 33 (statement -> function_call SEMICOLON .)
    LONG            reduce using rule 33 (statement -> function_call SEMICOLON .)
    INT             reduce using rule 33 (statement -> function_call SEMICOLON .)
    CHAR            reduce using rule 33 (statement -> function_call SEMICOLON .)
    FLOAT           reduce using rule 33 (statement -> function_call SEMICOLON .)
    DOUBLE          reduce using rule 33 (statement -> function_call SEMICOLON .)
    VOID            reduce using rule 33 (statement -> function_call SEMICOLON .)
    ELSE            reduce using rule 33 (statement -> function_call SEMICOLON .)
    DEFAULT         reduce using rule 33 (statement -> function_call SEMICOLON .)
    CASE            reduce using rule 33 (statement -> function_call SEMICOLON .)


state 181

    (39) statement -> expression SEMICOLON .

    RBRACE          reduce using rule 39 (statement -> expression SEMICOLON .)
    ID              reduce using rule 39 (statement -> expression SEMICOLON .)
    IF              reduce using rule 39 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 39 (statement -> expression SEMICOLON .)
    BREAK           reduce using rule 39 (statement -> expression SEMICOLON .)
    CONTINUE        reduce using rule 39 (statement -> expression SEMICOLON .)
    SWITCH          reduce using rule 39 (statement -> expression SEMICOLON .)
    DO              reduce using rule 39 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 39 (statement -> expression SEMICOLON .)
    TYPEDEF         reduce using rule 39 (statement -> expression SEMICOLON .)
    STRUCT          reduce using rule 39 (statement -> expression SEMICOLON .)
    INTEGER         reduce using rule 39 (statement -> expression SEMICOLON .)
    FLOAT_N         reduce using rule 39 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 39 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 39 (statement -> expression SEMICOLON .)
    CONST           reduce using rule 39 (statement -> expression SEMICOLON .)
    VOLATILE        reduce using rule 39 (statement -> expression SEMICOLON .)
    AUTO            reduce using rule 39 (statement -> expression SEMICOLON .)
    REGISTER        reduce using rule 39 (statement -> expression SEMICOLON .)
    STATIC          reduce using rule 39 (statement -> expression SEMICOLON .)
    EXTERN          reduce using rule 39 (statement -> expression SEMICOLON .)
    SIGNED          reduce using rule 39 (statement -> expression SEMICOLON .)
    UNSIGNED        reduce using rule 39 (statement -> expression SEMICOLON .)
    SHORT           reduce using rule 39 (statement -> expression SEMICOLON .)
    LONG            reduce using rule 39 (statement -> expression SEMICOLON .)
    INT             reduce using rule 39 (statement -> expression SEMICOLON .)
    CHAR            reduce using rule 39 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 39 (statement -> expression SEMICOLON .)
    DOUBLE          reduce using rule 39 (statement -> expression SEMICOLON .)
    VOID            reduce using rule 39 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 39 (statement -> expression SEMICOLON .)
    DEFAULT         reduce using rule 39 (statement -> expression SEMICOLON .)
    CASE            reduce using rule 39 (statement -> expression SEMICOLON .)


state 182

    (77) assignment -> ID EQUALS . expression SEMICOLON
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 193
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 183

    (109) if_statement -> IF factor . statement
    (110) if_statement -> IF factor . statement ELSE statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    factor                         shift and go to state 62
    statement                      shift and go to state 194
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 184

    (111) while_statement -> WHILE factor . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    factor                         shift and go to state 62
    statement                      shift and go to state 195
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 185

    (124) return_statement -> RETURN expression . SEMICOLON
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 196
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 186

    (122) break_statement -> BREAK SEMICOLON .

    RBRACE          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    ID              reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    SWITCH          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    DO              reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    TYPEDEF         reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    STRUCT          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    INTEGER         reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    FLOAT_N         reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    STRING          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    CONST           reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    VOLATILE        reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    AUTO            reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    REGISTER        reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    STATIC          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    EXTERN          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    SIGNED          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    UNSIGNED        reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    SHORT           reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    LONG            reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    INT             reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    CHAR            reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    FLOAT           reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    DOUBLE          reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    VOID            reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    DEFAULT         reduce using rule 122 (break_statement -> BREAK SEMICOLON .)
    CASE            reduce using rule 122 (break_statement -> BREAK SEMICOLON .)


state 187

    (123) continue_statement -> CONTINUE SEMICOLON .

    RBRACE          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    ID              reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    LBRACE          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    SWITCH          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    DO              reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    TYPEDEF         reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    STRUCT          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    INTEGER         reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    FLOAT_N         reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    STRING          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    CONST           reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    VOLATILE        reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    AUTO            reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    REGISTER        reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    STATIC          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    EXTERN          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    SIGNED          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    UNSIGNED        reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    SHORT           reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    LONG            reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    INT             reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    CHAR            reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    FLOAT           reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    DOUBLE          reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    VOID            reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    DEFAULT         reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)
    CASE            reduce using rule 123 (continue_statement -> CONTINUE SEMICOLON .)


state 188

    (115) switch_statement -> SWITCH factor . LBRACE case_list default_case RBRACE

    LBRACE          shift and go to state 197


state 189

    (112) do_while_statement -> DO statement . WHILE factor SEMICOLON

    WHILE           shift and go to state 198


state 190

    (113) for_statement -> FOR LPAREN . declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 201
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 199
    expression                     shift and go to state 200
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    non_empty_pre_type_specifier   shift and go to state 20
    factor                         shift and go to state 62
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 191

    (56) initializer_list -> initializer_list COMMA expression .
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RBRACE          reduce using rule 56 (initializer_list -> initializer_list COMMA expression .)
    COMMA           reduce using rule 56 (initializer_list -> initializer_list COMMA expression .)
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 192

    (44) struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .

    ID              reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    TYPEDEF         reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    STRUCT          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    CONST           reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    VOLATILE        reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    AUTO            reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    REGISTER        reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    STATIC          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    EXTERN          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    SIGNED          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    UNSIGNED        reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    SHORT           reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    LONG            reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    INT             reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    CHAR            reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    FLOAT           reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    DOUBLE          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    VOID            reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    RBRACE          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    IF              reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    WHILE           reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    RETURN          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    LBRACE          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    BREAK           reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    CONTINUE        reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    SWITCH          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    DO              reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    FOR             reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    INTEGER         reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    FLOAT_N         reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    STRING          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    LPAREN          reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    ELSE            reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    DEFAULT         reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)
    CASE            reduce using rule 44 (struct_declaration -> STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON .)


state 193

    (77) assignment -> ID EQUALS expression . SEMICOLON
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 202
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 194

    (109) if_statement -> IF factor statement .
    (110) if_statement -> IF factor statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 109 (if_statement -> IF factor statement .)
    ID              reduce using rule 109 (if_statement -> IF factor statement .)
    IF              reduce using rule 109 (if_statement -> IF factor statement .)
    WHILE           reduce using rule 109 (if_statement -> IF factor statement .)
    RETURN          reduce using rule 109 (if_statement -> IF factor statement .)
    LBRACE          reduce using rule 109 (if_statement -> IF factor statement .)
    BREAK           reduce using rule 109 (if_statement -> IF factor statement .)
    CONTINUE        reduce using rule 109 (if_statement -> IF factor statement .)
    SWITCH          reduce using rule 109 (if_statement -> IF factor statement .)
    DO              reduce using rule 109 (if_statement -> IF factor statement .)
    FOR             reduce using rule 109 (if_statement -> IF factor statement .)
    TYPEDEF         reduce using rule 109 (if_statement -> IF factor statement .)
    STRUCT          reduce using rule 109 (if_statement -> IF factor statement .)
    INTEGER         reduce using rule 109 (if_statement -> IF factor statement .)
    FLOAT_N         reduce using rule 109 (if_statement -> IF factor statement .)
    STRING          reduce using rule 109 (if_statement -> IF factor statement .)
    LPAREN          reduce using rule 109 (if_statement -> IF factor statement .)
    CONST           reduce using rule 109 (if_statement -> IF factor statement .)
    VOLATILE        reduce using rule 109 (if_statement -> IF factor statement .)
    AUTO            reduce using rule 109 (if_statement -> IF factor statement .)
    REGISTER        reduce using rule 109 (if_statement -> IF factor statement .)
    STATIC          reduce using rule 109 (if_statement -> IF factor statement .)
    EXTERN          reduce using rule 109 (if_statement -> IF factor statement .)
    SIGNED          reduce using rule 109 (if_statement -> IF factor statement .)
    UNSIGNED        reduce using rule 109 (if_statement -> IF factor statement .)
    SHORT           reduce using rule 109 (if_statement -> IF factor statement .)
    LONG            reduce using rule 109 (if_statement -> IF factor statement .)
    INT             reduce using rule 109 (if_statement -> IF factor statement .)
    CHAR            reduce using rule 109 (if_statement -> IF factor statement .)
    FLOAT           reduce using rule 109 (if_statement -> IF factor statement .)
    DOUBLE          reduce using rule 109 (if_statement -> IF factor statement .)
    VOID            reduce using rule 109 (if_statement -> IF factor statement .)
    DEFAULT         reduce using rule 109 (if_statement -> IF factor statement .)
    CASE            reduce using rule 109 (if_statement -> IF factor statement .)
    ELSE            shift and go to state 203

  ! ELSE            [ reduce using rule 109 (if_statement -> IF factor statement .) ]


state 195

    (111) while_statement -> WHILE factor statement .

    RBRACE          reduce using rule 111 (while_statement -> WHILE factor statement .)
    ID              reduce using rule 111 (while_statement -> WHILE factor statement .)
    IF              reduce using rule 111 (while_statement -> WHILE factor statement .)
    WHILE           reduce using rule 111 (while_statement -> WHILE factor statement .)
    RETURN          reduce using rule 111 (while_statement -> WHILE factor statement .)
    LBRACE          reduce using rule 111 (while_statement -> WHILE factor statement .)
    BREAK           reduce using rule 111 (while_statement -> WHILE factor statement .)
    CONTINUE        reduce using rule 111 (while_statement -> WHILE factor statement .)
    SWITCH          reduce using rule 111 (while_statement -> WHILE factor statement .)
    DO              reduce using rule 111 (while_statement -> WHILE factor statement .)
    FOR             reduce using rule 111 (while_statement -> WHILE factor statement .)
    TYPEDEF         reduce using rule 111 (while_statement -> WHILE factor statement .)
    STRUCT          reduce using rule 111 (while_statement -> WHILE factor statement .)
    INTEGER         reduce using rule 111 (while_statement -> WHILE factor statement .)
    FLOAT_N         reduce using rule 111 (while_statement -> WHILE factor statement .)
    STRING          reduce using rule 111 (while_statement -> WHILE factor statement .)
    LPAREN          reduce using rule 111 (while_statement -> WHILE factor statement .)
    CONST           reduce using rule 111 (while_statement -> WHILE factor statement .)
    VOLATILE        reduce using rule 111 (while_statement -> WHILE factor statement .)
    AUTO            reduce using rule 111 (while_statement -> WHILE factor statement .)
    REGISTER        reduce using rule 111 (while_statement -> WHILE factor statement .)
    STATIC          reduce using rule 111 (while_statement -> WHILE factor statement .)
    EXTERN          reduce using rule 111 (while_statement -> WHILE factor statement .)
    SIGNED          reduce using rule 111 (while_statement -> WHILE factor statement .)
    UNSIGNED        reduce using rule 111 (while_statement -> WHILE factor statement .)
    SHORT           reduce using rule 111 (while_statement -> WHILE factor statement .)
    LONG            reduce using rule 111 (while_statement -> WHILE factor statement .)
    INT             reduce using rule 111 (while_statement -> WHILE factor statement .)
    CHAR            reduce using rule 111 (while_statement -> WHILE factor statement .)
    FLOAT           reduce using rule 111 (while_statement -> WHILE factor statement .)
    DOUBLE          reduce using rule 111 (while_statement -> WHILE factor statement .)
    VOID            reduce using rule 111 (while_statement -> WHILE factor statement .)
    ELSE            reduce using rule 111 (while_statement -> WHILE factor statement .)
    DEFAULT         reduce using rule 111 (while_statement -> WHILE factor statement .)
    CASE            reduce using rule 111 (while_statement -> WHILE factor statement .)


state 196

    (124) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    CONTINUE        reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    TYPEDEF         reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    STRUCT          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    INTEGER         reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT_N         reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    CONST           reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    VOLATILE        reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    AUTO            reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    REGISTER        reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    STATIC          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    EXTERN          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    SIGNED          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    UNSIGNED        reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    SHORT           reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    LONG            reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 124 (return_statement -> RETURN expression SEMICOLON .)


state 197

    (115) switch_statement -> SWITCH factor LBRACE . case_list default_case RBRACE
    (116) case_list -> . case
    (117) case_list -> . case_list case
    (118) case_list -> . empty
    (119) case -> . CASE expression COLON statement_list
    (129) empty -> .

  ! shift/reduce conflict for CASE resolved as shift
    CASE            shift and go to state 207
    DEFAULT         reduce using rule 129 (empty -> .)
    RBRACE          reduce using rule 129 (empty -> .)

  ! CASE            [ reduce using rule 129 (empty -> .) ]

    case_list                      shift and go to state 204
    case                           shift and go to state 205
    empty                          shift and go to state 206

state 198

    (112) do_while_statement -> DO statement WHILE . factor SEMICOLON
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    ID              shift and go to state 114
    LPAREN          shift and go to state 63

    factor                         shift and go to state 208

state 199

    (113) for_statement -> FOR LPAREN declaration . expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 209
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 200

    (114) for_statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN statement
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 210
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 201

    (59) type_specifier -> ID .
    (125) function_call -> ID . LPAREN RPAREN
    (126) function_call -> ID . LPAREN argument_list RPAREN
    (105) factor -> ID .
    (106) factor -> ID . INCREMENT
    (107) factor -> ID . DECREMENT

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    ID              reduce using rule 59 (type_specifier -> ID .)
    LPAREN          shift and go to state 73
    TIMES           reduce using rule 105 (factor -> ID .)
    DIVIDE          reduce using rule 105 (factor -> ID .)
    MOD             reduce using rule 105 (factor -> ID .)
    LSHIFT          reduce using rule 105 (factor -> ID .)
    RSHIFT          reduce using rule 105 (factor -> ID .)
    SEMICOLON       reduce using rule 105 (factor -> ID .)
    PLUS            reduce using rule 105 (factor -> ID .)
    MINUS           reduce using rule 105 (factor -> ID .)
    LT              reduce using rule 105 (factor -> ID .)
    LE              reduce using rule 105 (factor -> ID .)
    GT              reduce using rule 105 (factor -> ID .)
    GE              reduce using rule 105 (factor -> ID .)
    NE              reduce using rule 105 (factor -> ID .)
    COMPARATOR      reduce using rule 105 (factor -> ID .)
    BITWISE_AND     reduce using rule 105 (factor -> ID .)
    BITWISE_OR      reduce using rule 105 (factor -> ID .)
    BITWISE_XOR     reduce using rule 105 (factor -> ID .)
    AND             reduce using rule 105 (factor -> ID .)
    OR              reduce using rule 105 (factor -> ID .)
    DOT             reduce using rule 105 (factor -> ID .)
    INCREMENT       shift and go to state 74
    DECREMENT       shift and go to state 75

  ! INCREMENT       [ reduce using rule 105 (factor -> ID .) ]
  ! DECREMENT       [ reduce using rule 105 (factor -> ID .) ]


state 202

    (77) assignment -> ID EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    BREAK           reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    CONTINUE        reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    SWITCH          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    DO              reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    TYPEDEF         reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    STRUCT          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    INTEGER         reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    FLOAT_N         reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    CONST           reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    VOLATILE        reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    AUTO            reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    REGISTER        reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    STATIC          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    EXTERN          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    SIGNED          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    UNSIGNED        reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    SHORT           reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    LONG            reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    CHAR            reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    DOUBLE          reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    VOID            reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    DEFAULT         reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)
    CASE            reduce using rule 77 (assignment -> ID EQUALS expression SEMICOLON .)


state 203

    (110) if_statement -> IF factor statement ELSE . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    factor                         shift and go to state 62
    statement                      shift and go to state 211
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 204

    (115) switch_statement -> SWITCH factor LBRACE case_list . default_case RBRACE
    (117) case_list -> case_list . case
    (120) default_case -> . DEFAULT COLON statement_list
    (121) default_case -> . empty
    (119) case -> . CASE expression COLON statement_list
    (129) empty -> .

    DEFAULT         shift and go to state 214
    CASE            shift and go to state 207
    RBRACE          reduce using rule 129 (empty -> .)

    default_case                   shift and go to state 212
    case                           shift and go to state 213
    empty                          shift and go to state 215

state 205

    (116) case_list -> case .

    DEFAULT         reduce using rule 116 (case_list -> case .)
    CASE            reduce using rule 116 (case_list -> case .)
    RBRACE          reduce using rule 116 (case_list -> case .)


state 206

    (118) case_list -> empty .

    DEFAULT         reduce using rule 118 (case_list -> empty .)
    CASE            reduce using rule 118 (case_list -> empty .)
    RBRACE          reduce using rule 118 (case_list -> empty .)


state 207

    (119) case -> CASE . expression COLON statement_list
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 216
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 208

    (112) do_while_statement -> DO statement WHILE factor . SEMICOLON

    SEMICOLON       shift and go to state 217


state 209

    (113) for_statement -> FOR LPAREN declaration expression . SEMICOLON expression RPAREN statement
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 218
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 210

    (114) for_statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 219
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 211

    (110) if_statement -> IF factor statement ELSE statement .

    RBRACE          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    ID              reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    IF              reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    WHILE           reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    RETURN          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    LBRACE          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    BREAK           reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    CONTINUE        reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    SWITCH          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    DO              reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    FOR             reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    TYPEDEF         reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    STRUCT          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    INTEGER         reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    FLOAT_N         reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    STRING          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    LPAREN          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    CONST           reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    VOLATILE        reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    AUTO            reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    REGISTER        reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    STATIC          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    EXTERN          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    SIGNED          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    UNSIGNED        reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    SHORT           reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    LONG            reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    INT             reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    CHAR            reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    FLOAT           reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    DOUBLE          reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    VOID            reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    ELSE            reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    DEFAULT         reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)
    CASE            reduce using rule 110 (if_statement -> IF factor statement ELSE statement .)


state 212

    (115) switch_statement -> SWITCH factor LBRACE case_list default_case . RBRACE

    RBRACE          shift and go to state 220


state 213

    (117) case_list -> case_list case .

    DEFAULT         reduce using rule 117 (case_list -> case_list case .)
    CASE            reduce using rule 117 (case_list -> case_list case .)
    RBRACE          reduce using rule 117 (case_list -> case_list case .)


state 214

    (120) default_case -> DEFAULT . COLON statement_list

    COLON           shift and go to state 221


state 215

    (121) default_case -> empty .

    RBRACE          reduce using rule 121 (default_case -> empty .)


state 216

    (119) case -> CASE expression . COLON statement_list
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    COLON           shift and go to state 222
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 217

    (112) do_while_statement -> DO statement WHILE factor SEMICOLON .

    RBRACE          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    ID              reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    IF              reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    WHILE           reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    RETURN          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    LBRACE          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    BREAK           reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    CONTINUE        reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    SWITCH          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    DO              reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    FOR             reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    TYPEDEF         reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    STRUCT          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    INTEGER         reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    FLOAT_N         reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    STRING          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    LPAREN          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    CONST           reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    VOLATILE        reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    AUTO            reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    REGISTER        reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    STATIC          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    EXTERN          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    SIGNED          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    UNSIGNED        reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    SHORT           reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    LONG            reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    INT             reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    CHAR            reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    FLOAT           reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    DOUBLE          reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    VOID            reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    ELSE            reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    DEFAULT         reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)
    CASE            reduce using rule 112 (do_while_statement -> DO statement WHILE factor SEMICOLON .)


state 218

    (113) for_statement -> FOR LPAREN declaration expression SEMICOLON . expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 223
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 219

    (114) for_statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN statement
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 224
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 220

    (115) switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .

    RBRACE          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    ID              reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    IF              reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    WHILE           reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    RETURN          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    LBRACE          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    BREAK           reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    CONTINUE        reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    SWITCH          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    DO              reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    FOR             reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    TYPEDEF         reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    STRUCT          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    INTEGER         reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    FLOAT_N         reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    STRING          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    LPAREN          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    CONST           reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    VOLATILE        reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    AUTO            reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    REGISTER        reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    STATIC          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    EXTERN          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    SIGNED          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    UNSIGNED        reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    SHORT           reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    LONG            reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    INT             reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    CHAR            reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    FLOAT           reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    DOUBLE          reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    VOID            reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    ELSE            reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    DEFAULT         reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)
    CASE            reduce using rule 115 (switch_statement -> SWITCH factor LBRACE case_list default_case RBRACE .)


state 221

    (120) default_case -> DEFAULT COLON . statement_list
    (25) statement_list -> . statement
    (26) statement_list -> . statement_list statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    statement_list                 shift and go to state 225
    statement                      shift and go to state 150
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 222

    (119) case -> CASE expression COLON . statement_list
    (25) statement_list -> . statement
    (26) statement_list -> . statement_list statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expression                     shift and go to state 163
    statement_list                 shift and go to state 226
    statement                      shift and go to state 150
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 223

    (113) for_statement -> FOR LPAREN declaration expression SEMICOLON expression . RPAREN statement
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RPAREN          shift and go to state 227
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 224

    (114) for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 58
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63

    expression                     shift and go to state 228
    term                           shift and go to state 60
    function_call                  shift and go to state 61
    factor                         shift and go to state 62

state 225

    (120) default_case -> DEFAULT COLON statement_list .
    (26) statement_list -> statement_list . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 120 (default_case -> DEFAULT COLON statement_list .)
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 179
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    expression                     shift and go to state 163
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 226

    (119) case -> CASE expression COLON statement_list .
    (26) statement_list -> statement_list . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    DEFAULT         reduce using rule 119 (case -> CASE expression COLON statement_list .)
    CASE            reduce using rule 119 (case -> CASE expression COLON statement_list .)
    RBRACE          reduce using rule 119 (case -> CASE expression COLON statement_list .)
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expression                     shift and go to state 163
    statement                      shift and go to state 179
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 227

    (113) for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 151
    expression                     shift and go to state 163
    statement                      shift and go to state 229
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 228

    (114) for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN statement
    (79) expression -> expression . PLUS term
    (80) expression -> expression . MINUS term
    (81) expression -> expression . LT term
    (82) expression -> expression . LE term
    (83) expression -> expression . GT term
    (84) expression -> expression . GE term
    (85) expression -> expression . NE term
    (86) expression -> expression . COMPARATOR term
    (87) expression -> expression . BITWISE_AND term
    (88) expression -> expression . BITWISE_OR term
    (89) expression -> expression . BITWISE_XOR term
    (90) expression -> expression . AND term
    (91) expression -> expression . OR term
    (92) expression -> expression . DOT ID
    (93) expression -> expression . INCREMENT
    (94) expression -> expression . DECREMENT

    RPAREN          shift and go to state 230
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    GT              shift and go to state 80
    GE              shift and go to state 81
    NE              shift and go to state 82
    COMPARATOR      shift and go to state 83
    BITWISE_AND     shift and go to state 84
    BITWISE_OR      shift and go to state 85
    BITWISE_XOR     shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    DOT             shift and go to state 89
    INCREMENT       shift and go to state 90
    DECREMENT       shift and go to state 91


state 229

    (113) for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .

    RBRACE          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    RETURN          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    LBRACE          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    BREAK           reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    CONTINUE        reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    SWITCH          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    DO              reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    TYPEDEF         reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    STRUCT          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    INTEGER         reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    FLOAT_N         reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    STRING          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    CONST           reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    VOLATILE        reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    AUTO            reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    REGISTER        reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    STATIC          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    EXTERN          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    SIGNED          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    UNSIGNED        reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    SHORT           reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    LONG            reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    INT             reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    CHAR            reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    FLOAT           reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    DOUBLE          reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    VOID            reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    DEFAULT         reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)
    CASE            reduce using rule 113 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN statement .)


state 230

    (114) for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . statement
    (27) statement -> . declaration
    (28) statement -> . assignment
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . return_statement
    (32) statement -> . compound_statement
    (33) statement -> . function_call SEMICOLON
    (34) statement -> . break_statement
    (35) statement -> . continue_statement
    (36) statement -> . switch_statement
    (37) statement -> . do_while_statement
    (38) statement -> . for_statement
    (39) statement -> . expression SEMICOLON
    (40) declaration -> . type_specifier init_declarator_list SEMICOLON
    (41) declaration -> . typedef_declaration
    (42) declaration -> . struct_declaration
    (77) assignment -> . ID EQUALS expression SEMICOLON
    (109) if_statement -> . IF factor statement
    (110) if_statement -> . IF factor statement ELSE statement
    (111) while_statement -> . WHILE factor statement
    (124) return_statement -> . RETURN expression SEMICOLON
    (24) compound_statement -> . LBRACE statement_list RBRACE
    (125) function_call -> . ID LPAREN RPAREN
    (126) function_call -> . ID LPAREN argument_list RPAREN
    (122) break_statement -> . BREAK SEMICOLON
    (123) continue_statement -> . CONTINUE SEMICOLON
    (115) switch_statement -> . SWITCH factor LBRACE case_list default_case RBRACE
    (112) do_while_statement -> . DO statement WHILE factor SEMICOLON
    (113) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN statement
    (114) for_statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (78) expression -> . term
    (79) expression -> . expression PLUS term
    (80) expression -> . expression MINUS term
    (81) expression -> . expression LT term
    (82) expression -> . expression LE term
    (83) expression -> . expression GT term
    (84) expression -> . expression GE term
    (85) expression -> . expression NE term
    (86) expression -> . expression COMPARATOR term
    (87) expression -> . expression BITWISE_AND term
    (88) expression -> . expression BITWISE_OR term
    (89) expression -> . expression BITWISE_XOR term
    (90) expression -> . expression AND term
    (91) expression -> . expression OR term
    (92) expression -> . expression DOT ID
    (93) expression -> . expression INCREMENT
    (94) expression -> . expression DECREMENT
    (95) expression -> . function_call
    (57) type_specifier -> . non_empty_pre_type_specifier base_type
    (58) type_specifier -> . non_empty_pre_type_specifier ID
    (59) type_specifier -> . ID
    (43) typedef_declaration -> . TYPEDEF struct_declaration
    (44) struct_declaration -> . STRUCT optional_id LBRACE struct_members RBRACE ID SEMICOLON
    (96) term -> . factor
    (97) term -> . term TIMES factor
    (98) term -> . term DIVIDE factor
    (99) term -> . term MOD factor
    (100) term -> . term LSHIFT factor
    (101) term -> . term RSHIFT factor
    (60) non_empty_pre_type_specifier -> . pre_type_specifier
    (102) factor -> . INTEGER
    (103) factor -> . FLOAT_N
    (104) factor -> . STRING
    (105) factor -> . ID
    (106) factor -> . ID INCREMENT
    (107) factor -> . ID DECREMENT
    (108) factor -> . LPAREN expression RPAREN
    (66) pre_type_specifier -> . CONST
    (67) pre_type_specifier -> . VOLATILE
    (68) pre_type_specifier -> . AUTO
    (69) pre_type_specifier -> . REGISTER
    (70) pre_type_specifier -> . STATIC
    (71) pre_type_specifier -> . EXTERN
    (72) pre_type_specifier -> . SIGNED
    (73) pre_type_specifier -> . UNSIGNED
    (74) pre_type_specifier -> . SHORT
    (75) pre_type_specifier -> . LONG
    (76) pre_type_specifier -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 164
    IF              shift and go to state 165
    WHILE           shift and go to state 166
    RETURN          shift and go to state 167
    LBRACE          shift and go to state 138
    BREAK           shift and go to state 168
    CONTINUE        shift and go to state 169
    SWITCH          shift and go to state 170
    DO              shift and go to state 171
    FOR             shift and go to state 172
    TYPEDEF         shift and go to state 37
    STRUCT          shift and go to state 38
    INTEGER         shift and go to state 64
    FLOAT_N         shift and go to state 65
    STRING          shift and go to state 66
    LPAREN          shift and go to state 63
    CONST           shift and go to state 22
    VOLATILE        shift and go to state 23
    AUTO            shift and go to state 24
    REGISTER        shift and go to state 25
    STATIC          shift and go to state 26
    EXTERN          shift and go to state 27
    SIGNED          shift and go to state 28
    UNSIGNED        shift and go to state 29
    SHORT           shift and go to state 30
    LONG            shift and go to state 31
    INT             reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    DOUBLE          reduce using rule 129 (empty -> .)
    VOID            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expression                     shift and go to state 163
    statement                      shift and go to state 231
    declaration                    shift and go to state 151
    assignment                     shift and go to state 152
    if_statement                   shift and go to state 153
    while_statement                shift and go to state 154
    return_statement               shift and go to state 155
    compound_statement             shift and go to state 156
    function_call                  shift and go to state 157
    break_statement                shift and go to state 158
    continue_statement             shift and go to state 159
    switch_statement               shift and go to state 160
    do_while_statement             shift and go to state 161
    for_statement                  shift and go to state 162
    type_specifier                 shift and go to state 34
    typedef_declaration            shift and go to state 35
    struct_declaration             shift and go to state 36
    factor                         shift and go to state 62
    term                           shift and go to state 60
    non_empty_pre_type_specifier   shift and go to state 20
    pre_type_specifier             shift and go to state 21
    empty                          shift and go to state 32

state 231

    (114) for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    RBRACE          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RETURN          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACE          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    BREAK           reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    CONTINUE        reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    SWITCH          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    DO              reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    TYPEDEF         reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRUCT          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    INTEGER         reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FLOAT_N         reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    CONST           reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    VOLATILE        reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    AUTO            reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    REGISTER        reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STATIC          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    EXTERN          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    SIGNED          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    UNSIGNED        reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    SHORT           reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LONG            reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    INT             reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    CHAR            reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FLOAT           reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    DOUBLE          reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    VOID            reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    DEFAULT         reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    CASE            reduce using rule 114 (for_statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CONST in state 10 resolved as shift
WARNING: shift/reduce conflict for VOLATILE in state 10 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 10 resolved as shift
WARNING: shift/reduce conflict for REGISTER in state 10 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 10 resolved as shift
WARNING: shift/reduce conflict for EXTERN in state 10 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 10 resolved as shift
WARNING: shift/reduce conflict for UNSIGNED in state 10 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 10 resolved as shift
WARNING: shift/reduce conflict for LONG in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 40 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 58 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 58 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 107 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 114 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 114 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 157 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 164 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 194 resolved as shift
WARNING: shift/reduce conflict for CASE in state 197 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 201 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 201 resolved as shift
WARNING: shift/reduce conflict for ID in state 203 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 230 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (optional_declaration_list -> declaration_list)
WARNING: rejected rule (empty -> <empty>) in state 10
